{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface Navigator: original interface defined","status":"PASS"},{"name":"Partial interface Navigator: member names are unique","status":"PASS"},{"name":"Partial interface WorkerNavigator: original interface defined","status":"PASS"},{"name":"Partial interface WorkerNavigator: member names are unique","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: original interface mixin defined","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Partial interface mixin NavigatorID: member names are unique","status":"PASS"},{"name":"Partial interface Window: member names are unique","status":"PASS"},{"name":"ServiceWorker includes AbstractWorker: member names are unique","status":"PASS"},{"name":"Window includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"WorkerGlobalScope includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorContentUtils: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorCookies: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorPlugins: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"Window includes AnimationFrameProvider: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"Window includes WindowSessionStorage: member names are unique","status":"PASS"},{"name":"Window includes WindowLocalStorage: member names are unique","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorker interface object length","status":"PASS"},{"name":"ServiceWorker interface object name","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorker interface: attribute scriptURL","status":"PASS"},{"name":"ServiceWorker interface: attribute state","status":"PASS"},{"name":"ServiceWorker interface: operation postMessage(any, sequence<object>)","status":"PASS"},{"name":"ServiceWorker interface: operation postMessage(any, optional PostMessageOptions)","status":"PASS"},{"name":"ServiceWorker interface: attribute onstatechange","status":"PASS"},{"name":"ServiceWorker must be primary interface of serviceWorker","status":"PASS"},{"name":"Stringification of serviceWorker","status":"PASS"},{"name":"ServiceWorker interface: serviceWorker must inherit property \"scriptURL\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: serviceWorker must inherit property \"state\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: serviceWorker must inherit property \"postMessage(any, sequence<object>)\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: calling postMessage(any, sequence<object>) on serviceWorker with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorker interface: serviceWorker must inherit property \"postMessage(any, optional PostMessageOptions)\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: calling postMessage(any, optional PostMessageOptions) on serviceWorker with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorker interface: serviceWorker must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorkerRegistration interface object length","status":"PASS"},{"name":"ServiceWorkerRegistration interface object name","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute installing","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute waiting","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute active","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute navigationPreload","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute scope","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute updateViaCache","status":"PASS"},{"name":"ServiceWorkerRegistration interface: operation update()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: operation unregister()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute onupdatefound","status":"PASS"},{"name":"ServiceWorkerRegistration must be primary interface of registration","status":"PASS"},{"name":"Stringification of registration","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"installing\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"waiting\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"active\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"navigationPreload\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"scope\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"updateViaCache\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"update()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"unregister()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registration must inherit property \"onupdatefound\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: existence and properties of interface object","status":"FAIL"},{"name":"ServiceWorkerContainer interface object length","status":"FAIL"},{"name":"ServiceWorkerContainer interface object name","status":"FAIL"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ServiceWorkerContainer interface: attribute controller","status":"FAIL"},{"name":"ServiceWorkerContainer interface: attribute ready","status":"FAIL"},{"name":"ServiceWorkerContainer interface: operation register(USVString, optional RegistrationOptions)","status":"FAIL"},{"name":"ServiceWorkerContainer interface: operation getRegistration(optional USVString)","status":"FAIL"},{"name":"ServiceWorkerContainer interface: operation getRegistrations()","status":"FAIL"},{"name":"ServiceWorkerContainer interface: operation startMessages()","status":"FAIL"},{"name":"ServiceWorkerContainer interface: attribute oncontrollerchange","status":"FAIL"},{"name":"ServiceWorkerContainer interface: attribute onmessage","status":"FAIL"},{"name":"ServiceWorkerContainer interface: attribute onmessageerror","status":"FAIL"},{"name":"ServiceWorkerContainer must be primary interface of navigator.serviceWorker","status":"FAIL"},{"name":"Stringification of navigator.serviceWorker","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"controller\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"ready\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"register(USVString, optional RegistrationOptions)\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: calling register(USVString, optional RegistrationOptions) on navigator.serviceWorker with too few arguments must throw TypeError","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"getRegistration(optional USVString)\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: calling getRegistration(optional USVString) on navigator.serviceWorker with too few arguments must throw TypeError","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"getRegistrations()\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"startMessages()\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"oncontrollerchange\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"onmessage\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"onmessageerror\" with the proper type","status":"FAIL"},{"name":"NavigationPreloadManager interface: existence and properties of interface object","status":"PASS"},{"name":"NavigationPreloadManager interface object length","status":"PASS"},{"name":"NavigationPreloadManager interface object name","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"NavigationPreloadManager interface: operation enable()","status":"PASS"},{"name":"NavigationPreloadManager interface: operation disable()","status":"PASS"},{"name":"NavigationPreloadManager interface: operation setHeaderValue(ByteString)","status":"PASS"},{"name":"NavigationPreloadManager interface: operation getState()","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface object length","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface object name","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via Object.setPrototypeOf should throw a TypeError","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via __proto__ should throw a TypeError","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to a new value via Reflect.setPrototypeOf should return false","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via Object.setPrototypeOf should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via __proto__ should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of interface prototype object - setting to its original value via Reflect.setPrototypeOf should return true","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute clients","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute registration","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute serviceWorker","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: operation skipWaiting()","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute oninstall","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute onactivate","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute onfetch","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute onmessage","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: attribute onmessageerror","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via Object.setPrototypeOf should throw a TypeError","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via __proto__ should throw a TypeError","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to a new value via Reflect.setPrototypeOf should return false","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via Object.setPrototypeOf should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via __proto__ should not throw","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: internal [[SetPrototypeOf]] method of global platform object - setting to its original value via Reflect.setPrototypeOf should return true","status":"PASS"},{"name":"ServiceWorkerGlobalScope must be primary interface of self","status":"PASS"},{"name":"Stringification of self","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"clients\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"registration\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"serviceWorker\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"skipWaiting()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"oninstall\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onactivate\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onfetch\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onmessage\" with the proper type","status":"PASS"},{"name":"ServiceWorkerGlobalScope interface: self must inherit property \"onmessageerror\" with the proper type","status":"PASS"},{"name":"WorkerGlobalScope interface: self must inherit property \"caches\" with the proper type","status":"PASS"},{"name":"Client interface: existence and properties of interface object","status":"PASS"},{"name":"Client interface object length","status":"PASS"},{"name":"Client interface object name","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Client interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Client interface: attribute url","status":"PASS"},{"name":"Client interface: attribute frameType","status":"PASS"},{"name":"Client interface: attribute id","status":"PASS"},{"name":"Client interface: attribute type","status":"PASS"},{"name":"Client interface: operation postMessage(any, sequence<object>)","status":"PASS"},{"name":"Client interface: operation postMessage(any, optional PostMessageOptions)","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface object","status":"PASS"},{"name":"WindowClient interface object length","status":"PASS"},{"name":"WindowClient interface object name","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WindowClient interface: attribute visibilityState","status":"PASS"},{"name":"WindowClient interface: attribute focused","status":"PASS"},{"name":"WindowClient interface: attribute ancestorOrigins","status":"FAIL"},{"name":"WindowClient interface: operation focus()","status":"PASS"},{"name":"WindowClient interface: operation navigate(USVString)","status":"PASS"},{"name":"Clients interface: existence and properties of interface object","status":"PASS"},{"name":"Clients interface object length","status":"PASS"},{"name":"Clients interface object name","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Clients interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Clients interface: operation get(DOMString)","status":"PASS"},{"name":"Clients interface: operation matchAll(optional ClientQueryOptions)","status":"PASS"},{"name":"Clients interface: operation openWindow(USVString)","status":"PASS"},{"name":"Clients interface: operation claim()","status":"PASS"},{"name":"Clients must be primary interface of clients","status":"PASS"},{"name":"Stringification of clients","status":"PASS"},{"name":"Clients interface: clients must inherit property \"get(DOMString)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling get(DOMString) on clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: clients must inherit property \"matchAll(optional ClientQueryOptions)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling matchAll(optional ClientQueryOptions) on clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: clients must inherit property \"openWindow(USVString)\" with the proper type","status":"PASS"},{"name":"Clients interface: calling openWindow(USVString) on clients with too few arguments must throw TypeError","status":"PASS"},{"name":"Clients interface: clients must inherit property \"claim()\" with the proper type","status":"PASS"},{"name":"ExtendableEvent interface: existence and properties of interface object","status":"PASS"},{"name":"ExtendableEvent interface object length","status":"PASS"},{"name":"ExtendableEvent interface object name","status":"PASS"},{"name":"ExtendableEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ExtendableEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ExtendableEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ExtendableEvent interface: operation waitUntil(Promise<any>)","status":"PASS"},{"name":"ExtendableEvent must be primary interface of new ExtendableEvent(\"type\")","status":"PASS"},{"name":"Stringification of new ExtendableEvent(\"type\")","status":"PASS"},{"name":"ExtendableEvent interface: new ExtendableEvent(\"type\") must inherit property \"waitUntil(Promise<any>)\" with the proper type","status":"PASS"},{"name":"ExtendableEvent interface: calling waitUntil(Promise<any>) on new ExtendableEvent(\"type\") with too few arguments must throw TypeError","status":"PASS"},{"name":"FetchEvent interface: existence and properties of interface object","status":"PASS"},{"name":"FetchEvent interface object length","status":"PASS"},{"name":"FetchEvent interface object name","status":"PASS"},{"name":"FetchEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"FetchEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"FetchEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"FetchEvent interface: attribute request","status":"PASS"},{"name":"FetchEvent interface: attribute preloadResponse","status":"PASS"},{"name":"FetchEvent interface: attribute clientId","status":"PASS"},{"name":"FetchEvent interface: attribute resultingClientId","status":"PASS"},{"name":"FetchEvent interface: attribute replacesClientId","status":"FAIL"},{"name":"FetchEvent interface: attribute handled","status":"PASS"},{"name":"FetchEvent interface: operation respondWith(Promise<Response>)","status":"PASS"},{"name":"FetchEvent must be primary interface of new FetchEvent(\"type\")","status":"FAIL"},{"name":"Stringification of new FetchEvent(\"type\")","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"request\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"preloadResponse\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"clientId\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"resultingClientId\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"replacesClientId\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"handled\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: new FetchEvent(\"type\") must inherit property \"respondWith(Promise<Response>)\" with the proper type","status":"FAIL"},{"name":"FetchEvent interface: calling respondWith(Promise<Response>) on new FetchEvent(\"type\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"ExtendableEvent interface: new FetchEvent(\"type\") must inherit property \"waitUntil(Promise<any>)\" with the proper type","status":"FAIL"},{"name":"ExtendableEvent interface: calling waitUntil(Promise<any>) on new FetchEvent(\"type\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"ExtendableMessageEvent interface: existence and properties of interface object","status":"PASS"},{"name":"ExtendableMessageEvent interface object length","status":"PASS"},{"name":"ExtendableMessageEvent interface object name","status":"PASS"},{"name":"ExtendableMessageEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ExtendableMessageEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ExtendableMessageEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ExtendableMessageEvent interface: attribute data","status":"PASS"},{"name":"ExtendableMessageEvent interface: attribute origin","status":"PASS"},{"name":"ExtendableMessageEvent interface: attribute lastEventId","status":"PASS"},{"name":"ExtendableMessageEvent interface: attribute source","status":"PASS"},{"name":"ExtendableMessageEvent interface: attribute ports","status":"PASS"},{"name":"Cache interface: existence and properties of interface object","status":"PASS"},{"name":"Cache interface object length","status":"PASS"},{"name":"Cache interface object name","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Cache interface: operation match(RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation matchAll(optional RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation add(RequestInfo)","status":"PASS"},{"name":"Cache interface: operation addAll(sequence<RequestInfo>)","status":"PASS"},{"name":"Cache interface: operation put(RequestInfo, Response)","status":"PASS"},{"name":"Cache interface: operation delete(RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation keys(optional RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache must be primary interface of self.cacheInstance","status":"PASS"},{"name":"Stringification of self.cacheInstance","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"match(RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling match(RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"matchAll(optional RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling matchAll(optional RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"add(RequestInfo)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling add(RequestInfo) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"addAll(sequence<RequestInfo>)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling addAll(sequence<RequestInfo>) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"put(RequestInfo, Response)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling put(RequestInfo, Response) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"delete(RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling delete(RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"keys(optional RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling keys(optional RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface object","status":"PASS"},{"name":"CacheStorage interface object length","status":"PASS"},{"name":"CacheStorage interface object name","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CacheStorage interface: operation match(RequestInfo, optional MultiCacheQueryOptions)","status":"PASS"},{"name":"CacheStorage interface: operation has(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation open(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation delete(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation keys()","status":"PASS"},{"name":"CacheStorage must be primary interface of caches","status":"PASS"},{"name":"Stringification of caches","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"match(RequestInfo, optional MultiCacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling match(RequestInfo, optional MultiCacheQueryOptions) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"has(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling has(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"open(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling open(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"delete(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling delete(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"keys()\" with the proper type","status":"PASS"},{"name":"WorkerGlobalScope interface: attribute caches","status":"PASS"},{"name":"WorkerNavigator interface: attribute serviceWorker","status":"FAIL"}]}