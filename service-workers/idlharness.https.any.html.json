{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface Navigator: original interface defined","status":"PASS"},{"name":"Partial interface Navigator: member names are unique","status":"PASS"},{"name":"Partial interface WorkerNavigator: original interface defined","status":"PASS"},{"name":"Partial interface WorkerNavigator: member names are unique","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: original interface mixin defined","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Partial interface mixin NavigatorID: member names are unique","status":"PASS"},{"name":"Partial interface Window: member names are unique","status":"PASS"},{"name":"ServiceWorker includes AbstractWorker: member names are unique","status":"PASS"},{"name":"Window includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"WorkerGlobalScope includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorContentUtils: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorCookies: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorPlugins: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"Window includes AnimationFrameProvider: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"Window includes WindowSessionStorage: member names are unique","status":"PASS"},{"name":"Window includes WindowLocalStorage: member names are unique","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorker interface object length","status":"PASS"},{"name":"ServiceWorker interface object name","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorker interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorker interface: attribute scriptURL","status":"PASS"},{"name":"ServiceWorker interface: attribute state","status":"PASS"},{"name":"ServiceWorker interface: operation postMessage(any, sequence<object>)","status":"PASS"},{"name":"ServiceWorker interface: operation postMessage(any, optional PostMessageOptions)","status":"PASS"},{"name":"ServiceWorker interface: attribute onstatechange","status":"PASS"},{"name":"ServiceWorker must be primary interface of registrationInstance.installing","status":"PASS"},{"name":"Stringification of registrationInstance.installing","status":"PASS"},{"name":"ServiceWorker interface: registrationInstance.installing must inherit property \"scriptURL\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: registrationInstance.installing must inherit property \"state\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: registrationInstance.installing must inherit property \"postMessage(any, sequence<object>)\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: calling postMessage(any, sequence<object>) on registrationInstance.installing with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorker interface: registrationInstance.installing must inherit property \"postMessage(any, optional PostMessageOptions)\" with the proper type","status":"PASS"},{"name":"ServiceWorker interface: calling postMessage(any, optional PostMessageOptions) on registrationInstance.installing with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorker interface: registrationInstance.installing must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorkerRegistration interface object length","status":"PASS"},{"name":"ServiceWorkerRegistration interface object name","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute installing","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute waiting","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute active","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute navigationPreload","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: attribute scope","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute updateViaCache","status":"PASS"},{"name":"ServiceWorkerRegistration interface: operation update()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: operation unregister()","status":"PASS"},{"name":"ServiceWorkerRegistration interface: attribute onupdatefound","status":"PASS"},{"name":"ServiceWorkerRegistration must be primary interface of registrationInstance","status":"PASS"},{"name":"Stringification of registrationInstance","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"installing\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"waiting\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"active\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"navigationPreload\" with the proper type","status":"FAIL"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"scope\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"updateViaCache\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"update()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"unregister()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerRegistration interface: registrationInstance must inherit property \"onupdatefound\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: existence and properties of interface object","status":"PASS"},{"name":"ServiceWorkerContainer interface object length","status":"PASS"},{"name":"ServiceWorkerContainer interface object name","status":"PASS"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ServiceWorkerContainer interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ServiceWorkerContainer interface: attribute controller","status":"PASS"},{"name":"ServiceWorkerContainer interface: attribute ready","status":"PASS"},{"name":"ServiceWorkerContainer interface: operation register(USVString, optional RegistrationOptions)","status":"PASS"},{"name":"ServiceWorkerContainer interface: operation getRegistration(optional USVString)","status":"PASS"},{"name":"ServiceWorkerContainer interface: operation getRegistrations()","status":"PASS"},{"name":"ServiceWorkerContainer interface: operation startMessages()","status":"PASS"},{"name":"ServiceWorkerContainer interface: attribute oncontrollerchange","status":"PASS"},{"name":"ServiceWorkerContainer interface: attribute onmessage","status":"PASS"},{"name":"ServiceWorkerContainer interface: attribute onmessageerror","status":"PASS"},{"name":"ServiceWorkerContainer must be primary interface of navigator.serviceWorker","status":"PASS"},{"name":"Stringification of navigator.serviceWorker","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"controller\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"ready\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"register(USVString, optional RegistrationOptions)\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: calling register(USVString, optional RegistrationOptions) on navigator.serviceWorker with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"getRegistration(optional USVString)\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: calling getRegistration(optional USVString) on navigator.serviceWorker with too few arguments must throw TypeError","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"getRegistrations()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"startMessages()\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"oncontrollerchange\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"onmessage\" with the proper type","status":"PASS"},{"name":"ServiceWorkerContainer interface: navigator.serviceWorker must inherit property \"onmessageerror\" with the proper type","status":"PASS"},{"name":"NavigationPreloadManager interface: existence and properties of interface object","status":"FAIL"},{"name":"NavigationPreloadManager interface object length","status":"FAIL"},{"name":"NavigationPreloadManager interface object name","status":"FAIL"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"NavigationPreloadManager interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"NavigationPreloadManager interface: operation enable()","status":"FAIL"},{"name":"NavigationPreloadManager interface: operation disable()","status":"FAIL"},{"name":"NavigationPreloadManager interface: operation setHeaderValue(ByteString)","status":"FAIL"},{"name":"NavigationPreloadManager interface: operation getState()","status":"FAIL"},{"name":"ServiceWorkerGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"Client interface: existence and properties of interface object","status":"PASS"},{"name":"WindowClient interface: existence and properties of interface object","status":"PASS"},{"name":"Clients interface: existence and properties of interface object","status":"PASS"},{"name":"ExtendableEvent interface: existence and properties of interface object","status":"PASS"},{"name":"FetchEvent interface: existence and properties of interface object","status":"PASS"},{"name":"ExtendableMessageEvent interface: existence and properties of interface object","status":"PASS"},{"name":"Cache interface: existence and properties of interface object","status":"PASS"},{"name":"Cache interface object length","status":"PASS"},{"name":"Cache interface object name","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Cache interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Cache interface: operation match(RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation matchAll(optional RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation add(RequestInfo)","status":"PASS"},{"name":"Cache interface: operation addAll(sequence<RequestInfo>)","status":"PASS"},{"name":"Cache interface: operation put(RequestInfo, Response)","status":"PASS"},{"name":"Cache interface: operation delete(RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache interface: operation keys(optional RequestInfo, optional CacheQueryOptions)","status":"PASS"},{"name":"Cache must be primary interface of self.cacheInstance","status":"PASS"},{"name":"Stringification of self.cacheInstance","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"match(RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling match(RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"matchAll(optional RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling matchAll(optional RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"add(RequestInfo)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling add(RequestInfo) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"addAll(sequence<RequestInfo>)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling addAll(sequence<RequestInfo>) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"put(RequestInfo, Response)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling put(RequestInfo, Response) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"delete(RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling delete(RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"Cache interface: self.cacheInstance must inherit property \"keys(optional RequestInfo, optional CacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"Cache interface: calling keys(optional RequestInfo, optional CacheQueryOptions) on self.cacheInstance with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface object","status":"PASS"},{"name":"CacheStorage interface object length","status":"PASS"},{"name":"CacheStorage interface object name","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CacheStorage interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CacheStorage interface: operation match(RequestInfo, optional MultiCacheQueryOptions)","status":"PASS"},{"name":"CacheStorage interface: operation has(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation open(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation delete(DOMString)","status":"PASS"},{"name":"CacheStorage interface: operation keys()","status":"PASS"},{"name":"CacheStorage must be primary interface of caches","status":"PASS"},{"name":"Stringification of caches","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"match(RequestInfo, optional MultiCacheQueryOptions)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling match(RequestInfo, optional MultiCacheQueryOptions) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"has(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling has(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"open(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling open(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"delete(DOMString)\" with the proper type","status":"PASS"},{"name":"CacheStorage interface: calling delete(DOMString) on caches with too few arguments must throw TypeError","status":"PASS"},{"name":"CacheStorage interface: caches must inherit property \"keys()\" with the proper type","status":"PASS"},{"name":"Window interface: attribute caches","status":"PASS"},{"name":"Navigator interface: attribute serviceWorker","status":"PASS"}]}