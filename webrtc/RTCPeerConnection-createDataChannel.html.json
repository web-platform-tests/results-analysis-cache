{"status":"OK","subtests":[{"name":"createDataChannel with no argument should throw TypeError","status":"PASS"},{"name":"createDataChannel with closed connection should throw InvalidStateError","status":"PASS"},{"name":"createDataChannel attribute default values","status":"FAIL"},{"name":"createDataChannel with provided parameters should initialize attributes to provided values","status":"FAIL"},{"name":"createDataChannel with label \"foo\" should succeed","status":"PASS"},{"name":"createDataChannel with label null should succeed","status":"FAIL"},{"name":"createDataChannel with label undefined should succeed","status":"PASS"},{"name":"createDataChannel with label lone surrogate should succeed","status":"PASS"},{"name":"createDataChannel with ordered false should succeed","status":"PASS"},{"name":"createDataChannel with ordered null/undefined should succeed","status":"PASS"},{"name":"createDataChannel with maxPacketLifeTime 0 should succeed","status":"PASS"},{"name":"createDataChannel with maxRetransmits 0 should succeed","status":"PASS"},{"name":"createDataChannel with both maxPacketLifeTime and maxRetransmits undefined should succeed","status":"PASS"},{"name":"createDataChannel with both maxPacketLifeTime and maxRetransmits should throw TypeError","status":"PASS"},{"name":"createDataChannel with protocol \"foo\" should succeed","status":"PASS"},{"name":"createDataChannel with protocol null should succeed","status":"PASS"},{"name":"createDataChannel with protocol undefined should succeed","status":"PASS"},{"name":"createDataChannel with protocol lone surrogate should succeed","status":"PASS"},{"name":"createDataChannel with id 0 and negotiated not set should succeed, but not set the channel's id","status":"FAIL"},{"name":"createDataChannel with id 1 and negotiated not set should succeed, but not set the channel's id","status":"FAIL"},{"name":"createDataChannel with id 65534 and negotiated not set should succeed, but not set the channel's id","status":"FAIL"},{"name":"createDataChannel with id 65535 and negotiated not set should succeed, but not set the channel's id","status":"FAIL"},{"name":"createDataChannel with id 0 and negotiated true should succeed, and set the channel's id","status":"PASS"},{"name":"createDataChannel with id 1 and negotiated true should succeed, and set the channel's id","status":"PASS"},{"name":"createDataChannel with id 65534 and negotiated true should succeed, and set the channel's id","status":"FAIL"},{"name":"createDataChannel with id -1 and negotiated not set should throw TypeError","status":"PASS"},{"name":"createDataChannel with id 65536 and negotiated not set should throw TypeError","status":"PASS"},{"name":"createDataChannel with id -1 should throw TypeError","status":"PASS"},{"name":"createDataChannel with id 65535 should throw TypeError","status":"PASS"},{"name":"createDataChannel with id 65536 should throw TypeError","status":"PASS"},{"name":"createDataChannel with too long label should throw TypeError","status":"FAIL"},{"name":"createDataChannel with too long label (2 byte unicode) should throw TypeError","status":"FAIL"},{"name":"createDataChannel with same label used twice should not throw","status":"PASS"},{"name":"createDataChannel with negotiated true and id should succeed","status":"PASS"},{"name":"createDataChannel with too long protocol should throw TypeError","status":"FAIL"},{"name":"createDataChannel with too long protocol (2 byte unicode) should throw TypeError","status":"FAIL"},{"name":"createDataChannel with maximum length label and protocol should succeed","status":"PASS"},{"name":"createDataChannel with negotiated false should succeed","status":"PASS"},{"name":"createDataChannel with negotiated false and id 42 should ignore the id","status":"FAIL"},{"name":"createDataChannel with negotiated true and id not defined should throw TypeError","status":"FAIL"},{"name":"Channels created (after setRemoteDescription) should have id assigned","status":"FAIL"},{"name":"Reusing a data channel id that is in use should throw OperationError","status":"FAIL"},{"name":"Reusing a data channel id that is in use (after setRemoteDescription) should throw OperationError","status":"FAIL"},{"name":"Reusing a data channel id that is in use (after setRemoteDescription, negotiated via DCEP) should throw OperationError","status":"FAIL"},{"name":"New datachannel should be in the connecting state after creation (after connection establishment)","status":"PASS"},{"name":"addTrack, then creating datachannel, should negotiate properly","status":"PASS"},{"name":"addTrack, then creating datachannel, should negotiate properly when max-bundle is used","status":"PASS"},{"name":"New negotiated datachannel should be in the connecting state after creation (after connection establishment)","status":"PASS"},{"name":"addTrack, then creating negotiated datachannel, should negotiate properly","status":"PASS"},{"name":"addTrack, then creating negotiated datachannel, should negotiate properly when max-bundle is used","status":"PASS"}]}