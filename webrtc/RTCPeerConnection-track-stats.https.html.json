{"status":"OK","subtests":[{"name":"addTrack() without setLocalDescription() yields track stats","status":"PASS"},{"name":"addTrack() with setLocalDescription() yields track stats","status":"PASS"},{"name":"O/A exchange yields outbound RTP stream stats for sending track","status":"PASS"},{"name":"O/A exchange yields inbound RTP stream stats for receiving track","status":"PASS"},{"name":"replaceTrack() before offer: new track attachment stats present","status":"PASS"},{"name":"replaceTrack() after offer, before answer: new track attachment stats present","status":"PASS"},{"name":"replaceTrack() after answer: new track attachment stats present","status":"PASS"},{"name":"replaceTrack(): original track attachment stats present after replacing","status":"FAIL"},{"name":"RTCRtpSender.getStats() contains only outbound-rtp and related stats","status":"PASS"},{"name":"RTCRtpReceiver.getStats() contains only inbound-rtp and related stats","status":"PASS"},{"name":"RTCPeerConnection.getStats(sendingTrack) is the same as RTCRtpSender.getStats()","status":"PASS"},{"name":"RTCPeerConnection.getStats(receivingTrack) is the same as RTCRtpReceiver.getStats()","status":"PASS"},{"name":"RTCPeerConnection.getStats(track) throws InvalidAccessError when there are zero senders or receivers for the track","status":"PASS"},{"name":"RTCPeerConnection.getStats(track) throws InvalidAccessError when there are multiple senders for the track","status":"PASS"}]}