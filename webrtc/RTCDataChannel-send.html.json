{"status":"TIMEOUT","subtests":[{"name":"Calling send() when data channel is in connecting state should throw InvalidStateError","status":"PASS"},{"name":"Datachannel should be able to send simple string and receive as string","status":"TIMEOUT"},{"name":"Datachannel should be able to send unicode string and receive as unicode string","status":"NOTRUN"},{"name":"Datachannel should ignore binaryType and always receive string message as string","status":"NOTRUN"},{"name":"Datachannel should be able to send an empty string and receive an empty string","status":"NOTRUN"},{"name":"Datachannel should be able to send Uint8Array message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Datachannel should be able to send ArrayBuffer message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Datachannel should be able to send an empty ArrayBuffer message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Datachannel should be able to send Blob message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Datachannel should be able to send ArrayBuffer message and receive as Blob","status":"NOTRUN"},{"name":"Datachannel binaryType should receive message as Blob by default","status":"NOTRUN"},{"name":"Datachannel sending multiple messages with different types should succeed and be received","status":"TIMEOUT"},{"name":"Datachannel send() up to max size should succeed, above max size should fail","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send simple string and receive as string","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send unicode string and receive as unicode string","status":"NOTRUN"},{"name":"Negotiated datachannel should ignore binaryType and always receive string message as string","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send an empty string and receive an empty string","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send Uint8Array message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send ArrayBuffer message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send an empty ArrayBuffer message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send Blob message and receive as ArrayBuffer","status":"NOTRUN"},{"name":"Negotiated datachannel should be able to send ArrayBuffer message and receive as Blob","status":"NOTRUN"},{"name":"Negotiated datachannel binaryType should receive message as Blob by default","status":"NOTRUN"},{"name":"Negotiated datachannel sending multiple messages with different types should succeed and be received","status":"TIMEOUT"},{"name":"Negotiated datachannel send() up to max size should succeed, above max size should fail","status":"NOTRUN"}]}