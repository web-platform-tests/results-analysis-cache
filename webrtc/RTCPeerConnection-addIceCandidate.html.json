{"status":"OK","subtests":[{"name":"Add ICE candidate before setting remote description should reject with InvalidStateError","status":"FAIL"},{"name":"addIceCandidate({\"candidate\":\"\",\"sdpMid\":null,\"sdpMLineIndex\":null}) works","status":"PASS"},{"name":"addIceCandidate({\"candidate\":\"\",\"sdpMid\":null,\"sdpMLineIndex\":null}) adds a=end-of-candidates to both m-sections","status":"FAIL"},{"name":"addIceCandidate(undefined) works","status":"PASS"},{"name":"addIceCandidate(undefined) adds a=end-of-candidates to both m-sections","status":"FAIL"},{"name":"addIceCandidate(null) works","status":"PASS"},{"name":"addIceCandidate(null) adds a=end-of-candidates to both m-sections","status":"FAIL"},{"name":"addIceCandidate({}) works","status":"PASS"},{"name":"addIceCandidate({}) adds a=end-of-candidates to both m-sections","status":"FAIL"},{"name":"addIceCandidate({}) in stable should work, and add a=end-of-candidates to both m-sections","status":"FAIL"},{"name":"addIceCandidate({usernameFragment: usernameFragment1, sdpMid: sdpMid1}) should work, and add a=end-of-candidates to the first m-section","status":"FAIL"},{"name":"addIceCandidate({usernameFragment: usernameFragment2, sdpMLineIndex: 1}) should work, and add a=end-of-candidates to the first m-section","status":"FAIL"},{"name":"addIceCandidate({usernameFragment: \"no such ufrag\"}) should not work","status":"FAIL"},{"name":"Add ICE candidate after setting remote description should succeed","status":"PASS"},{"name":"Add ICE candidate with RTCIceCandidate should succeed","status":"PASS"},{"name":"Add candidate with only valid sdpMid should succeed","status":"PASS"},{"name":"Add candidate with only valid sdpMid and RTCIceCandidate should succeed","status":"PASS"},{"name":"Add candidate with only valid sdpMLineIndex should succeed","status":"PASS"},{"name":"addIceCandidate with first sdpMid and sdpMLineIndex add candidate to first media stream","status":"PASS"},{"name":"addIceCandidate with second sdpMid and sdpMLineIndex should add candidate to second media stream","status":"PASS"},{"name":"Add candidate for first media stream with null usernameFragment should add candidate to first media stream","status":"PASS"},{"name":"Adding multiple candidates should add candidates to their corresponding media stream","status":"PASS"},{"name":"Add with empty candidate string (end of candidates) should succeed","status":"FAIL"},{"name":"Add candidate with both sdpMid and sdpMLineIndex manually set to null should reject with TypeError","status":"PASS"},{"name":"addIceCandidate with a candidate and neither sdpMid nor sdpMLineIndex should reject with TypeError","status":"PASS"},{"name":"Add candidate with only valid candidate string should reject with TypeError","status":"PASS"},{"name":"Add candidate with invalid candidate string and both sdpMid and sdpMLineIndex null should reject with TypeError","status":"PASS"},{"name":"Add candidate with invalid sdpMid should reject with OperationError","status":"PASS"},{"name":"Add candidate with invalid sdpMLineIndex should reject with OperationError","status":"PASS"},{"name":"Invalid sdpMLineIndex should be ignored if valid sdpMid is provided","status":"PASS"},{"name":"Add candidate for media stream 2 with null usernameFragment should succeed","status":"PASS"},{"name":"Add candidate with invalid usernameFragment should reject with OperationError","status":"FAIL"},{"name":"Add candidate with invalid candidate string should reject with OperationError","status":"PASS"},{"name":"Add candidate with sdpMid belonging to different usernameFragment should reject with OperationError","status":"FAIL"}]}