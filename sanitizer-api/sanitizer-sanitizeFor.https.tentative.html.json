{"status":"OK","subtests":[{"name":"Sanitizer.sanitizeFor() should throw.","status":"PASS"},{"name":"Sanitizer.sanitizeFor() with one argument should throw.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"script\", ...) should fail.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"iframe\", ...) should fail.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"object\", ...) should fail.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"div\", ...) should pass.","status":"PASS"},{"name":"Sanitizer.sanitizeFor function shouldn't load the image.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(element, ..)","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"div\", \"<em>Hello</em>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"div\", \"<td>data</td>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"template\", \"<em>Hello</em>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"template\", \"<td>data</td>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"table\", \"<em>Hello</em>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor(\"table\", \"<td>data</td>\") obeys parse context.","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: string","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: html fragment","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: broken html","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: empty object","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: number","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: zeros","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: arithmetic","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: empty string","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: undefined","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: document","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: html without close tag","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: scripts for default configs","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: script not as root","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: script deeper in the tree","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: onclick scripts","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: plaintext","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: xmp","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: invalid config_input","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: empty removeElements list","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: test html without close tag with removeElements list ['div']","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: default behavior for custom elements","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: allow custom elements","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: allow custom elements with allow elements","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: disallow custom elements","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: allow custom elements with drop list contains [\"custom-element\"]","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: test script with [\"script\"] as removeElements list","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeElements list [\"test-element\", \"i\"]}","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeElements list [\"dl\", \"p\"]}","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list [\"p\"]","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list has no influence to removeElements","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: empty removeAttributes list with id attribute","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes list [\"id\"] with id attribute","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes list [\"data-attribute-with-dashes\"] with dom dataset js access","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: elements list with <p> attributes: [\"title\"] and div attributes: [\"id\"] lists","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list with <p> removeAttributes: [\"title\"]  and div removeAttributes: [\"id\"] lists","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list with <div> attributes: [\"id\"] and removeAttributes: [\"id\"] lists","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list with <div> attributes: [\"id\", \"title\"] does not override empty attributes: [] list","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list with <div> attributes: [\"id\", \"title\"] does not override removeAttributes: [\"id\", \"title\"] list","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements list with <div> removeAttributes: [\"id\", \"title\"] is effective even with attributes: [\"id\", \"title\"] list","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: attributes list [\"id\"] with id attribute and onclick scripts","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: attributes list has no influence to removeAttributes list","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: Template element","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: HTMLAnchorElement with javascript protocal","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLAnchorElement with javascript protocal start with space","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLAnchorElement","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLAreaElement with javascript protocal","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLAreaElement with javascript protocal start with space","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLAreaElement","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLFormElement with javascript action","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLFormElement with javascript action start with space","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLFormElement","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLInputElement with javascript formaction","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLInputElement with javascript formaction start with space","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLInputElement","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLButtonElement with javascript formaction","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLButtonElement with javascript formaction start with space","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTMLButtonElement","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: malformed HTML","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments; comments not allowed","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments; comments","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments; !comments","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments deeper in the tree","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments deeper in the tree, comments","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: HTML with comments deeper in the tree, !comments","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: Unknown HTML names (HTMLUnknownElement instances) should not match elements parsed as non-HTML namespaces.","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: Unknown HTML names (HTMLUnknownElement instances) should not match elements parsed as non-HTML namespaces when nested.","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeElements list [\"I\", \"DL\"]}","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeElements list [\"i\", \"dl\"]}","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeElements list [\"i\", \"dl\"]} with uppercase HTML","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes list [\"ID\"] with id attribute","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes list [\"ID\"] with ID attribute","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes list [\"id\"] with ID attribute","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeElements with unknown elements and without unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: replaceWithChildrenElements with unknown elements and without unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements with unknown elements and without unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeElements with unknown elements and with unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: replaceWithChildrenElements with unknown elements and with unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: elements with unknown elements and with unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: attributes: unknown attributes and without unknownMarkup","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: attributes: unknown attributes and with unknownMarkup","status":"FAIL"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes: unknown attributes and without unknownMarkup","status":"PASS"},{"name":"Sanitizer.sanitizeFor with config: removeAttributes unknown attributes and with allowUnknownMarkup","status":"PASS"}]}