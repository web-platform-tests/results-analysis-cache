{"status":"OK","subtests":[{"name":"script.setHTML should fail.","status":"PASS"},{"name":"iframe.setHTML should fail.","status":"PASS"},{"name":"object.setHTML should fail.","status":"PASS"},{"name":"div.setHTML should pass.","status":"PASS"},{"name":"Sanitizer: <div>.setHTML(\"<em>Hello</em>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: <div>.setHTML(\"<td>data</td>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: <template>.setHTML(\"<em>Hello</em>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: <template>.setHTML(\"<td>data</td>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: <table>.setHTML(\"<em>Hello</em>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: <table>.setHTML(\"<td>data</td>\", ...) obeys parse context.","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: string","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: html fragment","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: broken html","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: empty object","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: number","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: zeros","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: arithmetic","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: empty string","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: undefined","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: document","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: html without close tag","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: scripts for default configs","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: script not as root","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: script deeper in the tree","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: onclick scripts","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: plaintext","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: xmp","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: invalid config_input","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: empty dropElements list","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: test html without close tag with dropElements list ['div']","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: default behavior for custom elements","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allow custom elements","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allow custom elements with allow elements","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: disallow custom elements","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allow custom elements with drop list contains [\"custom-element\"]","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: test script with [\"script\"] as dropElements list","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements list [\"test-element\", \"i\"]}","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements list [\"dl\", \"p\"]}","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allowElements list [\"p\"]","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allowElements list has no influence to dropElements","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"style\": [\"p\"]} with style attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: empty dropAttributes list with id attribute","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"id\": [\"*\"]} with id attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"data-attribute-with-dashes\": [\"*\"]} with dom dataset js access","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: allowAttributes list {\"id\": [\"div\"]} with id attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: allowAttributes list {\"id\": [\"*\"]} with id attribute and onclick scripts","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: allowAttributes list has no influence to dropAttributes","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: Template element","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAnchorElement with javascript protocal","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAnchorElement with javascript protocal start with space","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAnchorElement","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAreaElement with javascript protocal","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAreaElement with javascript protocal start with space","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLAreaElement","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLFormElement with javascript action","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLFormElement with javascript action start with space","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLFormElement","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLInputElement with javascript formaction","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLInputElement with javascript formaction start with space","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLInputElement","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLButtonElement with javascript formaction","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLButtonElement with javascript formaction start with space","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTMLButtonElement","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: malformed HTML","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments; comments not allowed","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments; allowComments","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments; !allowComments","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments deeper in the tree","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments deeper in the tree, allowComments","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: HTML with comments deeper in the tree, !allowComments","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: Unknown HTML names (HTMLUnknownElement instances) should not match elements parsed as non-HTML namespaces.","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: Unknown HTML names (HTMLUnknownElement instances) should not match elements parsed as non-HTML namespaces when nested.","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements list [\"I\", \"DL\"]}","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements list [\"i\", \"dl\"]}","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements list [\"i\", \"dl\"]} with uppercase HTML","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"ID\": [\"*\"]} with id attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"ID\": [\"*\"]} with ID attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes list {\"id\": [\"*\"]} with ID attribute","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropElements with unknown elements and without allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: blockElements with unknown elements and without allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allowElements with unknown elements and without allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: dropElements with unknown elements and with allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: blockElements with unknown elements and with allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allowElements with unknown elements and with allowUnknownMarkup","status":"PASS"},{"name":"Sanitizer: Element.setHTML with config: allowAttributes unknown attributes and without allowUnknownMarkup","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: allowAttributes unknown attributes and with allowUnknownMarkup","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes unknown attributes and without allowUnknownMarkup","status":"FAIL"},{"name":"Sanitizer: Element.setHTML with config: dropAttributes unknown attributes and with allowUnknownMarkup","status":"FAIL"},{"name":"Sanitizer: Element.setHTML options dictionary #0 uses default.","status":"PASS"},{"name":"Sanitizer: Element.setHTML options dictionary #1 uses default.","status":"PASS"},{"name":"Sanitizer: Element.setHTML options dictionary #2 uses default.","status":"PASS"},{"name":"Sanitizer: Element.setHTML options dictionary #3 uses default.","status":"PASS"},{"name":"Sanitizer: Element.setHTML options dictionary #4 uses default.","status":"PASS"},{"name":"Sanitizer: Element.setHTML invalid options dictionary #0","status":"PASS"},{"name":"Sanitizer: Element.setHTML invalid options dictionary #1","status":"PASS"},{"name":"Sanitizer: Element.setHTML invalid options dictionary #2","status":"PASS"},{"name":"Sanitizer: Element.setHTML invalid options dictionary #3","status":"PASS"},{"name":"Sanitizer: Element.setHTML with sanitizer instance.","status":"PASS"}]}