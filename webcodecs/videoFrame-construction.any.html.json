{"status":"OK","subtests":[{"name":"Test we can construct a VideoFrame.","status":"PASS"},{"name":"Test closed VideoFrame.","status":"PASS"},{"name":"Test we can construct a VideoFrame with a negative timestamp.","status":"PASS"},{"name":"Test we can construct an odd-sized VideoFrame.","status":"PASS"},{"name":"Test constructing w/ unusable image argument throws: HAVE_NOTHING <video>.","status":"PASS"},{"name":"Test constructing w/ unusable image argument throws: emtpy Canvas.","status":"PASS"},{"name":"Test constructing w/ unusable image argument throws: closed ImageBitmap.","status":"PASS"},{"name":"Test constructing w/ unusable image argument throws: closed VideoFrame.","status":"PASS"},{"name":"Test invalid CanvasImageSource constructed VideoFrames","status":"PASS"},{"name":"Test visibleRect metadata override where source display size = visible size","status":"PASS"},{"name":"Test visibleRect metadata override where source display width = 2 * visible width (anamorphic)","status":"PASS"},{"name":"Test visibleRect metadata override where source display size = 2 * visible size for both width and height","status":"PASS"},{"name":"Test visibleRect + display size metadata override","status":"PASS"},{"name":"Test display size metadata override","status":"PASS"},{"name":"Test invalid buffer constructed VideoFrames","status":"PASS"},{"name":"Test Uint8Array(ArrayBuffer) constructed I420 VideoFrame","status":"PASS"},{"name":"Test ArrayBuffer constructed I420 VideoFrame","status":"PASS"},{"name":"Test planar constructed I420 VideoFrame with colorSpace","status":"PASS"},{"name":"Test buffer constructed I420+Alpha VideoFrame","status":"PASS"},{"name":"Test buffer constructed NV12 VideoFrame","status":"PASS"},{"name":"Test buffer constructed RGB VideoFrames","status":"PASS"},{"name":"Test VideoFrame constructed VideoFrame","status":"PASS"},{"name":"Test we can construct a VideoFrame from an offscreen canvas.","status":"PASS"},{"name":"Test I420 VideoFrame with odd visible size","status":"PASS"},{"name":"Test I420A VideoFrame and alpha={keep,discard}","status":"PASS"},{"name":"Test RGBA, BGRA VideoFrames with alpha={keep,discard}","status":"PASS"},{"name":"Test a VideoFrame constructed from canvas can drop the alpha channel.","status":"PASS"}]}