{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"AudioDecoder interface: existence and properties of interface object","status":"FAIL"},{"name":"AudioDecoder interface object length","status":"PASS"},{"name":"AudioDecoder interface object name","status":"PASS"},{"name":"AudioDecoder interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"AudioDecoder interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioDecoder interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioDecoder interface: attribute state","status":"PASS"},{"name":"AudioDecoder interface: attribute decodeQueueSize","status":"PASS"},{"name":"AudioDecoder interface: attribute ondequeue","status":"PASS"},{"name":"AudioDecoder interface: operation configure(AudioDecoderConfig)","status":"PASS"},{"name":"AudioDecoder interface: operation decode(EncodedAudioChunk)","status":"PASS"},{"name":"AudioDecoder interface: operation flush()","status":"PASS"},{"name":"AudioDecoder interface: operation reset()","status":"PASS"},{"name":"AudioDecoder interface: operation close()","status":"PASS"},{"name":"AudioDecoder interface: operation isConfigSupported(AudioDecoderConfig)","status":"PASS"},{"name":"AudioDecoder must be primary interface of new AudioDecoder(defaultCodecInit)","status":"PASS"},{"name":"Stringification of new AudioDecoder(defaultCodecInit)","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"state\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"decodeQueueSize\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"ondequeue\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"configure(AudioDecoderConfig)\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: calling configure(AudioDecoderConfig) on new AudioDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"decode(EncodedAudioChunk)\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: calling decode(EncodedAudioChunk) on new AudioDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"flush()\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"reset()\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: new AudioDecoder(defaultCodecInit) must inherit property \"isConfigSupported(AudioDecoderConfig)\" with the proper type","status":"PASS"},{"name":"AudioDecoder interface: calling isConfigSupported(AudioDecoderConfig) on new AudioDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoDecoder interface: existence and properties of interface object","status":"FAIL"},{"name":"VideoDecoder interface object length","status":"PASS"},{"name":"VideoDecoder interface object name","status":"PASS"},{"name":"VideoDecoder interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"VideoDecoder interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"VideoDecoder interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"VideoDecoder interface: attribute state","status":"PASS"},{"name":"VideoDecoder interface: attribute decodeQueueSize","status":"PASS"},{"name":"VideoDecoder interface: attribute ondequeue","status":"PASS"},{"name":"VideoDecoder interface: operation configure(VideoDecoderConfig)","status":"PASS"},{"name":"VideoDecoder interface: operation decode(EncodedVideoChunk)","status":"PASS"},{"name":"VideoDecoder interface: operation flush()","status":"PASS"},{"name":"VideoDecoder interface: operation reset()","status":"PASS"},{"name":"VideoDecoder interface: operation close()","status":"PASS"},{"name":"VideoDecoder interface: operation isConfigSupported(VideoDecoderConfig)","status":"PASS"},{"name":"VideoDecoder must be primary interface of new VideoDecoder(defaultCodecInit)","status":"PASS"},{"name":"Stringification of new VideoDecoder(defaultCodecInit)","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"state\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"decodeQueueSize\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"ondequeue\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"configure(VideoDecoderConfig)\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: calling configure(VideoDecoderConfig) on new VideoDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"decode(EncodedVideoChunk)\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: calling decode(EncodedVideoChunk) on new VideoDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"flush()\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"reset()\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: new VideoDecoder(defaultCodecInit) must inherit property \"isConfigSupported(VideoDecoderConfig)\" with the proper type","status":"PASS"},{"name":"VideoDecoder interface: calling isConfigSupported(VideoDecoderConfig) on new VideoDecoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioEncoder interface: existence and properties of interface object","status":"FAIL"},{"name":"AudioEncoder interface object length","status":"PASS"},{"name":"AudioEncoder interface object name","status":"PASS"},{"name":"AudioEncoder interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"AudioEncoder interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioEncoder interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioEncoder interface: attribute state","status":"PASS"},{"name":"AudioEncoder interface: attribute encodeQueueSize","status":"PASS"},{"name":"AudioEncoder interface: attribute ondequeue","status":"PASS"},{"name":"AudioEncoder interface: operation configure(AudioEncoderConfig)","status":"PASS"},{"name":"AudioEncoder interface: operation encode(AudioData)","status":"PASS"},{"name":"AudioEncoder interface: operation flush()","status":"PASS"},{"name":"AudioEncoder interface: operation reset()","status":"PASS"},{"name":"AudioEncoder interface: operation close()","status":"PASS"},{"name":"AudioEncoder interface: operation isConfigSupported(AudioEncoderConfig)","status":"PASS"},{"name":"AudioEncoder must be primary interface of new AudioEncoder(defaultCodecInit)","status":"PASS"},{"name":"Stringification of new AudioEncoder(defaultCodecInit)","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"state\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"encodeQueueSize\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"ondequeue\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"configure(AudioEncoderConfig)\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: calling configure(AudioEncoderConfig) on new AudioEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"encode(AudioData)\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: calling encode(AudioData) on new AudioEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"flush()\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"reset()\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: new AudioEncoder(defaultCodecInit) must inherit property \"isConfigSupported(AudioEncoderConfig)\" with the proper type","status":"PASS"},{"name":"AudioEncoder interface: calling isConfigSupported(AudioEncoderConfig) on new AudioEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoEncoder interface: existence and properties of interface object","status":"FAIL"},{"name":"VideoEncoder interface object length","status":"PASS"},{"name":"VideoEncoder interface object name","status":"PASS"},{"name":"VideoEncoder interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"VideoEncoder interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"VideoEncoder interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"VideoEncoder interface: attribute state","status":"PASS"},{"name":"VideoEncoder interface: attribute encodeQueueSize","status":"PASS"},{"name":"VideoEncoder interface: attribute ondequeue","status":"PASS"},{"name":"VideoEncoder interface: operation configure(VideoEncoderConfig)","status":"PASS"},{"name":"VideoEncoder interface: operation encode(VideoFrame, optional VideoEncoderEncodeOptions)","status":"PASS"},{"name":"VideoEncoder interface: operation flush()","status":"PASS"},{"name":"VideoEncoder interface: operation reset()","status":"PASS"},{"name":"VideoEncoder interface: operation close()","status":"PASS"},{"name":"VideoEncoder interface: operation isConfigSupported(VideoEncoderConfig)","status":"PASS"},{"name":"VideoEncoder must be primary interface of new VideoEncoder(defaultCodecInit)","status":"PASS"},{"name":"Stringification of new VideoEncoder(defaultCodecInit)","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"state\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"encodeQueueSize\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"ondequeue\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"configure(VideoEncoderConfig)\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: calling configure(VideoEncoderConfig) on new VideoEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"encode(VideoFrame, optional VideoEncoderEncodeOptions)\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: calling encode(VideoFrame, optional VideoEncoderEncodeOptions) on new VideoEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"flush()\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"reset()\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: new VideoEncoder(defaultCodecInit) must inherit property \"isConfigSupported(VideoEncoderConfig)\" with the proper type","status":"PASS"},{"name":"VideoEncoder interface: calling isConfigSupported(VideoEncoderConfig) on new VideoEncoder(defaultCodecInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"EncodedAudioChunk interface: existence and properties of interface object","status":"PASS"},{"name":"EncodedAudioChunk interface object length","status":"PASS"},{"name":"EncodedAudioChunk interface object name","status":"PASS"},{"name":"EncodedAudioChunk interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EncodedAudioChunk interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EncodedAudioChunk interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EncodedAudioChunk interface: attribute type","status":"PASS"},{"name":"EncodedAudioChunk interface: attribute timestamp","status":"PASS"},{"name":"EncodedAudioChunk interface: attribute duration","status":"PASS"},{"name":"EncodedAudioChunk interface: attribute byteLength","status":"PASS"},{"name":"EncodedAudioChunk interface: operation copyTo(BufferSource)","status":"PASS"},{"name":"EncodedAudioChunk must be primary interface of new EncodedAudioChunk(defaultAudioChunkInit)","status":"PASS"},{"name":"Stringification of new EncodedAudioChunk(defaultAudioChunkInit)","status":"PASS"},{"name":"EncodedAudioChunk interface: new EncodedAudioChunk(defaultAudioChunkInit) must inherit property \"type\" with the proper type","status":"PASS"},{"name":"EncodedAudioChunk interface: new EncodedAudioChunk(defaultAudioChunkInit) must inherit property \"timestamp\" with the proper type","status":"PASS"},{"name":"EncodedAudioChunk interface: new EncodedAudioChunk(defaultAudioChunkInit) must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"EncodedAudioChunk interface: new EncodedAudioChunk(defaultAudioChunkInit) must inherit property \"byteLength\" with the proper type","status":"PASS"},{"name":"EncodedAudioChunk interface: new EncodedAudioChunk(defaultAudioChunkInit) must inherit property \"copyTo(BufferSource)\" with the proper type","status":"PASS"},{"name":"EncodedAudioChunk interface: calling copyTo(BufferSource) on new EncodedAudioChunk(defaultAudioChunkInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"EncodedVideoChunk interface: existence and properties of interface object","status":"PASS"},{"name":"EncodedVideoChunk interface object length","status":"PASS"},{"name":"EncodedVideoChunk interface object name","status":"PASS"},{"name":"EncodedVideoChunk interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EncodedVideoChunk interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EncodedVideoChunk interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EncodedVideoChunk interface: attribute type","status":"PASS"},{"name":"EncodedVideoChunk interface: attribute timestamp","status":"PASS"},{"name":"EncodedVideoChunk interface: attribute duration","status":"PASS"},{"name":"EncodedVideoChunk interface: attribute byteLength","status":"PASS"},{"name":"EncodedVideoChunk interface: operation copyTo(BufferSource)","status":"PASS"},{"name":"EncodedVideoChunk must be primary interface of new EncodedVideoChunk(defaultVideoChunkInit)","status":"PASS"},{"name":"Stringification of new EncodedVideoChunk(defaultVideoChunkInit)","status":"PASS"},{"name":"EncodedVideoChunk interface: new EncodedVideoChunk(defaultVideoChunkInit) must inherit property \"type\" with the proper type","status":"PASS"},{"name":"EncodedVideoChunk interface: new EncodedVideoChunk(defaultVideoChunkInit) must inherit property \"timestamp\" with the proper type","status":"PASS"},{"name":"EncodedVideoChunk interface: new EncodedVideoChunk(defaultVideoChunkInit) must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"EncodedVideoChunk interface: new EncodedVideoChunk(defaultVideoChunkInit) must inherit property \"byteLength\" with the proper type","status":"PASS"},{"name":"EncodedVideoChunk interface: new EncodedVideoChunk(defaultVideoChunkInit) must inherit property \"copyTo(BufferSource)\" with the proper type","status":"PASS"},{"name":"EncodedVideoChunk interface: calling copyTo(BufferSource) on new EncodedVideoChunk(defaultVideoChunkInit) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioData interface: existence and properties of interface object","status":"PASS"},{"name":"AudioData interface object length","status":"PASS"},{"name":"AudioData interface object name","status":"PASS"},{"name":"AudioData interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioData interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioData interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioData interface: attribute format","status":"PASS"},{"name":"AudioData interface: attribute sampleRate","status":"PASS"},{"name":"AudioData interface: attribute numberOfFrames","status":"PASS"},{"name":"AudioData interface: attribute numberOfChannels","status":"PASS"},{"name":"AudioData interface: attribute duration","status":"PASS"},{"name":"AudioData interface: attribute timestamp","status":"PASS"},{"name":"AudioData interface: operation allocationSize(AudioDataCopyToOptions)","status":"PASS"},{"name":"AudioData interface: operation copyTo(BufferSource, AudioDataCopyToOptions)","status":"PASS"},{"name":"AudioData interface: operation clone()","status":"PASS"},{"name":"AudioData interface: operation close()","status":"PASS"},{"name":"AudioData must be primary interface of make_audio_data(1234, 2, 8000, 100)","status":"PASS"},{"name":"Stringification of make_audio_data(1234, 2, 8000, 100)","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"format\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"numberOfFrames\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"numberOfChannels\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"timestamp\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"allocationSize(AudioDataCopyToOptions)\" with the proper type","status":"PASS"},{"name":"AudioData interface: calling allocationSize(AudioDataCopyToOptions) on make_audio_data(1234, 2, 8000, 100) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"copyTo(BufferSource, AudioDataCopyToOptions)\" with the proper type","status":"PASS"},{"name":"AudioData interface: calling copyTo(BufferSource, AudioDataCopyToOptions) on make_audio_data(1234, 2, 8000, 100) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"clone()\" with the proper type","status":"PASS"},{"name":"AudioData interface: make_audio_data(1234, 2, 8000, 100) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: existence and properties of interface object","status":"PASS"},{"name":"VideoFrame interface object length","status":"PASS"},{"name":"VideoFrame interface object name","status":"PASS"},{"name":"VideoFrame interface: existence and properties of interface prototype object","status":"PASS"},{"name":"VideoFrame interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"VideoFrame interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"VideoFrame interface: attribute format","status":"PASS"},{"name":"VideoFrame interface: attribute codedWidth","status":"PASS"},{"name":"VideoFrame interface: attribute codedHeight","status":"PASS"},{"name":"VideoFrame interface: attribute codedRect","status":"PASS"},{"name":"VideoFrame interface: attribute visibleRect","status":"PASS"},{"name":"VideoFrame interface: attribute displayWidth","status":"PASS"},{"name":"VideoFrame interface: attribute displayHeight","status":"PASS"},{"name":"VideoFrame interface: attribute duration","status":"PASS"},{"name":"VideoFrame interface: attribute timestamp","status":"PASS"},{"name":"VideoFrame interface: attribute colorSpace","status":"PASS"},{"name":"VideoFrame interface: operation metadata()","status":"FAIL"},{"name":"VideoFrame interface: operation allocationSize(optional VideoFrameCopyToOptions)","status":"PASS"},{"name":"VideoFrame interface: operation copyTo(BufferSource, optional VideoFrameCopyToOptions)","status":"PASS"},{"name":"VideoFrame interface: operation clone()","status":"PASS"},{"name":"VideoFrame interface: operation close()","status":"PASS"},{"name":"VideoFrame must be primary interface of new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33})","status":"PASS"},{"name":"Stringification of new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33})","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"format\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"codedWidth\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"codedHeight\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"codedRect\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"visibleRect\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"displayWidth\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"displayHeight\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"timestamp\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"colorSpace\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"metadata()\" with the proper type","status":"FAIL"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"allocationSize(optional VideoFrameCopyToOptions)\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: calling allocationSize(optional VideoFrameCopyToOptions) on new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"copyTo(BufferSource, optional VideoFrameCopyToOptions)\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: calling copyTo(BufferSource, optional VideoFrameCopyToOptions) on new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) with too few arguments must throw TypeError","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"clone()\" with the proper type","status":"PASS"},{"name":"VideoFrame interface: new VideoFrame(makeImageBitmap(32, 16), {timestamp: 100, duration: 33}) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: existence and properties of interface object","status":"PASS"},{"name":"VideoColorSpace interface object length","status":"PASS"},{"name":"VideoColorSpace interface object name","status":"PASS"},{"name":"VideoColorSpace interface: existence and properties of interface prototype object","status":"PASS"},{"name":"VideoColorSpace interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"VideoColorSpace interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"VideoColorSpace interface: attribute primaries","status":"PASS"},{"name":"VideoColorSpace interface: attribute transfer","status":"PASS"},{"name":"VideoColorSpace interface: attribute matrix","status":"PASS"},{"name":"VideoColorSpace interface: attribute fullRange","status":"PASS"},{"name":"VideoColorSpace interface: operation toJSON()","status":"PASS"},{"name":"VideoColorSpace must be primary interface of new VideoColorSpace()","status":"PASS"},{"name":"Stringification of new VideoColorSpace()","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace() must inherit property \"primaries\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace() must inherit property \"transfer\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace() must inherit property \"matrix\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace() must inherit property \"fullRange\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace() must inherit property \"toJSON()\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: default toJSON operation on new VideoColorSpace()","status":"PASS"},{"name":"VideoColorSpace must be primary interface of new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true})","status":"PASS"},{"name":"Stringification of new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true})","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true}) must inherit property \"primaries\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true}) must inherit property \"transfer\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true}) must inherit property \"matrix\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true}) must inherit property \"fullRange\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true}) must inherit property \"toJSON()\" with the proper type","status":"PASS"},{"name":"VideoColorSpace interface: default toJSON operation on new VideoColorSpace({primaries: 'bt709', transfer: 'bt709', matrix: 'bt709', fullRange: true})","status":"PASS"},{"name":"ImageDecoder interface: existence and properties of interface object","status":"PASS"},{"name":"ImageDecoder interface object length","status":"PASS"},{"name":"ImageDecoder interface object name","status":"PASS"},{"name":"ImageDecoder interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ImageDecoder interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ImageDecoder interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ImageDecoder interface: attribute type","status":"PASS"},{"name":"ImageDecoder interface: attribute complete","status":"PASS"},{"name":"ImageDecoder interface: attribute completed","status":"PASS"},{"name":"ImageDecoder interface: attribute tracks","status":"PASS"},{"name":"ImageDecoder interface: operation decode(optional ImageDecodeOptions)","status":"PASS"},{"name":"ImageDecoder interface: operation reset()","status":"PASS"},{"name":"ImageDecoder interface: operation close()","status":"PASS"},{"name":"ImageDecoder interface: operation isTypeSupported(DOMString)","status":"PASS"},{"name":"ImageDecoder must be primary interface of new ImageDecoder({data: self.imageBody, type: 'image/png'})","status":"PASS"},{"name":"Stringification of new ImageDecoder({data: self.imageBody, type: 'image/png'})","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"type\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"complete\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"completed\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"tracks\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"decode(optional ImageDecodeOptions)\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: calling decode(optional ImageDecodeOptions) on new ImageDecoder({data: self.imageBody, type: 'image/png'}) with too few arguments must throw TypeError","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"reset()\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}) must inherit property \"isTypeSupported(DOMString)\" with the proper type","status":"PASS"},{"name":"ImageDecoder interface: calling isTypeSupported(DOMString) on new ImageDecoder({data: self.imageBody, type: 'image/png'}) with too few arguments must throw TypeError","status":"PASS"},{"name":"ImageTrackList interface: existence and properties of interface object","status":"PASS"},{"name":"ImageTrackList interface object length","status":"PASS"},{"name":"ImageTrackList interface object name","status":"PASS"},{"name":"ImageTrackList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ImageTrackList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ImageTrackList interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ImageTrackList interface: attribute ready","status":"PASS"},{"name":"ImageTrackList interface: attribute length","status":"PASS"},{"name":"ImageTrackList interface: attribute selectedIndex","status":"PASS"},{"name":"ImageTrackList interface: attribute selectedTrack","status":"PASS"},{"name":"ImageTrackList must be primary interface of new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks","status":"PASS"},{"name":"Stringification of new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks","status":"PASS"},{"name":"ImageTrackList interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks must inherit property \"ready\" with the proper type","status":"PASS"},{"name":"ImageTrackList interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks must inherit property \"length\" with the proper type","status":"PASS"},{"name":"ImageTrackList interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks must inherit property \"selectedIndex\" with the proper type","status":"PASS"},{"name":"ImageTrackList interface: new ImageDecoder({data: self.imageBody, type: 'image/png'}).tracks must inherit property \"selectedTrack\" with the proper type","status":"PASS"},{"name":"ImageTrack interface: existence and properties of interface object","status":"PASS"},{"name":"ImageTrack interface object length","status":"PASS"},{"name":"ImageTrack interface object name","status":"PASS"},{"name":"ImageTrack interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ImageTrack interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ImageTrack interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ImageTrack interface: attribute animated","status":"PASS"},{"name":"ImageTrack interface: attribute frameCount","status":"PASS"},{"name":"ImageTrack interface: attribute repetitionCount","status":"PASS"},{"name":"ImageTrack interface: attribute selected","status":"PASS"},{"name":"ImageTrack must be primary interface of self.imageTracks","status":"PASS"},{"name":"Stringification of self.imageTracks","status":"PASS"},{"name":"ImageTrack interface: self.imageTracks must inherit property \"animated\" with the proper type","status":"PASS"},{"name":"ImageTrack interface: self.imageTracks must inherit property \"frameCount\" with the proper type","status":"PASS"},{"name":"ImageTrack interface: self.imageTracks must inherit property \"repetitionCount\" with the proper type","status":"PASS"},{"name":"ImageTrack interface: self.imageTracks must inherit property \"selected\" with the proper type","status":"PASS"}]}