{"status":"OK","subtests":[{"name":"Single scope","status":"PASS"},{"name":"Scope can not match its own root without :scope","status":"PASS"},{"name":"Selecting self with :scope","status":"PASS"},{"name":"Single scope with limit","status":"PASS"},{"name":"Single scope, :scope pseudo in main selector","status":"PASS"},{"name":"Single scope, :scope pseudo in to-selector","status":"FAIL"},{"name":"Multiple scopes, :scope pseudo in to-selector","status":"FAIL"},{"name":"Inner @scope with :scope in from-selector","status":"FAIL"},{"name":"Multiple scopes from same @scope-rule, only one limited","status":"PASS"},{"name":"Multiple scopes from same @scope-rule, both limited","status":"PASS"},{"name":"Nested scopes","status":"PASS"},{"name":"Nested scopes, reverse","status":"FAIL"},{"name":"Nested scopes, with to-selector","status":"PASS"},{"name":":scope selecting itself","status":"PASS"},{"name":"The scoping limit is not in scope","status":"PASS"},{"name":"Simulated inclusive scoping limit","status":"PASS"},{"name":"Scope with no elements","status":"FAIL"},{"name":":scope direct adjacent sibling","status":"PASS"},{"name":":scope indirect adjacent sibling","status":"PASS"},{"name":"Relative selector inside @scope","status":"PASS"},{"name":":scope in two different compounds","status":"PASS"},{"name":"Scope root with :has()","status":"PASS"}]}