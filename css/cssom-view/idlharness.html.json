{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface Window: original interface defined","status":"PASS"},{"name":"Partial interface Window: member names are unique","status":"PASS"},{"name":"Partial interface Document: original interface defined","status":"PASS"},{"name":"Partial interface Document: member names are unique","status":"PASS"},{"name":"Partial interface Element: original interface defined","status":"PASS"},{"name":"Partial interface Element: member names are unique","status":"PASS"},{"name":"Partial interface HTMLElement: original interface defined","status":"PASS"},{"name":"Partial interface HTMLElement: member names are unique","status":"PASS"},{"name":"Partial interface HTMLImageElement: original interface defined","status":"PASS"},{"name":"Partial interface HTMLImageElement: member names are unique","status":"PASS"},{"name":"Partial interface Range: original interface defined","status":"PASS"},{"name":"Partial interface Range: member names are unique","status":"PASS"},{"name":"Partial interface MouseEvent: original interface defined","status":"PASS"},{"name":"Partial interface MouseEvent: member names are unique","status":"PASS"},{"name":"Partial interface Element[2]: member names are unique","status":"PASS"},{"name":"Partial interface Window[2]: member names are unique","status":"PASS"},{"name":"Partial interface UIEvent: member names are unique","status":"PASS"},{"name":"Partial interface MouseEvent[2]: member names are unique","status":"PASS"},{"name":"Partial interface UIEvent[2]: member names are unique","status":"PASS"},{"name":"Partial interface Document[2]: member names are unique","status":"PASS"},{"name":"Partial interface Document[3]: member names are unique","status":"PASS"},{"name":"Partial interface HTMLImageElement[2]: member names are unique","status":"PASS"},{"name":"Partial interface Document[4]: member names are unique","status":"PASS"},{"name":"Partial interface Window[3]: member names are unique","status":"PASS"},{"name":"Text includes GeometryUtils: member names are unique","status":"PASS"},{"name":"Element includes GeometryUtils: member names are unique","status":"PASS"},{"name":"CSSPseudoElement includes GeometryUtils: member names are unique","status":"PASS"},{"name":"Document includes GeometryUtils: member names are unique","status":"PASS"},{"name":"HTMLElement includes ElementCSSInlineStyle: member names are unique","status":"PASS"},{"name":"Document includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Document includes DocumentAndElementEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes DocumentAndElementEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes ElementContentEditable: member names are unique","status":"PASS"},{"name":"HTMLElement includes HTMLOrSVGElement: member names are unique","status":"PASS"},{"name":"Window includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Window includes AnimationFrameProvider: member names are unique","status":"PASS"},{"name":"Window includes WindowSessionStorage: member names are unique","status":"PASS"},{"name":"Window includes WindowLocalStorage: member names are unique","status":"PASS"},{"name":"Document includes NonElementParentNode: member names are unique","status":"PASS"},{"name":"Document includes ParentNode: member names are unique","status":"PASS"},{"name":"Element includes ParentNode: member names are unique","status":"PASS"},{"name":"Element includes NonDocumentTypeChildNode: member names are unique","status":"PASS"},{"name":"CharacterData includes NonDocumentTypeChildNode: member names are unique","status":"PASS"},{"name":"Element includes ChildNode: member names are unique","status":"PASS"},{"name":"CharacterData includes ChildNode: member names are unique","status":"PASS"},{"name":"Element includes Slottable: member names are unique","status":"PASS"},{"name":"Text includes Slottable: member names are unique","status":"PASS"},{"name":"Document includes XPathEvaluatorBase: member names are unique","status":"PASS"},{"name":"MediaQueryList interface: existence and properties of interface object","status":"PASS"},{"name":"MediaQueryList interface object length","status":"PASS"},{"name":"MediaQueryList interface object name","status":"PASS"},{"name":"MediaQueryList interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaQueryList interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaQueryList interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaQueryList interface: attribute media","status":"PASS"},{"name":"MediaQueryList interface: attribute matches","status":"PASS"},{"name":"MediaQueryList interface: operation addListener(EventListener?)","status":"PASS"},{"name":"MediaQueryList interface: operation removeListener(EventListener?)","status":"PASS"},{"name":"MediaQueryList interface: attribute onchange","status":"PASS"},{"name":"MediaQueryList must be primary interface of matchMedia(\"all\")","status":"PASS"},{"name":"Stringification of matchMedia(\"all\")","status":"PASS"},{"name":"MediaQueryList interface: matchMedia(\"all\") must inherit property \"media\" with the proper type","status":"PASS"},{"name":"MediaQueryList interface: matchMedia(\"all\") must inherit property \"matches\" with the proper type","status":"PASS"},{"name":"MediaQueryList interface: matchMedia(\"all\") must inherit property \"addListener(EventListener?)\" with the proper type","status":"PASS"},{"name":"MediaQueryList interface: calling addListener(EventListener?) on matchMedia(\"all\") with too few arguments must throw TypeError","status":"PASS"},{"name":"MediaQueryList interface: matchMedia(\"all\") must inherit property \"removeListener(EventListener?)\" with the proper type","status":"PASS"},{"name":"MediaQueryList interface: calling removeListener(EventListener?) on matchMedia(\"all\") with too few arguments must throw TypeError","status":"PASS"},{"name":"MediaQueryList interface: matchMedia(\"all\") must inherit property \"onchange\" with the proper type","status":"PASS"},{"name":"MediaQueryListEvent interface: existence and properties of interface object","status":"PASS"},{"name":"MediaQueryListEvent interface object length","status":"PASS"},{"name":"MediaQueryListEvent interface object name","status":"PASS"},{"name":"MediaQueryListEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaQueryListEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaQueryListEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaQueryListEvent interface: attribute media","status":"PASS"},{"name":"MediaQueryListEvent interface: attribute matches","status":"PASS"},{"name":"MediaQueryListEvent must be primary interface of new MediaQueryListEvent(\"change\")","status":"PASS"},{"name":"Stringification of new MediaQueryListEvent(\"change\")","status":"PASS"},{"name":"MediaQueryListEvent interface: new MediaQueryListEvent(\"change\") must inherit property \"media\" with the proper type","status":"PASS"},{"name":"MediaQueryListEvent interface: new MediaQueryListEvent(\"change\") must inherit property \"matches\" with the proper type","status":"PASS"},{"name":"Screen interface: existence and properties of interface object","status":"PASS"},{"name":"Screen interface object length","status":"PASS"},{"name":"Screen interface object name","status":"PASS"},{"name":"Screen interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Screen interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Screen interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Screen interface: attribute availWidth","status":"PASS"},{"name":"Screen interface: attribute availHeight","status":"PASS"},{"name":"Screen interface: attribute width","status":"PASS"},{"name":"Screen interface: attribute height","status":"PASS"},{"name":"Screen interface: attribute colorDepth","status":"PASS"},{"name":"Screen interface: attribute pixelDepth","status":"PASS"},{"name":"Screen must be primary interface of screen","status":"PASS"},{"name":"Stringification of screen","status":"PASS"},{"name":"Screen interface: screen must inherit property \"availWidth\" with the proper type","status":"PASS"},{"name":"Screen interface: screen must inherit property \"availHeight\" with the proper type","status":"PASS"},{"name":"Screen interface: screen must inherit property \"width\" with the proper type","status":"PASS"},{"name":"Screen interface: screen must inherit property \"height\" with the proper type","status":"PASS"},{"name":"Screen interface: screen must inherit property \"colorDepth\" with the proper type","status":"PASS"},{"name":"Screen interface: screen must inherit property \"pixelDepth\" with the proper type","status":"PASS"},{"name":"CaretPosition interface: existence and properties of interface object","status":"FAIL"},{"name":"CaretPosition interface object length","status":"FAIL"},{"name":"CaretPosition interface object name","status":"FAIL"},{"name":"CaretPosition interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"CaretPosition interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"CaretPosition interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"CaretPosition interface: attribute offsetNode","status":"FAIL"},{"name":"CaretPosition interface: attribute offset","status":"FAIL"},{"name":"CaretPosition interface: operation getClientRect()","status":"FAIL"},{"name":"CaretPosition must be primary interface of document.caretPositionFromPoint(5, 5)","status":"FAIL"},{"name":"Stringification of document.caretPositionFromPoint(5, 5)","status":"FAIL"},{"name":"CaretPosition interface: document.caretPositionFromPoint(5, 5) must inherit property \"offsetNode\" with the proper type","status":"FAIL"},{"name":"CaretPosition interface: document.caretPositionFromPoint(5, 5) must inherit property \"offset\" with the proper type","status":"FAIL"},{"name":"CaretPosition interface: document.caretPositionFromPoint(5, 5) must inherit property \"getClientRect()\" with the proper type","status":"FAIL"},{"name":"CSSPseudoElement interface: operation getBoxQuads(optional BoxQuadOptions)","status":"FAIL"},{"name":"CSSPseudoElement interface: operation convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"CSSPseudoElement interface: operation convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"CSSPseudoElement interface: operation convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"MouseEvent interface: attribute pageX","status":"FAIL"},{"name":"MouseEvent interface: attribute pageY","status":"FAIL"},{"name":"MouseEvent interface: attribute x","status":"PASS"},{"name":"MouseEvent interface: attribute y","status":"PASS"},{"name":"MouseEvent interface: attribute offsetX","status":"PASS"},{"name":"MouseEvent interface: attribute offsetY","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"pageX\" with the proper type","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"pageY\" with the proper type","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"x\" with the proper type","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"y\" with the proper type","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"offsetX\" with the proper type","status":"PASS"},{"name":"MouseEvent interface: new MouseEvent(\"foo\") must inherit property \"offsetY\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: attribute offsetParent","status":"PASS"},{"name":"HTMLElement interface: attribute offsetTop","status":"PASS"},{"name":"HTMLElement interface: attribute offsetLeft","status":"PASS"},{"name":"HTMLElement interface: attribute offsetWidth","status":"PASS"},{"name":"HTMLElement interface: attribute offsetHeight","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"div\") must inherit property \"offsetParent\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"div\") must inherit property \"offsetTop\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"div\") must inherit property \"offsetLeft\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"div\") must inherit property \"offsetWidth\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"div\") must inherit property \"offsetHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"getClientRects()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"getBoundingClientRect()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollIntoView(optional (boolean or ScrollIntoViewOptions))\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollIntoView(optional (boolean or ScrollIntoViewOptions)) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scroll(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(optional ScrollToOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scroll(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(unrestricted double, unrestricted double) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollTo(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(optional ScrollToOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollTo(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(unrestricted double, unrestricted double) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollBy(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(optional ScrollToOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollBy(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(unrestricted double, unrestricted double) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"scrollHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"clientTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"clientLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"clientWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"clientHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"getBoxQuads(optional BoxQuadOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling getBoxQuads(optional BoxQuadOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"div\") must inherit property \"convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"div\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"HTMLImageElement interface: attribute x","status":"PASS"},{"name":"HTMLImageElement interface: attribute y","status":"PASS"},{"name":"HTMLImageElement interface: document.createElement(\"img\") must inherit property \"x\" with the proper type","status":"PASS"},{"name":"HTMLImageElement interface: document.createElement(\"img\") must inherit property \"y\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"img\") must inherit property \"offsetParent\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"img\") must inherit property \"offsetTop\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"img\") must inherit property \"offsetLeft\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"img\") must inherit property \"offsetWidth\" with the proper type","status":"PASS"},{"name":"HTMLElement interface: document.createElement(\"img\") must inherit property \"offsetHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"getClientRects()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"getBoundingClientRect()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollIntoView(optional (boolean or ScrollIntoViewOptions))\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollIntoView(optional (boolean or ScrollIntoViewOptions)) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scroll(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(optional ScrollToOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scroll(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(unrestricted double, unrestricted double) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollTo(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(optional ScrollToOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollTo(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(unrestricted double, unrestricted double) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollBy(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(optional ScrollToOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollBy(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(unrestricted double, unrestricted double) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"scrollHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"clientTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"clientLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"clientWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"clientHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"getBoxQuads(optional BoxQuadOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling getBoxQuads(optional BoxQuadOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElement(\"img\") must inherit property \"convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElement(\"img\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Window interface: operation matchMedia(CSSOMString)","status":"PASS"},{"name":"Window interface: attribute screen","status":"PASS"},{"name":"Window interface: operation moveTo(long, long)","status":"FAIL"},{"name":"Window interface: operation moveBy(long, long)","status":"FAIL"},{"name":"Window interface: operation resizeTo(long, long)","status":"FAIL"},{"name":"Window interface: operation resizeBy(long, long)","status":"FAIL"},{"name":"Window interface: attribute innerWidth","status":"PASS"},{"name":"Window interface: attribute innerHeight","status":"PASS"},{"name":"Window interface: attribute scrollX","status":"PASS"},{"name":"Window interface: attribute pageXOffset","status":"PASS"},{"name":"Window interface: attribute scrollY","status":"PASS"},{"name":"Window interface: attribute pageYOffset","status":"PASS"},{"name":"Window interface: operation scroll(optional ScrollToOptions)","status":"PASS"},{"name":"Window interface: operation scroll(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Window interface: operation scrollTo(optional ScrollToOptions)","status":"PASS"},{"name":"Window interface: operation scrollTo(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Window interface: operation scrollBy(optional ScrollToOptions)","status":"PASS"},{"name":"Window interface: operation scrollBy(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Window interface: attribute screenX","status":"PASS"},{"name":"Window interface: attribute screenLeft","status":"PASS"},{"name":"Window interface: attribute screenY","status":"PASS"},{"name":"Window interface: attribute screenTop","status":"PASS"},{"name":"Window interface: attribute outerWidth","status":"PASS"},{"name":"Window interface: attribute outerHeight","status":"PASS"},{"name":"Window interface: attribute devicePixelRatio","status":"PASS"},{"name":"Window interface: window must inherit property \"matchMedia(CSSOMString)\" with the proper type","status":"PASS"},{"name":"Window interface: calling matchMedia(CSSOMString) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"screen\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"moveTo(long, long)\" with the proper type","status":"PASS"},{"name":"Window interface: calling moveTo(long, long) on window with too few arguments must throw TypeError","status":"FAIL"},{"name":"Window interface: window must inherit property \"moveBy(long, long)\" with the proper type","status":"PASS"},{"name":"Window interface: calling moveBy(long, long) on window with too few arguments must throw TypeError","status":"FAIL"},{"name":"Window interface: window must inherit property \"resizeTo(long, long)\" with the proper type","status":"PASS"},{"name":"Window interface: calling resizeTo(long, long) on window with too few arguments must throw TypeError","status":"FAIL"},{"name":"Window interface: window must inherit property \"resizeBy(long, long)\" with the proper type","status":"PASS"},{"name":"Window interface: calling resizeBy(long, long) on window with too few arguments must throw TypeError","status":"FAIL"},{"name":"Window interface: window must inherit property \"innerWidth\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"innerHeight\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollX\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"pageXOffset\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollY\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"pageYOffset\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"scroll(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scroll(optional ScrollToOptions) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"scroll(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scroll(unrestricted double, unrestricted double) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollTo(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scrollTo(optional ScrollToOptions) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollTo(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scrollTo(unrestricted double, unrestricted double) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollBy(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scrollBy(optional ScrollToOptions) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"scrollBy(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Window interface: calling scrollBy(unrestricted double, unrestricted double) on window with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: window must inherit property \"screenX\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"screenLeft\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"screenY\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"screenTop\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"outerWidth\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"outerHeight\" with the proper type","status":"PASS"},{"name":"Window interface: window must inherit property \"devicePixelRatio\" with the proper type","status":"PASS"},{"name":"Document interface: operation elementFromPoint(double, double)","status":"PASS"},{"name":"Document interface: operation elementsFromPoint(double, double)","status":"PASS"},{"name":"Document interface: operation caretPositionFromPoint(double, double)","status":"FAIL"},{"name":"Document interface: attribute scrollingElement","status":"PASS"},{"name":"Document interface: operation getBoxQuads(optional BoxQuadOptions)","status":"FAIL"},{"name":"Document interface: operation convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Document interface: operation convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Document interface: operation convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Document interface: document must inherit property \"elementFromPoint(double, double)\" with the proper type","status":"PASS"},{"name":"Document interface: calling elementFromPoint(double, double) on document with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: document must inherit property \"elementsFromPoint(double, double)\" with the proper type","status":"PASS"},{"name":"Document interface: calling elementsFromPoint(double, double) on document with too few arguments must throw TypeError","status":"PASS"},{"name":"Document interface: document must inherit property \"caretPositionFromPoint(double, double)\" with the proper type","status":"FAIL"},{"name":"Document interface: calling caretPositionFromPoint(double, double) on document with too few arguments must throw TypeError","status":"FAIL"},{"name":"Document interface: document must inherit property \"scrollingElement\" with the proper type","status":"PASS"},{"name":"Document interface: document must inherit property \"getBoxQuads(optional BoxQuadOptions)\" with the proper type","status":"FAIL"},{"name":"Document interface: calling getBoxQuads(optional BoxQuadOptions) on document with too few arguments must throw TypeError","status":"FAIL"},{"name":"Document interface: document must inherit property \"convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Document interface: calling convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions) on document with too few arguments must throw TypeError","status":"FAIL"},{"name":"Document interface: document must inherit property \"convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Document interface: calling convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions) on document with too few arguments must throw TypeError","status":"FAIL"},{"name":"Document interface: document must inherit property \"convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Document interface: calling convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions) on document with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: operation getClientRects()","status":"PASS"},{"name":"Element interface: operation getBoundingClientRect()","status":"PASS"},{"name":"Element interface: operation scrollIntoView(optional (boolean or ScrollIntoViewOptions))","status":"PASS"},{"name":"Element interface: operation scroll(optional ScrollToOptions)","status":"PASS"},{"name":"Element interface: operation scroll(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Element interface: operation scrollTo(optional ScrollToOptions)","status":"PASS"},{"name":"Element interface: operation scrollTo(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Element interface: operation scrollBy(optional ScrollToOptions)","status":"PASS"},{"name":"Element interface: operation scrollBy(unrestricted double, unrestricted double)","status":"PASS"},{"name":"Element interface: attribute scrollTop","status":"PASS"},{"name":"Element interface: attribute scrollLeft","status":"PASS"},{"name":"Element interface: attribute scrollWidth","status":"PASS"},{"name":"Element interface: attribute scrollHeight","status":"PASS"},{"name":"Element interface: attribute clientTop","status":"PASS"},{"name":"Element interface: attribute clientLeft","status":"PASS"},{"name":"Element interface: attribute clientWidth","status":"PASS"},{"name":"Element interface: attribute clientHeight","status":"PASS"},{"name":"Element interface: operation getBoxQuads(optional BoxQuadOptions)","status":"FAIL"},{"name":"Element interface: operation convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Element interface: operation convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Element interface: operation convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"getClientRects()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"getBoundingClientRect()\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollIntoView(optional (boolean or ScrollIntoViewOptions))\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollIntoView(optional (boolean or ScrollIntoViewOptions)) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scroll(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(optional ScrollToOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scroll(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scroll(unrestricted double, unrestricted double) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollTo(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(optional ScrollToOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollTo(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollTo(unrestricted double, unrestricted double) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollBy(optional ScrollToOptions)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(optional ScrollToOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollBy(unrestricted double, unrestricted double)\" with the proper type","status":"PASS"},{"name":"Element interface: calling scrollBy(unrestricted double, unrestricted double) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"scrollHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"clientTop\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"clientLeft\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"clientWidth\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"clientHeight\" with the proper type","status":"PASS"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"getBoxQuads(optional BoxQuadOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling getBoxQuads(optional BoxQuadOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Element interface: document.createElementNS(\"x\", \"y\") must inherit property \"convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Element interface: calling convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions) on document.createElementNS(\"x\", \"y\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Text interface: operation getBoxQuads(optional BoxQuadOptions)","status":"FAIL"},{"name":"Text interface: operation convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Text interface: operation convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Text interface: operation convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)","status":"FAIL"},{"name":"Text interface: document.createTextNode(\"x\") must inherit property \"getBoxQuads(optional BoxQuadOptions)\" with the proper type","status":"FAIL"},{"name":"Text interface: calling getBoxQuads(optional BoxQuadOptions) on document.createTextNode(\"x\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Text interface: document.createTextNode(\"x\") must inherit property \"convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Text interface: calling convertQuadFromNode(DOMQuadInit, GeometryNode, optional ConvertCoordinateOptions) on document.createTextNode(\"x\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Text interface: document.createTextNode(\"x\") must inherit property \"convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Text interface: calling convertRectFromNode(DOMRectReadOnly, GeometryNode, optional ConvertCoordinateOptions) on document.createTextNode(\"x\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Text interface: document.createTextNode(\"x\") must inherit property \"convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions)\" with the proper type","status":"FAIL"},{"name":"Text interface: calling convertPointFromNode(DOMPointInit, GeometryNode, optional ConvertCoordinateOptions) on document.createTextNode(\"x\") with too few arguments must throw TypeError","status":"FAIL"},{"name":"Range interface: operation getClientRects()","status":"PASS"},{"name":"Range interface: operation getBoundingClientRect()","status":"PASS"},{"name":"Range interface: new Range() must inherit property \"getClientRects()\" with the proper type","status":"PASS"},{"name":"Range interface: new Range() must inherit property \"getBoundingClientRect()\" with the proper type","status":"PASS"}]}