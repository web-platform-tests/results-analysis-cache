{"status":"OK","subtests":[{"name":"Calling CSSUnitValue.add with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.add with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.add with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.add with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.add with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.add can take numberish values","status":"PASS"},{"name":"Calling CSSMathSum.add with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.add with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.sub with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.sub with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.sub with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.sub with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.sub with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.sub can take numberish values","status":"PASS"},{"name":"Calling CSSMathSum.sub with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.sub with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.mul with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.mul with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.mul with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.mul with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.mul with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.mul can take numberish values","status":"PASS"},{"name":"Calling CSSMathProduct.mul with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.mul with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.div with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.div with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.div with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.div with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.div with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.div can take numberish values","status":"PASS"},{"name":"Calling CSSMathProduct.div with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.div with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.min with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.min with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.min with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.min with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.min with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.min can take numberish values","status":"PASS"},{"name":"Calling CSSMathMin.min with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.min with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.max with no arguments returns itself","status":"PASS"},{"name":"Calling CSSMathValue.max with no arguments returns itself","status":"PASS"},{"name":"Calling CSSNumericValue.max with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSMathValue.max with a single CSSNumericValue returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.max with more than one number CSSNumericValues returns correct type","status":"PASS"},{"name":"Calling CSSNumericValue.max can take numberish values","status":"PASS"},{"name":"Calling CSSMathMax.max with number CSSUnitValues simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.max with incompatible types throws TypeError","status":"PASS"},{"name":"Calling CSSUnitValue.add with CSSUnitValues with same unit simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.sub with CSSUnitValues with same unit simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.mul with all numbers simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.mul with only one non-number simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.mul with more than one non-number does not simplify to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.div with all numbers simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.div on a non-number value simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.div with a non-number value in the arguments does not simplify to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.min with CSSUnitValues with same unit simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSUnitValue.max with CSSUnitValues with same unit simplifies to a CSSUnitValue","status":"PASS"},{"name":"Calling CSSNumericValue.sub negates all argument values","status":"PASS"},{"name":"Calling CSSNumericValue.div inverts all argument values","status":"PASS"},{"name":"Can not divide with CSSUnitValue which has zero value and number type","status":"PASS"},{"name":"CSSNumericValue.add should throw TypeError when the types are different.","status":"PASS"},{"name":"CSSNumericValue.sub should throw TypeError when the types are different.","status":"PASS"}]}