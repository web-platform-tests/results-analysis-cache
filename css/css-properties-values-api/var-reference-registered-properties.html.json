{"status":"OK","subtests":[{"name":"var() references work with registered properties","status":"PASS"},{"name":"References to registered var()-properties work in registered lists","status":"PASS"},{"name":"References to mixed registered and unregistered var()-properties work in registered lists","status":"PASS"},{"name":"Registered lists may be concatenated","status":"PASS"},{"name":"Font-relative units are absolutized when substituting","status":"PASS"},{"name":"Calc expressions are resolved when substituting","status":"PASS"},{"name":"Lists with relative units are absolutized when substituting","status":"PASS"},{"name":"Values are absolutized when substituting into properties with universal syntax","status":"PASS"},{"name":"Invalid values for registered properties are serialized as the empty string","status":"FAIL"},{"name":"Valid fallback does not invalidate var()-reference [<length>, 10px]","status":"PASS"},{"name":"Valid fallback does not invalidate var()-reference [<length> | <color>, red]","status":"PASS"},{"name":"Valid fallback does not invalidate var()-reference [<length> | none, none]","status":"PASS"},{"name":"Invalid fallback invalidates var()-reference [<length>, red]","status":"PASS"},{"name":"Invalid fallback invalidates var()-reference [<length> | none, nolength]","status":"PASS"},{"name":"Invalid fallback invalidates var()-reference [<length>, var(--novar)]","status":"PASS"},{"name":"Fallback must adhere to registered syntax [<length>, 10px]","status":"FAIL"},{"name":"Fallback must adhere to registered syntax [<length> | none, none]","status":"FAIL"},{"name":"Fallback must adhere to registered syntax [<length>, var(--length-1)]","status":"FAIL"},{"name":"Invalid fallback is not used [<length>, red]","status":"PASS"},{"name":"Invalid fallback is not used [<length> | none, nolength]","status":"PASS"},{"name":"Invalid fallback is not used [<color>, var(--length-1)]","status":"PASS"},{"name":"Empty universal custom property can be substituted with var()","status":"FAIL"}]}