{"status":"OK","subtests":[{"name":"selector() function accepts a selector","status":"PASS"},{"name":"selector() function doesn't accept a selector list","status":"FAIL"},{"name":"selector() function rejects unknown webkit pseudo-elements.","status":"FAIL"},{"name":"selector() function accepts known pseudo-elements","status":"PASS"},{"name":"selector() with simple combinators","status":"PASS"},{"name":"selector() with unknown combinators","status":"FAIL"},{"name":"selector() with forgiving :is, 1 arg","status":"FAIL"},{"name":"selector() with forgiving :is, multiple args","status":"FAIL"},{"name":"selector() with forgiving :where, 1 arg","status":"FAIL"},{"name":"selector() with forgiving :where, multiple args","status":"FAIL"},{"name":"selector() with forgiving :has, 1 arg","status":"FAIL"},{"name":"selector() with forgiving :has, multiple args","status":"FAIL"},{"name":"selector() with unforgiving :nth-child, 1 arg","status":"FAIL"},{"name":"selector() with unforgiving :nth-last-child, 1 arg","status":"FAIL"},{"name":"selector() with unforgiving :nth-child, multiple args","status":"FAIL"},{"name":"selector() with unforgiving :nth-last-child, multiple args","status":"FAIL"},{"name":"selector() with a non-identifier after :nth-child's An+B index","status":"FAIL"},{"name":"selector() with a non-identifier after :nth-last-child's An+B index","status":"FAIL"}]}