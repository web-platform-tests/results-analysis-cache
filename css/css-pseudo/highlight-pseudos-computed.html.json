{"status":"OK","subtests":[{"name":"getComputedStyle() for ::selection","status":"PASS"},{"name":"getComputedStyle() for ::selection: should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::selection) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::selection( should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::selection(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::selection() should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for :::selection should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::selection. should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text","status":"FAIL"},{"name":"getComputedStyle() for ::target-text: should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text( should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text() should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for :::target-text should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::target-text. should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error: should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error( should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error() should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for :::spelling-error should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::spelling-error. should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error: should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error( should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error() should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for :::grammar-error should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::grammar-error. should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo)","status":"FAIL"},{"name":"getComputedStyle() for ::highlight(foo): should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo)) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo)( should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo)(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo)() should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for :::highlight(foo) should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"getComputedStyle() for ::highlight(foo). should return an empty CSSStyleDeclaration","status":"PASS"},{"name":"Different getComputedStyle() for ::highlight(bar) and same element","status":"FAIL"}]}