{"status":"OK","subtests":[{"name":"Should not parse invalid keyword: ","status":"PASS"},{"name":"Should not parse invalid keyword:  /* hey */\n","status":"PASS"},{"name":"Should not parse invalid keyword: 4","status":"PASS"},{"name":"Should not parse invalid keyword: top","status":"PASS"},{"name":"Should parse to completely transparent: /**/transparent","status":"PASS"},{"name":"Should parse to completely transparent: transparent","status":"PASS"},{"name":"Should parse to completely transparent:  transparent\n","status":"PASS"},{"name":"Should parse to completely transparent: TransParent","status":"PASS"},{"name":"Should be same as parent color: currentColor","status":"PASS"},{"name":"Should be same as parent color: CURRENTcolor","status":"PASS"},{"name":"Should not parse invalid keyword: current-Color","status":"PASS"},{"name":"Should parse as correct value: black","status":"PASS"},{"name":"Should parse as correct value: white","status":"PASS"},{"name":"Should parse as correct value: fuchsia","status":"PASS"},{"name":"Should parse as correct value: cyan","status":"PASS"},{"name":"Should parse as cyan: CyAn","status":"PASS"},{"name":"Should not parse invalid hex: #","status":"PASS"},{"name":"Should not parse invalid hex: #f","status":"PASS"},{"name":"Should not parse invalid hex: #ff","status":"PASS"},{"name":"Valid 3-digit hex: #fff","status":"PASS"},{"name":"Should not parse invalid hex: #ffg","status":"PASS"},{"name":"Valid 4-digit hex: #ffff","status":"PASS"},{"name":"Should not parse invalid hex: #fffg","status":"PASS"},{"name":"Should not parse invalid hex: #fffff","status":"PASS"},{"name":"Valid 6-digit hex: #ffffff","status":"PASS"},{"name":"Should not parse invalid hex: #fffffg","status":"PASS"},{"name":"Should not parse invalid hex: #fffffff","status":"PASS"},{"name":"Valid 8-digit hex: #ffffffff","status":"PASS"},{"name":"Should not parse invalid hex: #fffffffg","status":"PASS"},{"name":"Should not parse invalid hex: #fffffffff","status":"PASS"},{"name":"Valid 6-digit hex: #FFCc99","status":"PASS"},{"name":"Valid 3-digit hex: #369","status":"PASS"},{"name":"Valid numbers should be parsed: rgb(00, 51, 102)","status":"PASS"},{"name":"Correct escape sequences should still parse: r\\gb(00, 51, 102)","status":"PASS"},{"name":"Correct escape sequences should still parse: r\\67 b(00, 51, 102)","status":"PASS"},{"name":"Capitalization should not affect parsing: RGB(153, 204, 255)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgB(0, 0, 0)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgB(0, 51, 255)","status":"PASS"},{"name":"Lack of whitespace should not affect parsing: rgb(0,51,255)","status":"PASS"},{"name":"Whitespace should not affect parsing: rgb(0\t,  51 ,255)","status":"PASS"},{"name":"Comments should be allowed within function: rgb(/* R */0, /* G */51, /* B */255)","status":"PASS"},{"name":"Invalid values should be clamped to 0 and 255 respectively: rgb(-51, 306, 0)","status":"PASS"},{"name":"Valid percentages should be parsed: rgb(42%, 3%, 50%)","status":"PASS"},{"name":"Capitalization should not affect parsing: RGB(100%, 100%, 100%)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgB(0%, 0%, 0%)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgB(10%, 20%, 30%)","status":"PASS"},{"name":"Whitespace should not affect parsing: rgb(10%,20%,30%)","status":"PASS"},{"name":"Whitespace should not affect parsing: rgb(10%\t,  20% ,30%)","status":"PASS"},{"name":"Comments should not affect parsing: rgb(/* R */ 10%, /* G */ 20%, /* B */ 30%)","status":"PASS"},{"name":"Invalid values should be clamped to 0 and 255 respectively: rgb(-12%, 110%, 1400%)","status":"PASS"},{"name":"Values must be all numbers or all percentages: rgb(10%, 50%, 0)","status":"PASS"},{"name":"Values must be all numbers or all percentages: rgb(255, 50%, 0%)","status":"PASS"},{"name":"Comma optional syntax requires no commas at all: rgb(0, 0 0)","status":"PASS"},{"name":"Angles are not accepted in the rgb function: rgb(0, 0, 0deg)","status":"PASS"},{"name":"Keywords are not accepted in the rgb function: rgb(0, 0, light)","status":"PASS"},{"name":"The rgb function requires 3 or 4 arguments: rgb()","status":"PASS"},{"name":"The rgb function requires 3 or 4 arguments: rgb(0)","status":"PASS"},{"name":"The rgb function requires 3 or 4 arguments: rgb(0, 0)","status":"PASS"},{"name":"The rgb function requires 3 or 4 arguments: rgb(0%)","status":"PASS"},{"name":"The rgb function requires 3 or 4 arguments: rgb(0%, 0%)","status":"PASS"},{"name":"RGB and RGBA are synonyms: rgb(0, 0, 0, 0)","status":"PASS"},{"name":"RGB and RGBA are synonyms: rgb(0%, 0%, 0%, 0%)","status":"PASS"},{"name":"RGB and RGBA are synonyms: rgb(0%, 0%, 0%, 0)","status":"PASS"},{"name":"Valid numbers should be parsed: rgba(0, 0, 0, 0)","status":"PASS"},{"name":"Valid numbers should be parsed: rgba(204, 0, 102, 0.3)","status":"PASS"},{"name":"Capitalization should not affect parsing: RGBA(255, 255, 255, 0)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgBA(0, 51, 255, 1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, 1.1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, 37)","status":"PASS"},{"name":"Valid numbers should be parsed: rgba(0, 51, 255, 0.42)","status":"PASS"},{"name":"Valid numbers should be parsed: rgba(0, 51, 255, 0)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, -0.1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, -139)","status":"PASS"},{"name":"Capitalization should not affect parsing: RGBA(100%, 100%, 100%, 0)","status":"PASS"},{"name":"Valid percentages should be parsed: rgba(42%, 3%, 50%, 0.3)","status":"PASS"},{"name":"Capitalization should not affect parsing: rgBA(0%, 20%, 100%, 1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, 1.1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, 37)","status":"PASS"},{"name":"Valid percentages should be parsed: rgba(0%, 20%, 100%, 0.42)","status":"PASS"},{"name":"Valid percentages should be parsed: rgba(0%, 20%, 100%, 0)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, -0.1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, -139)","status":"PASS"},{"name":"Percent alpha values are accepted in rgb/rgba: rgba(255, 255, 255, 0%)","status":"PASS"},{"name":"Percent alpha values are accepted in rgb/rgba: rgba(0%, 0%, 0%, 0%)","status":"PASS"},{"name":"RGB and RGBA are synonyms: rgba(0%, 0%, 0%)","status":"PASS"},{"name":"RGB and RGBA are synonyms: rgba(0, 0, 0)","status":"PASS"},{"name":"Values must be all numbers or all percentages: rgba(10%, 50%, 0, 1)","status":"PASS"},{"name":"Values must be all numbers or all percentages: rgba(255, 50%, 0%, 1)","status":"PASS"},{"name":"Comma optional syntax requires no commas at all: rgba(0, 0, 0 0)","status":"PASS"},{"name":"Angles are not accepted in the rgb function: rgba(0, 0, 0, 0deg)","status":"PASS"},{"name":"Keywords are not accepted in the rgb function: rgba(0, 0, 0, light)","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba()","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba(0)","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba(0, 0, 0, 0, 0)","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba(0%)","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba(0%, 0%)","status":"PASS"},{"name":"The rgba function requires 3 or 4 arguments: rgba(0%, 0%, 0%, 0%, 0%)","status":"PASS"},{"name":"Capitalization should not affect parsing: HSL(0, 0%, 0%)","status":"PASS"},{"name":"Capitalization should not affect parsing: hsL(0, 100%, 50%)","status":"PASS"},{"name":"Valid numbers should be parsed: hsl(60, 100%, 37.5%)","status":"PASS"},{"name":"Angles are represented as a part of a circle and wrap around: hsl(780, 100%, 37.5%)","status":"PASS"},{"name":"Angles are represented as a part of a circle and wrap around: hsl(-300, 100%, 37.5%)","status":"PASS"},{"name":"Valid numbers should be parsed: hsl(300, 50%, 50%)","status":"PASS"},{"name":"Angles are accepted in HSL/HSLA: hsl(30deg, 100%, 100%)","status":"PASS"},{"name":"HSL and HSLA are synonyms: hsl(0, 0%, 0%, 0%)","status":"PASS"},{"name":"The second and third parameters of hsl/hsla must be a percent: hsl(10, 50%, 0)","status":"PASS"},{"name":"The first parameter of hsl/hsla must be a number or angle: hsl(50%, 50%, 0%)","status":"PASS"},{"name":"Comma optional syntax requires no commas at all: hsl(0, 0% 0%)","status":"PASS"},{"name":"Keywords are not accepted in the hsl function: hsl(0, 0%, light)","status":"PASS"},{"name":"The hsl function requires 3 or 4 arguments: hsl()","status":"PASS"},{"name":"The hsl function requires 3 or 4 arguments: hsl(0)","status":"PASS"},{"name":"The hsl function requires 3 or 4 arguments: hsl(0, 0%)","status":"PASS"},{"name":"Angles are represented as a part of a circle and wrap around: HSLA(-300, 100%, 37.5%, 1)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: hsLA(-300, 100%, 37.5%, 12)","status":"PASS"},{"name":"Angles are represented as a part of a circle and wrap around: hsla(-300, 100%, 37.5%, 0.2)","status":"PASS"},{"name":"Angles are represented as a part of a circle and wrap around: hsla(-300, 100%, 37.5%, 0)","status":"PASS"},{"name":"Invalid alpha values should be clamped to 0 and 1 respectively: hsla(-300, 100%, 37.5%, -3)","status":"PASS"},{"name":"Percent alpha values are accepted in hsl/hsla: hsla(0, 0%, 0%, 50%)","status":"PASS"},{"name":"Angles are accepted in HSL/HSLA: hsla(30deg, 100%, 100%, 1)","status":"PASS"},{"name":"The second and third parameters of hsl/hsla must be a percent: hsla(10, 50%, 0, 1)","status":"PASS"},{"name":"The first parameter of hsl/hsla must be a number or angle: hsla(50%, 50%, 0%, 1)","status":"PASS"},{"name":"Comma optional syntax requires no commas at all: hsla(0, 0% 0%, 1)","status":"PASS"},{"name":"Keywords are not accepted in the hsla function: hsla(0, 0%, light, 1)","status":"PASS"},{"name":"The hsla function requires 3 or 4 arguments: hsla()","status":"PASS"},{"name":"The hsla function requires 3 or 4 arguments: hsla(0)","status":"PASS"},{"name":"The hsla function requires 3 or 4 arguments: hsla(0, 0%)","status":"PASS"},{"name":"The hsla function requires 3 or 4 arguments: hsla(0, 0%, 0%, 1, 0%)","status":"PASS"}]}