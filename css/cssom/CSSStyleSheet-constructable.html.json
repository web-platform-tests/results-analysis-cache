{"status":"OK","subtests":[{"name":"document.adoptedStyleSheets should initially have length 0.","status":"PASS"},{"name":"new CSSStyleSheet produces empty CSSStyleSheet","status":"FAIL"},{"name":"title can be set in the CSSStyleSheet constructor","status":"FAIL"},{"name":"CSSStyleSheet.replace produces Promise<CSSStyleSheet>","status":"FAIL"},{"name":"Constructed style sheets can be applied on document","status":"PASS"},{"name":"Constructed style sheets can be applied on shadow root","status":"PASS"},{"name":"Re-attaching shadow host with adopted stylesheets work","status":"PASS"},{"name":"Attaching a shadow root that already has adopted stylesheets work","status":"PASS"},{"name":"Re-attaching shadow host and updating attributes work","status":"PASS"},{"name":"Changes to constructed stylesheets through CSSOM is reflected","status":"PASS"},{"name":"Constructed stylesheet can be used and modified in multiple TreeScopes","status":"PASS"},{"name":"Stylesheets constructed on the main Document cannot be used in iframes","status":"PASS"},{"name":"Stylesheet constructed on iframe cannot be used in the main Document","status":"PASS"},{"name":"Adding non-constructed stylesheet to AdoptedStyleSheets is not allowed when the owner document of the stylesheet is in the same document tree as the AdoptedStyleSheets","status":"PASS"},{"name":"Adding non-constructed stylesheet to AdoptedStyleSheets is not allowed when the owner document of the stylesheet and the AdoptedStyleSheets are in different document trees","status":"PASS"},{"name":"CSSStyleSheet.replaceSync replaces stylesheet text synchronously","status":"PASS"},{"name":"CSSStyleSheet.replaceSync correctly updates the style of its adopters synchronously","status":"PASS"},{"name":"Adopted sheets are ordered after non-adopted sheets in the shadow root","status":"PASS"},{"name":"Adopted sheets are ordered after non-adopted sheets in the document","status":"PASS"},{"name":"Inserting an @import rule through insertRule on a constructed stylesheet throws an exception","status":"PASS"},{"name":"CSSStyleSheet.replaceSync should not trigger any loads from @import rules","status":"PASS"},{"name":"CSSStyleSheet.replace allows, but ignores, import rule inside","status":"PASS"},{"name":"CSSStyleSheet.replace ignores @import rule but still loads other rules","status":"PASS"},{"name":"CSSStyleSheet.replaceSync allows, but ignores, import rule inside","status":"PASS"},{"name":"CSSStyleSheet.replace does not reject on failed imports","status":"PASS"},{"name":"Cloning a shadow host will not clone shadow root, and also adoptedStyleSheets","status":"PASS"},{"name":"Importing a shadow host will not copy shadow root, and also adoptedStyleSheets","status":"PASS"},{"name":"Adopting a shadow host will empty adoptedStyleSheets if adopting to a different document","status":"PASS"},{"name":"Adopting a shadow host's ancestor will empty adoptedStyleSheets if adopting to a different document","status":"PASS"},{"name":"Forcing a style update after adding an adopted stylesheet on a disconnected shadow root should not crash.","status":"PASS"},{"name":"Modifying an adopted stylesheet on a disconnected shadow root should not crash.","status":"PASS"},{"name":"Constructing a sheet with the default base URL uses the constructor document's base URL for CSS rules","status":"PASS"}]}