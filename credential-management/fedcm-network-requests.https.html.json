{"status":"ERROR","subtests":[{"name":"Successfully obtaining token should resolve the promise.","status":"FAIL"},{"name":"When there's a pending request, a second `get` call should be rejected. ","status":"FAIL"},{"name":"Reject when provider list is empty","status":"FAIL"},{"name":"Reject when configURL is missing","status":"PASS"},{"name":"Reject when configURL is invalid","status":"FAIL"},{"name":"Reject when clientId is empty","status":"FAIL"},{"name":"nonce is not required in FederatedIdentityProvider.","status":"FAIL"},{"name":"Reject when clientId is missing","status":"PASS"},{"name":"Test the abort signal","status":"FAIL"},{"name":"Get after abort should work","status":"FAIL"},{"name":"Test that the promise is rejected if the manifest is not in the manifest list","status":"FAIL"},{"name":"Test that promise is rejected if accounts endpoint redirects","status":"FAIL"},{"name":"Test that token endpoint does not follow redirects","status":"FAIL"},{"name":"Test client_metadata request","status":"FAIL"},{"name":"Test that service worker cannot observe fetches performed by FedCM API","status":"TIMEOUT"},{"name":"Test basic User InFo API flow","status":"NOTRUN"},{"name":"Test that User Info API only works when invoked from iframe that is same origin as the IDP","status":"NOTRUN"},{"name":"Test that User Info API does not work in the top frame","status":"NOTRUN"},{"name":"Test that the returning account from the two accounts will be auto re-authenticated.","status":"NOTRUN"}]}