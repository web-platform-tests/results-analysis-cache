{"status":"OK","subtests":[{"name":"CloseWatchers created without user activation, but requestClose()d via user activation, fires cancel","status":"PASS"},{"name":"CloseWatchers created without user activation, but requestClose()d via user activation, fires cancel, which can be preventDefault()ed","status":"PASS"},{"name":"CloseWatchers created without user activation, but close()d via user activation, do not fire cancel","status":"PASS"},{"name":"CloseWatchers created without user activation, but closed via a close request after user activation, fires cancel","status":"PASS"},{"name":"CloseWatchers created without user activation, but closed via a close request after user activation, fires cancel, which can be preventDefault()ed","status":"PASS"},{"name":"Multiple CloseWatchers created without user activation close together (with no cancel)","status":"PASS"},{"name":"Creating a CloseWatcher from user activation keeps it separate from the free CloseWatcher, but they don't fire cancel","status":"PASS"},{"name":"Creating a CloseWatcher from user activation, and requestClose()ing CloseWatchers with user activation, fires cancel","status":"PASS"},{"name":"Creating a CloseWatcher from user activation, and closing CloseWatchers with a close request after user activation, fires cancel","status":"PASS"},{"name":"Multiple CloseWatchers created with user activation close in reverse order","status":"PASS"},{"name":"3 user activations let you have 3 + 1 = 4 ungrouped close watchers/0 cancel events","status":"PASS"},{"name":"3 user activations let you have 2 close watchers with 1 cancel event, even if the first cancel event is prevented","status":"PASS"},{"name":"destroy()ing the free CloseWatcher allows a new free one to be created without user activation, and it receives the close request","status":"PASS"},{"name":"requestClose()ing the free CloseWatcher allows a new free one to be created without user activation, and it receives the close request","status":"PASS"},{"name":"closing the free CloseWatcher via a close request allows a new free one to be created without user activation, and it receives a second close request","status":"PASS"},{"name":"The second watcher can be the free watcher, if the first is created with user activation","status":"PASS"},{"name":"The third watcher can be the free watcher, if the first two are created with user activation","status":"PASS"}]}