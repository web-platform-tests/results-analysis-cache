{"status":"OK","subtests":[{"name":"close() with no user activation only fires close","status":"FAIL"},{"name":"destroy() then close() fires no events","status":"FAIL"},{"name":"close() then destroy() fires only one close event","status":"FAIL"},{"name":"Esc key does not count as user activation, so it fires close but not cancel","status":"FAIL"},{"name":"destroy() then close via Esc key fires no events","status":"FAIL"},{"name":"Esc key then destroy() fires only one close event","status":"FAIL"},{"name":"close via synthesized escape key should not work","status":"FAIL"},{"name":"Multiple CloseWatchers require a user activation.","status":"FAIL"},{"name":"Cannot create multiple CloseWatchers from a single user activation","status":"FAIL"},{"name":"Multiple CloseWatchers work as a stack if secondary watchers are created with a user activation.","status":"FAIL"},{"name":"3 user activations let you have 3 + 1 = 4 close watchers/0 cancel events","status":"FAIL"},{"name":"3 user activations let you have 2 close watchers with 1 cancel event, even if the first cancel event is prevented","status":"FAIL"},{"name":"destroying a free CloseWatcher allows a new one to be created without a user activation.","status":"FAIL"},{"name":"close()ing a free CloseWatcher allows a new one to be created without a user activation.","status":"FAIL"},{"name":"Closing a free CloseWatcher via the escape key allows a new one to be created without a user activation.","status":"FAIL"},{"name":"destroy inside oncancel","status":"FAIL"},{"name":"destroy inside onclose is benign","status":"FAIL"},{"name":"close inside oncancel should not trigger an infinite loop","status":"FAIL"},{"name":"close inside onclose should not trigger an infinite loop","status":"FAIL"},{"name":"close with events added via addEventListener","status":"FAIL"}]}