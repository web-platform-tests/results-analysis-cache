{"status":"OK","subtests":[{"name":"CloseWatchers created without user activation, but requestClose()d via user activation, fires cancel","status":"PASS"},{"name":"CloseWatchers created without user activation, but requestClose()d via user activation, fires cancel, which can be preventDefault()ed","status":"PASS"},{"name":"Creating a CloseWatcher from user activation, and requestClose()ing CloseWatchers with user activation, fires cancel","status":"PASS"},{"name":"3 user activations let you have 2 close watchers with 1 cancel event, even if the first cancel event is prevented","status":"PASS"},{"name":"requestClose()ing the free CloseWatcher allows a new free one to be created without user activation, and it receives the close request","status":"PASS"}]}