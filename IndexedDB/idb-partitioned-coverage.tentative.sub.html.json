{"status":"OK","subtests":[{"name":"Deletes are processed in order","status":"FAIL"},{"name":" - advance","status":"FAIL"},{"name":" - continue","status":"FAIL"},{"name":" - fresh advance still async","status":"FAIL"},{"name":" - fresh continue still async","status":"FAIL"},{"name":"Single item get","status":"FAIL"},{"name":"Empty object store","status":"FAIL"},{"name":"Get all keys","status":"FAIL"},{"name":"maxCount=10","status":"FAIL"},{"name":"Get bound range","status":"FAIL"},{"name":"Get bound range with maxCount","status":"FAIL"},{"name":"Get upper excluded","status":"FAIL"},{"name":"Get lower excluded","status":"FAIL"},{"name":"Get bound range (generated) with maxCount","status":"FAIL"},{"name":"Non existent key","status":"FAIL"},{"name":"maxCount=0","status":"FAIL"},{"name":"Retrieve multiEntry key","status":"FAIL"},{"name":"Retrieve one key multiple values","status":"FAIL"},{"name":"IDBObjectStore.openKeyCursor() - forward iteration","status":"FAIL"},{"name":"IDBObjectStore.openKeyCursor() - reverse iteration","status":"FAIL"},{"name":"IDBObjectStore.openKeyCursor() - forward iteration with range","status":"FAIL"},{"name":"IDBObjectStore.openKeyCursor() - reverse iteration with range","status":"FAIL"},{"name":"IDBObjectStore.openKeyCursor() - invalid inputs","status":"FAIL"},{"name":" - request gotten by the handler","status":"FAIL"},{"name":" - request returned by open()","status":"FAIL"}]}