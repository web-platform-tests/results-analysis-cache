{"status":"OK","subtests":[{"name":"EventTarget interface: existence and properties of interface object","status":"PASS"},{"name":"EventTarget interface object length","status":"PASS"},{"name":"EventTarget interface object name","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventTarget interface: operation addEventListener(DOMString, EventListener, [object Object],[object Object])","status":"PASS"},{"name":"EventTarget interface: operation removeEventListener(DOMString, EventListener, [object Object],[object Object])","status":"PASS"},{"name":"EventTarget interface: operation dispatchEvent(Event)","status":"PASS"},{"name":"EventListener interface: existence and properties of interface object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventListener interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventListener interface: operation handleEvent(Event)","status":"PASS"},{"name":"EventSource interface: existence and properties of interface object","status":"PASS"},{"name":"EventSource interface object length","status":"PASS"},{"name":"EventSource interface object name","status":"PASS"},{"name":"EventSource interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventSource interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventSource interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventSource interface: attribute url","status":"PASS"},{"name":"EventSource interface: attribute withCredentials","status":"PASS"},{"name":"EventSource interface: constant CONNECTING on interface object","status":"PASS"},{"name":"EventSource interface: constant CONNECTING on interface prototype object","status":"PASS"},{"name":"EventSource interface: constant OPEN on interface object","status":"PASS"},{"name":"EventSource interface: constant OPEN on interface prototype object","status":"PASS"},{"name":"EventSource interface: constant CLOSED on interface object","status":"PASS"},{"name":"EventSource interface: constant CLOSED on interface prototype object","status":"PASS"},{"name":"EventSource interface: attribute readyState","status":"PASS"},{"name":"EventSource interface: attribute onopen","status":"PASS"},{"name":"EventSource interface: attribute onmessage","status":"PASS"},{"name":"EventSource interface: attribute onerror","status":"PASS"},{"name":"EventSource interface: operation close()","status":"PASS"},{"name":"EventSource must be primary interface of new EventSource(\"http://foo\")","status":"PASS"},{"name":"Stringification of new EventSource(\"http://foo\")","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"url\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"withCredentials\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"CONNECTING\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"OPEN\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"CLOSED\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"readyState\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"onopen\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"onmessage\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"onerror\" with the proper type","status":"PASS"},{"name":"EventSource interface: new EventSource(\"http://foo\") must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"EventTarget interface: new EventSource(\"http://foo\") must inherit property \"addEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener, [object Object],[object Object]) on new EventSource(\"http://foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new EventSource(\"http://foo\") must inherit property \"removeEventListener(DOMString, EventListener, [object Object],[object Object])\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener, [object Object],[object Object]) on new EventSource(\"http://foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new EventSource(\"http://foo\") must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new EventSource(\"http://foo\") with too few arguments must throw TypeError","status":"PASS"}]}