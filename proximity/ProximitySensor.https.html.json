{"status":"OK","subtests":[{"name":"ProximitySensor: Test that onerror is sent when sensor is not supported.","status":"FAIL"},{"name":"ProximitySensor: Test that onerror is sent when permissions are not granted.","status":"FAIL"},{"name":"ProximitySensor: Test that onerror is send when start() call has failed.","status":"FAIL"},{"name":"ProximitySensor: Test that frequency is capped to allowed maximum.","status":"FAIL"},{"name":"ProximitySensor: Test that frequency is capped to the maximum supported frequency.","status":"FAIL"},{"name":"ProximitySensor: Test that frequency is limited to the minimum supported frequency.","status":"FAIL"},{"name":"ProximitySensor: Test that sensor cannot be constructed within iframe disallowed to use feature policy.","status":"FAIL"},{"name":"ProximitySensor: Test that sensor can be constructed within an iframe allowed to use feature policy.","status":"FAIL"},{"name":"ProximitySensor: Test that 'onreading' is called and sensor reading is valid.","status":"FAIL"},{"name":"ProximitySensor: sensor reading is correct.","status":"FAIL"},{"name":"ProximitySensor: sensor timestamp is updated when time passes.","status":"FAIL"},{"name":"ProximitySensor: Test that sensor can be successfully created and its states are correct.","status":"FAIL"},{"name":"ProximitySensor: sensor.start() returns undefined.","status":"FAIL"},{"name":"ProximitySensor: no exception is thrown when calling start() on already started sensor.","status":"FAIL"},{"name":"ProximitySensor: sensor.stop() returns undefined.","status":"FAIL"},{"name":"ProximitySensor: no exception is thrown when calling stop() on already stopped sensor.","status":"FAIL"},{"name":"ProximitySensor: Test that fresh reading is fetched on start().","status":"FAIL"},{"name":"ProximitySensor: frequency hint works.","status":"FAIL"},{"name":"ProximitySensor: sensor receives suspend / resume notifications when cross-origin subframe is focused.","status":"FAIL"},{"name":"ProximitySensor: throw 'TypeError' if frequency is invalid.","status":"FAIL"}]}