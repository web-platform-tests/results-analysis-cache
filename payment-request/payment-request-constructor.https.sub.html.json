{"status":"OK","subtests":[{"name":"If details.id is missing, assign an identifier","status":"FAIL"},{"name":"If details.id is missing, assign a unique identifier","status":"FAIL"},{"name":"If the same id is provided, then use it","status":"FAIL"},{"name":"Use ids even if they are strange","status":"FAIL"},{"name":"Use provided request ID","status":"FAIL"},{"name":"If the length of the methodData sequence is zero, then throw a TypeError","status":"FAIL"},{"name":"If payment method is duplicate, then throw a RangeError","status":"FAIL"},{"name":"Modifier method data must be JSON-serializable object","status":"FAIL"},{"name":"Rethrow any exceptions of JSON-serializing paymentMethod.data into a string","status":"FAIL"},{"name":"If details.total.amount.value is not a valid decimal monetary value, then throw a TypeError","status":"FAIL"},{"name":"PaymentDetailsBase members can be 0 length","status":"FAIL"},{"name":"If the first character of details.total.amount.value is U+002D HYPHEN-MINUS, then throw a TypeError","status":"FAIL"},{"name":"For each item in details.displayItems: if item.amount.value is not a valid decimal monetary value, then throw a TypeError","status":"FAIL"},{"name":"Negative values are allowed for displayItems.amount.value, irrespective of total amount","status":"FAIL"},{"name":"it handles high precision currency values without throwing","status":"FAIL"},{"name":"For each option in details.shippingOptions: if option.amount.value is not a valid decimal monetary value, then throw a TypeError","status":"FAIL"},{"name":"If there is no selected shipping option, then PaymentRequest.shippingOption remains null","status":"FAIL"},{"name":"If there is a selected shipping option, and requestShipping is set, then that option becomes synchronously selected","status":"FAIL"},{"name":"If requestShipping is set, and if there is a multiple selected shipping options, only the last is selected.","status":"FAIL"},{"name":"If there are any duplicate shipping option ids, and shipping is requested, then throw a TypeError","status":"FAIL"},{"name":"Throw when there are duplicate shippingOption ids, even if other values are different","status":"FAIL"},{"name":"Throw TypeError if modifier.total.amount.value is not a valid decimal monetary value","status":"FAIL"},{"name":"If amount.value of additionalDisplayItems is not a valid decimal monetary value, then throw a TypeError","status":"FAIL"},{"name":"Modifier data must be JSON-serializable object (an Array in this case)","status":"FAIL"},{"name":"Modifier data must be JSON-serializable object (an Object in this case)","status":"FAIL"},{"name":"Rethrow any exceptions of JSON-serializing modifier.data","status":"FAIL"},{"name":"Shipping type should be valid","status":"FAIL"},{"name":"PaymentRequest.shippingAddress must initially be null","status":"FAIL"},{"name":"If options.requestShipping is not set, then request.shippingType attribute is null.","status":"FAIL"},{"name":"If options.requestShipping is true, request.shippingType will be options.shippingType.","status":"FAIL"}]}