{"status":"ERROR","subtests":[{"name":"assert_not_equals(navigator.ml, undefined, \"ml property is defined on navigator\")","status":"PASS"},{"name":"[lstmCell] throw if input is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if weight is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if recurrentWeight is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if hiddenState is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if cellState is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if bias option is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if recurrentBias option is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if peepholeWeight option is from another builder","status":"NOTRUN"},{"name":"[lstmCell] throw if activation option is from another builder","status":"NOTRUN"},{"name":"[lstmCell] Test with default options","status":"NOTRUN"},{"name":"[lstmCell] Test with given options","status":"NOTRUN"},{"name":"[lstmCell] Throw if hiddenSize is equal to zero","status":"NOTRUN"},{"name":"[lstmCell] Throw if hiddenSize is too large","status":"NOTRUN"},{"name":"[lstmCell] Throw if the input data type is not one of the floating point types","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of input is not 2","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of input is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of weight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of weight is not 2","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of weight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of recurrentWeight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of recurrentWeight is not 2","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of recurrentWeight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of hiddenState is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of hiddenState is not 2","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of hiddenState is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of cellState is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of cellState is not 2","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of cellState is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of options.bias is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of options.bias is not 1","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of options.bias is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of options.recurrentBias is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of options.recurrentBias is not 1","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of options.recurrentBias is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the data type of options.peepholeWeight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the rank of options.peepholeWeight is not 1","status":"NOTRUN"},{"name":"[lstmCell] Throw if the shape of options.peepholeWeight is incorrect","status":"NOTRUN"},{"name":"[lstmCell] Throw if the size of options.activations is not 3","status":"NOTRUN"}]}