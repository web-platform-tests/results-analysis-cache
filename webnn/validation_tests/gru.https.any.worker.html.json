{"status":"ERROR","subtests":[{"name":"assert_not_equals(navigator.ml, undefined, \"ml property is defined on navigator\")","status":"PASS"},{"name":"[gru] Test with default options","status":"NOTRUN"},{"name":"[gru] Test with given options","status":"NOTRUN"},{"name":"[gru] TypeError is expected if steps equals to zero","status":"NOTRUN"},{"name":"[gru] TypeError is expected if hiddenSize equals to zero","status":"NOTRUN"},{"name":"[gru] TypeError is expected if hiddenSize is too large","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the data type of the inputs is not one of the floating point types","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the rank of input is not 3","status":"NOTRUN"},{"name":"[gru] TypeError is expected if input.dimensions[0] is not equal to steps","status":"NOTRUN"},{"name":"[gru] TypeError is expected if weight.dimensions[1] is not 3 * hiddenSize","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the rank of recurrentWeight is not 3","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the recurrentWeight.dimensions is invalid","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the size of options.activations is not 2","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the rank of options.bias is not 2","status":"NOTRUN"},{"name":"[gru] TypeError is expected if options.bias.dimensions[1] is not 3 * hiddenSize","status":"NOTRUN"},{"name":"[gru] TypeError is expected if options.recurrentBias.dimensions[1] is not 3 * hiddenSize","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the rank of options.initialHiddenState is not 3","status":"NOTRUN"},{"name":"[gru] TypeError is expected if options.initialHiddenState.dimensions[2] is not inputSize","status":"NOTRUN"},{"name":"[gru] TypeError is expected if the dataType of options.initialHiddenState is incorrect","status":"NOTRUN"}]}