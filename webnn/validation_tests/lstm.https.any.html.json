{"status":"OK","subtests":[{"name":"assert_not_equals(navigator.ml, undefined, \"ml property is defined on navigator\")","status":"FAIL"},{"name":"[lstm] Test with default options","status":"FAIL"},{"name":"[lstm] Test with given options","status":"FAIL"},{"name":"[lstm] DataError is expected if hiddenSize equals to zero","status":"FAIL"},{"name":"[lstm] DataError is expected if hiddenSize is too large","status":"FAIL"},{"name":"[lstm] DataError is expected if steps equals to zero","status":"FAIL"},{"name":"[lstm] DataError is expected if the data type is not one of the floating point types","status":"FAIL"},{"name":"[lstm] DataError is expected if the rank of input is not 3","status":"FAIL"},{"name":"[lstm] DataError is expected if input.dimensions[0] is not equal to steps","status":"FAIL"},{"name":"[lstm] DataError is expected if the shape of weight is incorrect","status":"FAIL"},{"name":"[lstm] DataError is expected if the rank of recurrentWeight is not 3","status":"FAIL"},{"name":"[lstm] DataError is expected if the size of options.activations is not 3","status":"FAIL"},{"name":"[lstm] DataError is expected if the rank of options.bias is not 2","status":"FAIL"},{"name":"[lstm] DataError is expected if the shape of options.recurrentBias.dimensions is incorrect","status":"FAIL"},{"name":"[lstm] DataError is expected if the dataType of options.peepholeWeight is incorrect","status":"FAIL"},{"name":"[lstm] DataError is expected if the dataType of options.initialHiddenState is incorrect","status":"FAIL"},{"name":"[lstm] DataError is expected if the shape of options.initialCellState is incorrect","status":"FAIL"},{"name":"[lstm] throw if input is from another builder","status":"FAIL"},{"name":"[lstm] throw if weight is from another builder","status":"FAIL"},{"name":"[lstm] throw if recurrentWeight is from another builder","status":"FAIL"},{"name":"[lstm] throw if bias option is from another builder","status":"FAIL"},{"name":"[lstm] throw if recurrentBias option is from another builder","status":"FAIL"},{"name":"[lstm] throw if peepholeWeight option is from another builder","status":"FAIL"},{"name":"[lstm] throw if initialHiddenState option is from another builder","status":"FAIL"},{"name":"[lstm] throw if initialCellState option is from another builder","status":"FAIL"}]}