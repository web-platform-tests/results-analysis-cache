{"status":"OK","subtests":[{"name":"idl_test setup","status":"FAIL"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface MLContext: original interface defined","status":"PASS"},{"name":"Partial interface MLContext: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[2]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[2]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[3]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[3]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[4]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[4]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[5]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[5]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[6]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[6]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[7]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[7]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[8]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[8]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[9]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[9]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[10]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[10]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[11]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[11]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[12]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[12]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[13]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[13]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[14]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[14]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[15]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[15]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[16]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[16]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[17]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[17]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[18]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[18]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[19]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[19]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[20]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[20]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[21]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[21]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[22]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[22]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[23]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[23]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[24]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[24]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[25]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[25]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[26]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[26]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[27]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[27]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[28]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[28]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[29]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[29]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[30]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[30]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[31]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[31]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[32]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[32]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[33]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[33]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[34]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[34]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[35]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[35]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[36]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[36]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[37]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[37]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[38]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[38]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[39]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[39]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[40]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[40]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[41]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[41]: member names are unique","status":"PASS"},{"name":"Partial interface MLGraphBuilder[42]: original interface defined","status":"PASS"},{"name":"Partial interface MLGraphBuilder[42]: member names are unique","status":"PASS"},{"name":"Partial interface MLOperand: original interface defined","status":"PASS"},{"name":"Partial interface MLOperand: member names are unique","status":"PASS"},{"name":"Partial interface MLOperand[2]: original interface defined","status":"PASS"},{"name":"Partial interface MLOperand[2]: member names are unique","status":"PASS"},{"name":"Partial interface Navigator: member names are unique","status":"PASS"},{"name":"Partial interface mixin NavigatorID: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorML: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorML: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorContentUtils: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorCookies: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorPlugins: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorID: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorLanguage: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorOnLine: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorConcurrentHardware: member names are unique","status":"PASS"},{"name":"Navigator includes NavigatorGPU: member names are unique","status":"PASS"},{"name":"WorkerNavigator includes NavigatorGPU: member names are unique","status":"PASS"},{"name":"NavigatorML must be primary interface of navigator","status":"FAIL"},{"name":"Stringification of navigator","status":"FAIL"},{"name":"NavigatorML interface: navigator must inherit property \"ml\" with the proper type","status":"PASS"},{"name":"ML interface: existence and properties of interface object","status":"PASS"},{"name":"ML interface object length","status":"PASS"},{"name":"ML interface object name","status":"PASS"},{"name":"ML interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ML interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ML interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ML interface: operation createContext(optional MLContextOptions)","status":"PASS"},{"name":"ML interface: operation createContext(GPUDevice)","status":"PASS"},{"name":"ML must be primary interface of navigator.ml","status":"PASS"},{"name":"Stringification of navigator.ml","status":"PASS"},{"name":"ML interface: navigator.ml must inherit property \"createContext(optional MLContextOptions)\" with the proper type","status":"PASS"},{"name":"ML interface: calling createContext(optional MLContextOptions) on navigator.ml with too few arguments must throw TypeError","status":"PASS"},{"name":"ML interface: navigator.ml must inherit property \"createContext(GPUDevice)\" with the proper type","status":"PASS"},{"name":"ML interface: calling createContext(GPUDevice) on navigator.ml with too few arguments must throw TypeError","status":"PASS"},{"name":"MLActivation interface: existence and properties of interface object","status":"FAIL"},{"name":"MLActivation interface object length","status":"FAIL"},{"name":"MLActivation interface object name","status":"FAIL"},{"name":"MLActivation interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MLActivation interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MLActivation interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"MLActivation must be primary interface of relu","status":"FAIL"},{"name":"Stringification of relu","status":"FAIL"},{"name":"MLContext interface: existence and properties of interface object","status":"PASS"},{"name":"MLContext interface object length","status":"PASS"},{"name":"MLContext interface object name","status":"PASS"},{"name":"MLContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MLContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MLContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MLContext interface: operation compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)","status":"FAIL"},{"name":"MLContext must be primary interface of context","status":"PASS"},{"name":"Stringification of context","status":"PASS"},{"name":"MLContext interface: context must inherit property \"compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)\" with the proper type","status":"FAIL"},{"name":"MLContext interface: calling compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews) on context with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraph interface: existence and properties of interface object","status":"FAIL"},{"name":"MLGraph interface object length","status":"FAIL"},{"name":"MLGraph interface object name","status":"FAIL"},{"name":"MLGraph interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MLGraph interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MLGraph interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"MLGraph must be primary interface of graph","status":"FAIL"},{"name":"Stringification of graph","status":"FAIL"},{"name":"MLGraphBuilder interface: existence and properties of interface object","status":"FAIL"},{"name":"MLGraphBuilder interface object length","status":"FAIL"},{"name":"MLGraphBuilder interface object name","status":"FAIL"},{"name":"MLGraphBuilder interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MLGraphBuilder interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MLGraphBuilder interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"MLGraphBuilder interface: operation input(DOMString, MLOperandDescriptor)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation constant(MLOperandDescriptor, ArrayBufferView)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation constant(double, optional MLOperandDataType)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation build(MLNamedOperands)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation argMin(MLOperand, optional MLArgMinMaxOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation argMax(MLOperand, optional MLArgMinMaxOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation cast(MLOperand, MLOperandDataType)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation clamp(MLOperand, optional MLClampOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation clamp(optional MLClampOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation concat(sequence<MLOperand>, unsigned long)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation conv2d(MLOperand, MLOperand, optional MLConv2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation add(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation sub(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation mul(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation div(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation max(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation min(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation pow(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation equal(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation greater(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation greaterOrEqual(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation lesser(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation lesserOrEqual(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation not(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation abs(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation ceil(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation cos(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation erf(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation exp(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation floor(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation identity(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation log(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation neg(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reciprocal(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation sin(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation sqrt(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation tan(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation elu(MLOperand, optional MLEluOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation elu(optional MLEluOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation expand(MLOperand, sequence<unsigned long>)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation gather(MLOperand, MLOperand, optional MLGatherOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation gemm(MLOperand, MLOperand, optional MLGemmOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation hardSigmoid(MLOperand, optional MLHardSigmoidOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation hardSigmoid(optional MLHardSigmoidOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation hardSwish(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation hardSwish()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation layerNormalization(MLOperand, optional MLLayerNormalizationOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation leakyRelu(MLOperand, optional MLLeakyReluOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation leakyRelu(optional MLLeakyReluOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation linear(MLOperand, optional MLLinearOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation linear(optional MLLinearOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation matmul(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation pad(MLOperand, sequence<unsigned long>, sequence<unsigned long>, optional MLPadOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation averagePool2d(MLOperand, optional MLPool2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation l2Pool2d(MLOperand, optional MLPool2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation maxPool2d(MLOperand, optional MLPool2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation prelu(MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceL1(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceL2(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceLogSum(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceLogSumExp(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceMax(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceMean(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceMin(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceProduct(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceSum(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reduceSumSquare(MLOperand, optional MLReduceOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation relu(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation relu()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation resample2d(MLOperand, optional MLResample2dOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation reshape(MLOperand, sequence<unsigned long>)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation sigmoid(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation sigmoid()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation slice(MLOperand, sequence<unsigned long>, sequence<unsigned long>)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softmax(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softmax()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softplus(MLOperand, optional MLSoftplusOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softplus(optional MLSoftplusOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softsign(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation softsign()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation tanh(MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation tanh()","status":"FAIL"},{"name":"MLGraphBuilder interface: operation transpose(MLOperand, optional MLTransposeOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation triangular(MLOperand, optional MLTriangularOptions)","status":"FAIL"},{"name":"MLGraphBuilder interface: operation where(MLOperand, MLOperand, MLOperand)","status":"FAIL"},{"name":"MLGraphBuilder must be primary interface of builder","status":"FAIL"},{"name":"Stringification of builder","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"input(DOMString, MLOperandDescriptor)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling input(DOMString, MLOperandDescriptor) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"constant(MLOperandDescriptor, ArrayBufferView)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling constant(MLOperandDescriptor, ArrayBufferView) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"constant(double, optional MLOperandDataType)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling constant(double, optional MLOperandDataType) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"build(MLNamedOperands)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling build(MLNamedOperands) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"argMin(MLOperand, optional MLArgMinMaxOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling argMin(MLOperand, optional MLArgMinMaxOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"argMax(MLOperand, optional MLArgMinMaxOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling argMax(MLOperand, optional MLArgMinMaxOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"cast(MLOperand, MLOperandDataType)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling cast(MLOperand, MLOperandDataType) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"clamp(MLOperand, optional MLClampOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling clamp(MLOperand, optional MLClampOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"clamp(optional MLClampOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling clamp(optional MLClampOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"concat(sequence<MLOperand>, unsigned long)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling concat(sequence<MLOperand>, unsigned long) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"conv2d(MLOperand, MLOperand, optional MLConv2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling conv2d(MLOperand, MLOperand, optional MLConv2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"add(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling add(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"sub(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling sub(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"mul(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling mul(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"div(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling div(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"max(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling max(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"min(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling min(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"pow(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling pow(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"equal(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling equal(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"greater(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling greater(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"greaterOrEqual(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling greaterOrEqual(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"lesser(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling lesser(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"lesserOrEqual(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling lesserOrEqual(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"not(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling not(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"abs(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling abs(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"ceil(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling ceil(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"cos(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling cos(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"erf(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling erf(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"exp(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling exp(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"floor(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling floor(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"identity(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling identity(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"log(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling log(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"neg(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling neg(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reciprocal(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reciprocal(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"sin(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling sin(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"sqrt(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling sqrt(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"tan(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling tan(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"elu(MLOperand, optional MLEluOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling elu(MLOperand, optional MLEluOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"elu(optional MLEluOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling elu(optional MLEluOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"expand(MLOperand, sequence<unsigned long>)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling expand(MLOperand, sequence<unsigned long>) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"gather(MLOperand, MLOperand, optional MLGatherOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling gather(MLOperand, MLOperand, optional MLGatherOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"gemm(MLOperand, MLOperand, optional MLGemmOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling gemm(MLOperand, MLOperand, optional MLGemmOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"hardSigmoid(MLOperand, optional MLHardSigmoidOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling hardSigmoid(MLOperand, optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"hardSigmoid(optional MLHardSigmoidOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling hardSigmoid(optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"hardSwish(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling hardSwish(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"hardSwish()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"layerNormalization(MLOperand, optional MLLayerNormalizationOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling layerNormalization(MLOperand, optional MLLayerNormalizationOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"leakyRelu(MLOperand, optional MLLeakyReluOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling leakyRelu(MLOperand, optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"leakyRelu(optional MLLeakyReluOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling leakyRelu(optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"linear(MLOperand, optional MLLinearOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling linear(MLOperand, optional MLLinearOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"linear(optional MLLinearOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling linear(optional MLLinearOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"matmul(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling matmul(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"pad(MLOperand, sequence<unsigned long>, sequence<unsigned long>, optional MLPadOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling pad(MLOperand, sequence<unsigned long>, sequence<unsigned long>, optional MLPadOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"averagePool2d(MLOperand, optional MLPool2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling averagePool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"l2Pool2d(MLOperand, optional MLPool2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling l2Pool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"maxPool2d(MLOperand, optional MLPool2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling maxPool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"prelu(MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling prelu(MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceL1(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceL1(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceL2(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceL2(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceLogSum(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceLogSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceLogSumExp(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceLogSumExp(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceMax(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceMax(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceMean(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceMean(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceMin(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceMin(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceProduct(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceProduct(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceSum(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reduceSumSquare(MLOperand, optional MLReduceOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reduceSumSquare(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"relu(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling relu(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"relu()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"resample2d(MLOperand, optional MLResample2dOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling resample2d(MLOperand, optional MLResample2dOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"reshape(MLOperand, sequence<unsigned long>)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling reshape(MLOperand, sequence<unsigned long>) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"sigmoid(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling sigmoid(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"sigmoid()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"slice(MLOperand, sequence<unsigned long>, sequence<unsigned long>)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling slice(MLOperand, sequence<unsigned long>, sequence<unsigned long>) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softmax(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling softmax(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softmax()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softplus(MLOperand, optional MLSoftplusOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling softplus(MLOperand, optional MLSoftplusOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softplus(optional MLSoftplusOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling softplus(optional MLSoftplusOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softsign(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling softsign(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"softsign()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"tanh(MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling tanh(MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"tanh()\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"transpose(MLOperand, optional MLTransposeOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling transpose(MLOperand, optional MLTransposeOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"triangular(MLOperand, optional MLTriangularOptions)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling triangular(MLOperand, optional MLTriangularOptions) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLGraphBuilder interface: builder must inherit property \"where(MLOperand, MLOperand, MLOperand)\" with the proper type","status":"FAIL"},{"name":"MLGraphBuilder interface: calling where(MLOperand, MLOperand, MLOperand) on builder with too few arguments must throw TypeError","status":"FAIL"},{"name":"MLOperand interface: existence and properties of interface object","status":"FAIL"},{"name":"MLOperand interface object length","status":"FAIL"},{"name":"MLOperand interface object name","status":"FAIL"},{"name":"MLOperand interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MLOperand interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MLOperand interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"MLOperand interface: operation dataType()","status":"FAIL"},{"name":"MLOperand interface: operation shape()","status":"FAIL"},{"name":"MLOperand must be primary interface of input","status":"FAIL"},{"name":"Stringification of input","status":"FAIL"},{"name":"MLOperand interface: input must inherit property \"dataType()\" with the proper type","status":"FAIL"},{"name":"MLOperand interface: input must inherit property \"shape()\" with the proper type","status":"FAIL"},{"name":"MLOperand must be primary interface of filter","status":"FAIL"},{"name":"Stringification of filter","status":"FAIL"},{"name":"MLOperand interface: filter must inherit property \"dataType()\" with the proper type","status":"FAIL"},{"name":"MLOperand interface: filter must inherit property \"shape()\" with the proper type","status":"FAIL"},{"name":"MLOperand must be primary interface of output","status":"FAIL"},{"name":"Stringification of output","status":"FAIL"},{"name":"MLOperand interface: output must inherit property \"dataType()\" with the proper type","status":"FAIL"},{"name":"MLOperand interface: output must inherit property \"shape()\" with the proper type","status":"FAIL"},{"name":"Navigator interface: attribute ml","status":"PASS"},{"name":"Navigator interface: navigator must inherit property \"ml\" with the proper type","status":"PASS"}]}