{"status":"OK","subtests":[{"name":"Node.prototype.cloneNode(false) must be able to clone a custom element","status":"FAIL"},{"name":"Node.prototype.cloneNode(false) must be able to clone as a autonomous custom element when it contains is attribute","status":"FAIL"},{"name":"Node.prototype.cloneNode(false) must be able to clone as a customized built-in element when it has an inconsistent \"is\" attribute","status":"FAIL"},{"name":"Node.prototype.cloneNode(false) must be able to clone a custom element inside an iframe","status":"FAIL"},{"name":"Node.prototype.cloneNode(true) must be able to clone a descendent custom element","status":"FAIL"},{"name":"Node.prototype.cloneNode(true) must set parentNode, previousSibling, and nextSibling before upgrading custom elements","status":"FAIL"},{"name":"HTMLElement constructor must throw an TypeError when the top of the construction stack is marked AlreadyConstructed due to a custom element constructor constructing itself after super() call","status":"FAIL"},{"name":"HTMLElement constructor must throw an TypeError when the top of the construction stack is marked AlreadyConstructed due to a custom element constructor constructing itself before super() call","status":"FAIL"},{"name":"Upgrading a custom element must throw TypeError when the custom element's constructor returns another element","status":"FAIL"},{"name":"Inserting an element must not try to upgrade a custom element when it had already failed to upgrade once","status":"FAIL"}]}