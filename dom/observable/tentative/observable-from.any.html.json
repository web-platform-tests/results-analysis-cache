{"status":"OK","subtests":[{"name":"from(): Observable.from() is a function","status":"FAIL"},{"name":"from(): Failed conversions","status":"PASS"},{"name":"from(): Given an observable, it returns that exact observable","status":"FAIL"},{"name":"from(): Given an array","status":"FAIL"},{"name":"from(): Iterable converts to Observable","status":"FAIL"},{"name":"from(): [Symbol.iterator] side-effects (one observable)","status":"FAIL"},{"name":"from(): [Symbol.iterator] side-effects (many observables)","status":"FAIL"},{"name":"from(): [Symbol.iterator] next() throws error","status":"FAIL"},{"name":"from(): Converts Promise to Observable","status":"FAIL"},{"name":"from(): Converts rejected Promise to Observable. No `unhandledrejection` event when error is handled by subscription","status":"FAIL"},{"name":"from(): Rejections not handled by subscription are reported to the global, and still not sent as an unhandledrejection event","status":"FAIL"},{"name":"from(): Observable that implements @@iterator protocol gets converted as an Observable, not iterator","status":"FAIL"},{"name":"from(): Promise that implements @@iterator protocol gets converted as an iterable, not Promise","status":"FAIL"}]}