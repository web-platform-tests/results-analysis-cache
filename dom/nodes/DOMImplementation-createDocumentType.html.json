{"status":"OK","subtests":[{"name":"DOMImplementation.createDocumentType(qualifiedName, publicId, systemId)","status":"PASS"},{"name":"createDocumentType(\"\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"test:root\", \"1234\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"test:root\", \"1234\", \"test\") should work","status":"PASS"},{"name":"createDocumentType(\"test:root\", \"test\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"test:root\", \"test\", \"test\") should work","status":"PASS"},{"name":"createDocumentType(\"_:_\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"_:h0\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"_:test\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"_:_.\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"_:a-\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"l_:_\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"ns:_0\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"ns:a0\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"ns0:test\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"ns:EEE.\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"ns:_-\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"a.b:c\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"a-b:c.j\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"a-b:c\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"1foo\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"foo1\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"f1oo\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"@foo\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"foo@\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"f@oo\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:{\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:}\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:~\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:'\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:!\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:@\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:#\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:$\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:%\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:^\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:&\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:*\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:(\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:)\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:+\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:=\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:[\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:]\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:\\\\\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:/\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:;\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:`\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:<\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:>\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:,\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:a \", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"edi:\\\"\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"{\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"}\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"'\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"~\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"`\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"@\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"#\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"$\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"%\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"^\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"&\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"*\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"(\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\")\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"PASS"},{"name":"createDocumentType(\"f:oo\", \"\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\":foo\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"FAIL"},{"name":"createDocumentType(\"foo:\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"FAIL"},{"name":"createDocumentType(\"prefix::local\", \"\", \"\") should throw INVALID_CHARACTER_ERR","status":"FAIL"},{"name":"createDocumentType(\"foo\", \"foo\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"foo\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"f'oo\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"f'oo\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"f\\\"oo\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"f\\\"oo\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"f'o\\\"o\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"f'o\\\"o\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"foo>\", \"\") should work","status":"PASS"},{"name":"createDocumentType(\"foo\", \"\", \"foo>\") should work","status":"PASS"}]}