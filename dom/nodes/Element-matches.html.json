{"status":"OK","subtests":[{"name":"Selectors-API Level 2 Test Suite: HTML with Selectors Level 3","status":"PASS"},{"name":"Document should not support matches","status":"PASS"},{"name":"Detached Element supports matches","status":"PASS"},{"name":"Fragment should not support matches","status":"PASS"},{"name":"In-document Element supports matches","status":"PASS"},{"name":"DIV Element.matches(null)","status":"PASS"},{"name":"DIV Element.matches(undefined)","status":"PASS"},{"name":"DIV Element.matches no parameter","status":"PASS"},{"name":"NULL Element.matches(null)","status":"PASS"},{"name":"NULL Element.matches(undefined)","status":"PASS"},{"name":"NULL Element.matches no parameter","status":"PASS"},{"name":"UNDEFINED Element.matches(null)","status":"PASS"},{"name":"UNDEFINED Element.matches(undefined)","status":"PASS"},{"name":"UNDEFINED Element.matches no parameter","status":"PASS"},{"name":"Detached Element.matches: Empty String: ","status":"PASS"},{"name":"Detached Element.matches: Invalid character: [","status":"PASS"},{"name":"Detached Element.matches: Invalid character: ]","status":"PASS"},{"name":"Detached Element.matches: Invalid character: (","status":"PASS"},{"name":"Detached Element.matches: Invalid character: )","status":"PASS"},{"name":"Detached Element.matches: Invalid character: {","status":"PASS"},{"name":"Detached Element.matches: Invalid character: }","status":"PASS"},{"name":"Detached Element.matches: Invalid character: <","status":"PASS"},{"name":"Detached Element.matches: Invalid character: >","status":"PASS"},{"name":"Detached Element.matches: Invalid ID: #","status":"PASS"},{"name":"Detached Element.matches: Invalid group of selectors: div,","status":"PASS"},{"name":"Detached Element.matches: Invalid class: .","status":"PASS"},{"name":"Detached Element.matches: Invalid class: .5cm","status":"PASS"},{"name":"Detached Element.matches: Invalid class: ..test","status":"PASS"},{"name":"Detached Element.matches: Invalid class: .foo..quux","status":"PASS"},{"name":"Detached Element.matches: Invalid class: .bar.","status":"PASS"},{"name":"Detached Element.matches: Invalid combinator: div & address, p","status":"PASS"},{"name":"Detached Element.matches: Invalid combinator: div ++ address, p","status":"PASS"},{"name":"Detached Element.matches: Invalid combinator: div ~~ address, p","status":"PASS"},{"name":"Detached Element.matches: Invalid [att=value] selector: [*=test]","status":"PASS"},{"name":"Detached Element.matches: Invalid [att=value] selector: [*|*=test]","status":"PASS"},{"name":"Detached Element.matches: Invalid [att=value] selector: [class= space unquoted ]","status":"PASS"},{"name":"Detached Element.matches: Unknown pseudo-class: div:example","status":"PASS"},{"name":"Detached Element.matches: Unknown pseudo-class: :example","status":"PASS"},{"name":"Detached Element.matches: Unknown pseudo-class: div:linkexample","status":"PASS"},{"name":"Detached Element.matches: Unknown pseudo-element: div::example","status":"PASS"},{"name":"Detached Element.matches: Unknown pseudo-element: ::example","status":"PASS"},{"name":"Detached Element.matches: Invalid pseudo-element: :::before","status":"PASS"},{"name":"Detached Element.matches: Invalid pseudo-element: :: before","status":"PASS"},{"name":"Detached Element.matches: Undeclared namespace: ns|div","status":"PASS"},{"name":"Detached Element.matches: Undeclared namespace: :not(ns|div)","status":"PASS"},{"name":"Detached Element.matches: Invalid namespace: ^|div","status":"PASS"},{"name":"Detached Element.matches: Invalid namespace: $|div","status":"PASS"},{"name":"Detached Element.matches: Relative selector: >*","status":"PASS"},{"name":"In-document Element.matches: Empty String: ","status":"PASS"},{"name":"In-document Element.matches: Invalid character: [","status":"PASS"},{"name":"In-document Element.matches: Invalid character: ]","status":"PASS"},{"name":"In-document Element.matches: Invalid character: (","status":"PASS"},{"name":"In-document Element.matches: Invalid character: )","status":"PASS"},{"name":"In-document Element.matches: Invalid character: {","status":"PASS"},{"name":"In-document Element.matches: Invalid character: }","status":"PASS"},{"name":"In-document Element.matches: Invalid character: <","status":"PASS"},{"name":"In-document Element.matches: Invalid character: >","status":"PASS"},{"name":"In-document Element.matches: Invalid ID: #","status":"PASS"},{"name":"In-document Element.matches: Invalid group of selectors: div,","status":"PASS"},{"name":"In-document Element.matches: Invalid class: .","status":"PASS"},{"name":"In-document Element.matches: Invalid class: .5cm","status":"PASS"},{"name":"In-document Element.matches: Invalid class: ..test","status":"PASS"},{"name":"In-document Element.matches: Invalid class: .foo..quux","status":"PASS"},{"name":"In-document Element.matches: Invalid class: .bar.","status":"PASS"},{"name":"In-document Element.matches: Invalid combinator: div & address, p","status":"PASS"},{"name":"In-document Element.matches: Invalid combinator: div ++ address, p","status":"PASS"},{"name":"In-document Element.matches: Invalid combinator: div ~~ address, p","status":"PASS"},{"name":"In-document Element.matches: Invalid [att=value] selector: [*=test]","status":"PASS"},{"name":"In-document Element.matches: Invalid [att=value] selector: [*|*=test]","status":"PASS"},{"name":"In-document Element.matches: Invalid [att=value] selector: [class= space unquoted ]","status":"PASS"},{"name":"In-document Element.matches: Unknown pseudo-class: div:example","status":"PASS"},{"name":"In-document Element.matches: Unknown pseudo-class: :example","status":"PASS"},{"name":"In-document Element.matches: Unknown pseudo-class: div:linkexample","status":"PASS"},{"name":"In-document Element.matches: Unknown pseudo-element: div::example","status":"PASS"},{"name":"In-document Element.matches: Unknown pseudo-element: ::example","status":"PASS"},{"name":"In-document Element.matches: Invalid pseudo-element: :::before","status":"PASS"},{"name":"In-document Element.matches: Invalid pseudo-element: :: before","status":"PASS"},{"name":"In-document Element.matches: Undeclared namespace: ns|div","status":"PASS"},{"name":"In-document Element.matches: Undeclared namespace: :not(ns|div)","status":"PASS"},{"name":"In-document Element.matches: Invalid namespace: ^|div","status":"PASS"},{"name":"In-document Element.matches: Invalid namespace: $|div","status":"PASS"},{"name":"In-document Element.matches: Relative selector: >*","status":"PASS"},{"name":"In-document Element.matches: Type selector, matching html element (with no refNodes): html","status":"PASS"},{"name":"In-document Element.matches: Type selector, matching body element (with no refNodes): body","status":"PASS"},{"name":"In-document Element.matches: Universal selector, matching all elements (with no refNodes): *","status":"PASS"},{"name":"In-document Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*","status":"PASS"},{"name":"In-document Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*","status":"PASS"},{"name":"In-document Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [*|TiTlE]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching align attribute with value, unclosed bracket (with no refNodes): #attr-value [align=\"center\"","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]","status":"PASS"},{"name":"In-document Element.matches: :root pseudo-class selector, matching document root element (with no refNodes): :root","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching the third last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child","status":"PASS"},{"name":"In-document Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child","status":"PASS"},{"name":"In-document Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child","status":"PASS"},{"name":"In-document Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type","status":"PASS"},{"name":"In-document Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty","status":"PASS"},{"name":"In-document Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty","status":"PASS"},{"name":"In-document Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited","status":"PASS"},{"name":"In-document Element.matches: :link and :visited pseudo-class selectors, matching link elements with href attributes (with no refNodes): #head :link, #head :visited","status":"PASS"},{"name":"In-document Element.matches: :target pseudo-class selector, matching the element referenced by the URL fragment identifier (with no refNodes): :target","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching inherited language (with no refNodes): #pseudo-lang-div1:lang(en)","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)","status":"PASS"},{"name":"In-document Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled","status":"PASS"},{"name":"In-document Element.matches: :enabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :enabled","status":"PASS"},{"name":"In-document Element.matches: :disabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled","status":"PASS"},{"name":"In-document Element.matches: :disabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :disabled","status":"PASS"},{"name":"In-document Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked","status":"PASS"},{"name":"In-document Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)","status":"PASS"},{"name":"In-document Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)","status":"PASS"},{"name":"In-document Element.matches: :not pseudo-class selector argument surrounded by spaces, matching  (with no refNodes): #not>:not( div )","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p","status":"PASS"},{"name":"In-document Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana","status":"PASS"},{"name":"In-document Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class value using non-ASCII characters (1) (with no refNodes): .台北Táiběi","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北","status":"PASS"},{"name":"In-document Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (1) (with no refNodes): .台北Táiběi.台北","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1","status":"PASS"},{"name":"In-document Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1","status":"PASS"},{"name":"In-document Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2","status":"PASS"},{"name":"In-document Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北Táiběi","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id value using non-ASCII characters (2) (with no refNodes): #台北","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id values using non-ASCII characters (1) (with no refNodes): #台北Táiběi, #台北","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): body #descendant-div1","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong","status":"PASS"},{"name":"Detached Element.matches: Universal selector, matching all elements (with no refNodes): *","status":"PASS"},{"name":"Detached Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*","status":"PASS"},{"name":"Detached Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*","status":"PASS"},{"name":"Detached Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [*|TiTlE]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]","status":"PASS"},{"name":"Detached Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching align attribute with value, unclosed bracket (with no refNodes): #attr-value [align=\"center\"","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]","status":"PASS"},{"name":"Detached Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]","status":"PASS"},{"name":"Detached Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]","status":"PASS"},{"name":"Detached Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']","status":"PASS"},{"name":"Detached Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']","status":"PASS"},{"name":"Detached Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]","status":"PASS"},{"name":"Detached Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]","status":"PASS"},{"name":"Detached Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)","status":"PASS"},{"name":"Detached Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)","status":"PASS"},{"name":"Detached Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)","status":"PASS"},{"name":"Detached Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)","status":"PASS"},{"name":"Detached Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)","status":"PASS"},{"name":"Detached Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)","status":"PASS"},{"name":"Detached Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-of-type selector, matching the third last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)","status":"PASS"},{"name":"Detached Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)","status":"PASS"},{"name":"Detached Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type","status":"PASS"},{"name":"Detached Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type","status":"PASS"},{"name":"Detached Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type","status":"PASS"},{"name":"Detached Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type","status":"PASS"},{"name":"Detached Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type","status":"PASS"},{"name":"Detached Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type","status":"PASS"},{"name":"Detached Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child","status":"PASS"},{"name":"Detached Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child","status":"PASS"},{"name":"Detached Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child","status":"PASS"},{"name":"Detached Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child","status":"PASS"},{"name":"Detached Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child","status":"PASS"},{"name":"Detached Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type","status":"PASS"},{"name":"Detached Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type","status":"PASS"},{"name":"Detached Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty","status":"PASS"},{"name":"Detached Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty","status":"PASS"},{"name":"Detached Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited","status":"PASS"},{"name":"Detached Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)","status":"PASS"},{"name":"Detached Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)","status":"PASS"},{"name":"Detached Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled","status":"PASS"},{"name":"Detached Element.matches: :enabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :enabled","status":"PASS"},{"name":"Detached Element.matches: :disabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled","status":"PASS"},{"name":"Detached Element.matches: :disabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :disabled","status":"PASS"},{"name":"Detached Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked","status":"PASS"},{"name":"Detached Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)","status":"PASS"},{"name":"Detached Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)","status":"PASS"},{"name":"Detached Element.matches: :not pseudo-class selector argument surrounded by spaces, matching  (with no refNodes): #not>:not( div )","status":"PASS"},{"name":"Detached Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p","status":"PASS"},{"name":"Detached Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana","status":"PASS"},{"name":"Detached Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange","status":"PASS"},{"name":"Detached Element.matches: Class selector, matching element with class value using non-ASCII characters (1) (with no refNodes): .台北Táiběi","status":"PASS"},{"name":"Detached Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北","status":"PASS"},{"name":"Detached Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (1) (with no refNodes): .台北Táiběi.台北","status":"PASS"},{"name":"Detached Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar","status":"PASS"},{"name":"Detached Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar","status":"PASS"},{"name":"Detached Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1","status":"PASS"},{"name":"Detached Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1","status":"PASS"},{"name":"Detached Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2","status":"PASS"},{"name":"Detached Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2","status":"PASS"},{"name":"Detached Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate","status":"PASS"},{"name":"Detached Element.matches: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北Táiběi","status":"PASS"},{"name":"Detached Element.matches: ID selector, matching id value using non-ASCII characters (2) (with no refNodes): #台北","status":"PASS"},{"name":"Detached Element.matches: ID selector, matching id values using non-ASCII characters (1) (with no refNodes): #台北Táiběi, #台北","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3","status":"PASS"},{"name":"Detached Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div","status":"PASS"},{"name":"Detached Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1","status":"PASS"},{"name":"Detached Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1","status":"PASS"},{"name":"Detached Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2","status":"PASS"},{"name":"Detached Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3","status":"PASS"},{"name":"Detached Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3","status":"PASS"},{"name":"Detached Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3","status":"PASS"},{"name":"Detached Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong","status":"PASS"},{"name":"Detached Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong","status":"PASS"},{"name":"Detached Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong","status":"PASS"},{"name":"Detached Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong","status":"PASS"},{"name":"Fragment Element.matches: Universal selector, matching all elements (with no refNodes): *","status":"PASS"},{"name":"Fragment Element.matches: Universal selector, matching all children of element with specified ID (with no refNodes): #universal>*","status":"PASS"},{"name":"Fragment Element.matches: Universal selector, matching all grandchildren of element with specified ID (with no refNodes): #universal>*>*","status":"PASS"},{"name":"Fragment Element.matches: Universal selector, matching all descendants of element with specified ID (with no refNodes): #universal *","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching align attribute with value (with no refNodes): .attr-presence-div1[align]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching align attribute with empty value (with no refNodes): .attr-presence-div2[align]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with no refNodes): #attr-presence [*|TiTlE]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching custom data-* attribute (with no refNodes): [data-attr-presence]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with no refNodes): ul[data-中文]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching option with selected attribute (with no refNodes): #attr-presence-select2 option[selected]","status":"PASS"},{"name":"Fragment Element.matches: Attribute presence selector, matching multiple options with selected attributes (with no refNodes): #attr-presence-select3 option[selected]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching align attribute with value (with no refNodes): #attr-value [align=\"center\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching align attribute with value, unclosed bracket (with no refNodes): #attr-value [align=\"center\"","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching align attribute with empty value (with no refNodes): #attr-value [align=\"\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-value=\"\\e9\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-value_foo=\"\\e9\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type='hidden'],#attr-value input[type='radio']","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=\"hidden\"],#attr-value input[type='radio']","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with no refNodes): #attr-value input[type=hidden],#attr-value input[type=radio]","status":"PASS"},{"name":"Fragment Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with no refNodes): [data-attr-value=中文]","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with no refNodes): #attr-whitespace [class~=\"div1\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with no refNodes): [data-attr-whitespace~=\"\\0000e9\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with no refNodes): [data-attr-whitespace_foo~=\"\\e9\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with no refNodes): #attr-whitespace a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]","status":"PASS"},{"name":"Fragment Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with no refNodes): #attr-whitespace [title~=中文]","status":"PASS"},{"name":"Fragment Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with no refNodes): #attr-hyphen-div2[lang|=\"fr\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with no refNodes): #attr-hyphen-div3[lang|=\"en\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with no refNodes): #attr-begins a[href^=\"http://www\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-begins [lang^=\"en-\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=' apple']","status":"PASS"},{"name":"Fragment Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-begins [class^=\" apple\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with no refNodes): #attr-ends a[href$=\".org\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-ends [lang$=\"-CH\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$='apple ']","status":"PASS"},{"name":"Fragment Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-ends [class$=\"apple \"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with no refNodes): #attr-contains a[href*=\"http://www\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with no refNodes): #attr-contains a[href*=\".org\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector, matching href attributes containing specified substring (with no refNodes): #attr-contains a[href*=\".example.\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with no refNodes): #attr-contains [lang*=\"en-\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with no refNodes): #attr-contains [lang*=\"-CH\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=' apple']","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*='orange ']","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*='ple banana ora']","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*=\" apple\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=\"orange \"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*=\"ple banana ora\"]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with no refNodes): #attr-contains [class*= apple]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with no refNodes): #attr-contains [class*=orange ]","status":"PASS"},{"name":"Fragment Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with no refNodes): #attr-contains [class*= banana ]","status":"PASS"},{"name":"Fragment Element.matches: :nth-child selector, matching the third child element (with no refNodes): #pseudo-nth-table1 :nth-child(3)","status":"PASS"},{"name":"Fragment Element.matches: :nth-child selector, matching every third child element (with no refNodes): #pseudo-nth li:nth-child(3n)","status":"PASS"},{"name":"Fragment Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with no refNodes): #pseudo-nth li:nth-child(2n+4)","status":"PASS"},{"name":"Fragment Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with no refNodes): #pseudo-nth-p1 :nth-child(4n-1)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-child selector, matching the third last child element (with no refNodes): #pseudo-nth-table1 :nth-last-child(3)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-child selector, matching every third child element from the end (with no refNodes): #pseudo-nth li:nth-last-child(3n)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with no refNodes): #pseudo-nth li:nth-last-child(2n+4)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with no refNodes): #pseudo-nth-p1 :nth-last-child(4n-1)","status":"PASS"},{"name":"Fragment Element.matches: :nth-of-type selector, matching the third em element (with no refNodes): #pseudo-nth-p1 em:nth-of-type(3)","status":"PASS"},{"name":"Fragment Element.matches: :nth-of-type selector, matching every second element of their type (with no refNodes): #pseudo-nth-p1 :nth-of-type(2n)","status":"PASS"},{"name":"Fragment Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with no refNodes): #pseudo-nth-p1 span:nth-of-type(2n-1)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-of-type selector, matching the third last em element (with no refNodes): #pseudo-nth-p1 em:nth-last-of-type(3)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-of-type selector, matching every second last element of their type (with no refNodes): #pseudo-nth-p1 :nth-last-of-type(2n)","status":"PASS"},{"name":"Fragment Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with no refNodes): #pseudo-nth-p1 span:nth-last-of-type(2n-1)","status":"PASS"},{"name":"Fragment Element.matches: :first-of-type selector, matching the first em element (with no refNodes): #pseudo-nth-p1 em:first-of-type","status":"PASS"},{"name":"Fragment Element.matches: :first-of-type selector, matching the first of every type of element (with no refNodes): #pseudo-nth-p1 :first-of-type","status":"PASS"},{"name":"Fragment Element.matches: :first-of-type selector, matching the first td element in each table row (with no refNodes): #pseudo-nth-table1 tr :first-of-type","status":"PASS"},{"name":"Fragment Element.matches: :last-of-type selector, matching the last em elemnet (with no refNodes): #pseudo-nth-p1 em:last-of-type","status":"PASS"},{"name":"Fragment Element.matches: :last-of-type selector, matching the last of every type of element (with no refNodes): #pseudo-nth-p1 :last-of-type","status":"PASS"},{"name":"Fragment Element.matches: :last-of-type selector, matching the last td element in each table row (with no refNodes): #pseudo-nth-table1 tr :last-of-type","status":"PASS"},{"name":"Fragment Element.matches: :first-child pseudo-class selector, matching first child div element (with no refNodes): #pseudo-first-child div:first-child","status":"PASS"},{"name":"Fragment Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-first-child span:first-child","status":"PASS"},{"name":"Fragment Element.matches: :last-child pseudo-class selector, matching last child div element (with no refNodes): #pseudo-last-child div:last-child","status":"PASS"},{"name":"Fragment Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with no refNodes): #pseudo-last-child span:last-child","status":"PASS"},{"name":"Fragment Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with no refNodes): #pseudo-only :only-child","status":"PASS"},{"name":"Fragment Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with no refNodes): #pseudo-only :only-of-type","status":"PASS"},{"name":"Fragment Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with no refNodes): #pseudo-only em:only-of-type","status":"PASS"},{"name":"Fragment Element.matches: :empty pseudo-class selector, matching empty p elements (with no refNodes): #pseudo-empty p:empty","status":"PASS"},{"name":"Fragment Element.matches: :empty pseudo-class selector, matching all empty elements (with no refNodes): #pseudo-empty :empty","status":"PASS"},{"name":"Fragment Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with no refNodes): #pseudo-link :link, #pseudo-link :visited","status":"PASS"},{"name":"Fragment Element.matches: :lang pseudo-class selector, matching specified language with exact value (with no refNodes): #pseudo-lang-div2:lang(fr)","status":"PASS"},{"name":"Fragment Element.matches: :lang pseudo-class selector, matching specified language with partial value (with no refNodes): #pseudo-lang-div3:lang(en)","status":"PASS"},{"name":"Fragment Element.matches: :enabled pseudo-class selector, matching all enabled form controls (with no refNodes): #pseudo-ui :enabled","status":"PASS"},{"name":"Fragment Element.matches: :enabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :enabled","status":"PASS"},{"name":"Fragment Element.matches: :disabled pseudo-class selector, matching all disabled form controls (with no refNodes): #pseudo-ui :disabled","status":"PASS"},{"name":"Fragment Element.matches: :disabled pseudo-class selector, not matching link elements (with no refNodes): #pseudo-link :disabled","status":"PASS"},{"name":"Fragment Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (with no refNodes): #pseudo-ui :checked","status":"PASS"},{"name":"Fragment Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not>:not(div)","status":"PASS"},{"name":"Fragment Element.matches: :not pseudo-class selector, matching  (with no refNodes): #not * :not(:first-child)","status":"PASS"},{"name":"Fragment Element.matches: :not pseudo-class selector argument surrounded by spaces, matching  (with no refNodes): #not>:not( div )","status":"PASS"},{"name":"Fragment Element.matches: Class selector, matching element with specified class (with no refNodes): .class-p","status":"PASS"},{"name":"Fragment Element.matches: Class selector, chained, matching only elements with all specified classes (with no refNodes): #class .apple.orange.banana","status":"PASS"},{"name":"Fragment Element.matches: Class Selector, chained, with type selector (with no refNodes): div.apple.banana.orange","status":"PASS"},{"name":"Fragment Element.matches: Class selector, matching element with class value using non-ASCII characters (1) (with no refNodes): .台北Táiběi","status":"PASS"},{"name":"Fragment Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (with no refNodes): .台北","status":"PASS"},{"name":"Fragment Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (1) (with no refNodes): .台北Táiběi.台北","status":"PASS"},{"name":"Fragment Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .foo\\:bar","status":"PASS"},{"name":"Fragment Element.matches: Class selector, matching element with class with escaped character (with no refNodes): .test\\.foo\\[5\\]bar","status":"PASS"},{"name":"Fragment Element.matches: ID selector, matching element with specified id (with no refNodes): #id #id-div1","status":"PASS"},{"name":"Fragment Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div1","status":"PASS"},{"name":"Fragment Element.matches: ID selector, chained, matching element with specified id (with no refNodes): #id-div1, #id-div2","status":"PASS"},{"name":"Fragment Element.matches: ID Selector, chained, with type selector (with no refNodes): div#id-div1, div#id-div2","status":"PASS"},{"name":"Fragment Element.matches: ID selector, matching multiple elements with duplicate id (with no refNodes): #id-li-duplicate","status":"PASS"},{"name":"Fragment Element.matches: ID selector, matching id value using non-ASCII characters (1) (with no refNodes): #台北Táiběi","status":"PASS"},{"name":"Fragment Element.matches: ID selector, matching id value using non-ASCII characters (2) (with no refNodes): #台北","status":"PASS"},{"name":"Fragment Element.matches: ID selector, matching id values using non-ASCII characters (1) (with no refNodes): #台北Táiběi, #台北","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, matching element that is a descendant of an element with id (with no refNodes): #descendant div","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, matching element with id that is a descendant of an element (with no refNodes): div #descendant-div1","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (with no refNodes): #descendant #descendant-div2","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (with no refNodes): #descendant .descendant-div2","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (with no refNodes): .descendant-div1 .descendant-div3","status":"PASS"},{"name":"Fragment Element.matches: Descendant combinator, whitespace characters (with no refNodes): #descendant\t\r\n#descendant-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, matching element that is a child of an element with id (with no refNodes): #child>div","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, matching element with id that is a child of an element (with no refNodes): div>#child-div1","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, matching element with id that is a child of an element with id (with no refNodes): #child>#child-div1","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, matching element with id that is a child of an element with class (with no refNodes): #child-div1>.child-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, matching element with class that is a child of an element with class (with no refNodes): .child-div1>.child-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, surrounded by whitespace (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, whitespace after (with no refNodes): #child-div1>\t\r\n#child-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, whitespace before (with no refNodes): #child-div1\t\r\n>#child-div2","status":"PASS"},{"name":"Fragment Element.matches: Child combinator, no whitespace (with no refNodes): #child-div1>#child-div2","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+div","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (with no refNodes): div+#adjacent-div4","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+#adjacent-div4","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (with no refNodes): #adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (with no refNodes): .adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (with no refNodes): #adjacent div+p","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, surrounded by whitespace (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, whitespace after (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, whitespace before (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3","status":"PASS"},{"name":"Fragment Element.matches: Adjacent sibling combinator, no whitespace (with no refNodes): #adjacent-p2+#adjacent-p3","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, matching element that is a sibling of an element with id (with no refNodes): #sibling-div2~div","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, matching element with id that is a sibling of an element (with no refNodes): div~#sibling-div4","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (with no refNodes): #sibling-div2~#sibling-div4","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (with no refNodes): #sibling-div2~.sibling-div","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, matching p element that is a sibling of a div element (with no refNodes): #sibling div~p","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, surrounded by whitespace (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, whitespace after (with no refNodes): #sibling-p2~\t\r\n#sibling-p3","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, whitespace before (with no refNodes): #sibling-p2\t\r\n~#sibling-p3","status":"PASS"},{"name":"Fragment Element.matches: General sibling combinator, no whitespace (with no refNodes): #sibling-p2~#sibling-p3","status":"PASS"},{"name":"Fragment Element.matches: Syntax, group of selectors separator, surrounded by whitespace (with no refNodes): #group em\t\r \n,\t\r \n#group strong","status":"PASS"},{"name":"Fragment Element.matches: Syntax, group of selectors separator, whitespace after (with no refNodes): #group em,\t\r\n#group strong","status":"PASS"},{"name":"Fragment Element.matches: Syntax, group of selectors separator, whitespace before (with no refNodes): #group em\t\r\n,#group strong","status":"PASS"},{"name":"Fragment Element.matches: Syntax, group of selectors separator, no whitespace (with no refNodes): #group em,#group strong","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching align attribute with value (with refNode Element): .attr-presence-div1[align]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching align attribute with empty value (with refNode Element): .attr-presence-div2[align]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching title attribute, case insensitivity (with refNode Element): [TiTlE]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching custom data-* attribute (with refNode Element): [data-attr-presence]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching attribute with non-ASCII characters (with refNode Element): ul[data-中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching option with selected attribute (with refNode Element): #attr-presence-select2 option[selected]","status":"PASS"},{"name":"In-document Element.matches: Attribute presence selector, matching multiple options with selected attributes (with refNode Element): #attr-presence-select3 option[selected]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching align attribute with value (with refNode Element): [align=\"center\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching align attribute with empty value (with refNode Element): [align=\"\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-value=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-value_foo=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with single-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type='hidden'],#attr-value input[type='radio']","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with double-quoted value, matching multiple inputs with type attributes (with refNode Element): input[type=\"hidden\"],#attr-value input[type='radio']","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector with unquoted value, matching multiple inputs with type attributes (with refNode Element): input[type=hidden],#attr-value input[type=radio]","status":"PASS"},{"name":"In-document Element.matches: Attribute value selector, matching attribute with value using non-ASCII characters (with refNode Element): [data-attr-value=中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching class attribute with value (with refNode Element): [class~=\"div1\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with unicode escaped value (with refNode Element): [data-attr-whitespace~=\"\\0000e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching custom data-* attribute with escaped character (with refNode Element): [data-attr-whitespace_foo~=\"\\e9\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with single-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~='bookmark'],  #attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with double-quoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=\"bookmark\"],#attr-whitespace a[rel~='nofollow']","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector with unquoted value, matching multiple links with rel attributes (with refNode Element): a[rel~=bookmark],    #attr-whitespace a[rel~=nofollow]","status":"PASS"},{"name":"In-document Element.matches: Attribute whitespace-separated list selector, matching title attribute with value using non-ASCII characters (with refNode Element): [title~=中文]","status":"PASS"},{"name":"In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with exact value (with refNode Element): #attr-hyphen-div2[lang|=\"fr\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute hyphen-separated list selector, matching lang attribute with partial value (with refNode Element): #attr-hyphen-div3[lang|=\"en\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector, matching href attributes beginning with specified substring (with refNode Element): a[href^=\"http://www\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang^=\"en-\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=' apple']","status":"PASS"},{"name":"In-document Element.matches: Attribute begins with selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class^=\" apple\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector, matching href attributes ending with specified substring (with refNode Element): a[href$=\".org\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang$=\"-CH\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$='apple ']","status":"PASS"},{"name":"In-document Element.matches: Attribute ends with selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class$=\"apple \"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes beginning with specified substring (with refNode Element): a[href*=\"http://www\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes ending with specified substring (with refNode Element): a[href*=\".org\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching href attributes containing specified substring (with refNode Element): a[href*=\".example.\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching lang attributes beginning with specified substring,  (with refNode Element): [lang*=\"en-\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector, matching lang attributes ending with specified substring,  (with refNode Element): [lang*=\"-CH\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=' apple']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*='orange ']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with single-quoted value, matching class attribute containing specified substring (with refNode Element): [class*='ple banana ora']","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute beginning with specified substring (with refNode Element): [class*=\" apple\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute ending with specified substring (with refNode Element): [class*=\"orange \"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with double-quoted value, matching class attribute containing specified substring (with refNode Element): [class*=\"ple banana ora\"]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute beginning with specified substring (with refNode Element): [class*= apple]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute ending with specified substring (with refNode Element): [class*=orange ]","status":"PASS"},{"name":"In-document Element.matches: Attribute contains selector with unquoted value, matching class attribute containing specified substring (with refNode Element): [class*= banana ]","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching the third child element (with refNode Element): :nth-child(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every third child element (with refNode Element): li:nth-child(3n)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every second child element, starting from the fourth (with refNode Element): li:nth-child(2n+4)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every second child element, starting from the fourth, with whitespace (with refNode Element): li:nth-child(2n \t\r\n+ \t\r\n4)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every fourth child element, starting from the third (with refNode Element): :nth-child(4n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector, matching every fourth child element, starting from the third, with whitespace (with refNode Element): :nth-child(4n \t\r\n- \t\r\n1)","status":"PASS"},{"name":"In-document Element.matches: :nth-child selector used twice, matching  (with refNode Element): :nth-child(1) :nth-child(1)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching the third last child element (with refNode Element): :nth-last-child(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every third child element from the end (with refNode Element): li:nth-last-child(3n)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every second child element from the end, starting from the fourth last (with refNode Element): li:nth-last-child(2n+4)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-child selector, matching every fourth element from the end, starting from the third last (with refNode Element): :nth-last-child(4n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching the third em element (with refNode Element): em:nth-of-type(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching every second element of their type (with refNode Element): :nth-of-type(2n)","status":"PASS"},{"name":"In-document Element.matches: :nth-of-type selector, matching every second elemetn of their type, starting from the first (with refNode Element): span:nth-of-type(2n-1)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching the third last em element (with refNode Element): em:nth-last-of-type(3)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type (with refNode Element): :nth-last-of-type(2n)","status":"PASS"},{"name":"In-document Element.matches: :nth-last-of-type selector, matching every second last element of their type, starting from the last (with refNode Element): span:nth-last-of-type(2n-1)","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first em element (with refNode Element): em:first-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first of every type of element (with refNode Element): :first-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-of-type selector, matching the first td element in each table row (with refNode Element): tr :first-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last em elemnet (with refNode Element): em:last-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last of every type of element (with refNode Element): :last-of-type","status":"PASS"},{"name":"In-document Element.matches: :last-of-type selector, matching the last td element in each table row (with refNode Element): tr :last-of-type","status":"PASS"},{"name":"In-document Element.matches: :first-child pseudo-class selector, matching first child div element (with refNode Element): div:first-child","status":"PASS"},{"name":"In-document Element.matches: :first-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:first-child","status":"PASS"},{"name":"In-document Element.matches: :last-child pseudo-class selector, matching last child div element (with refNode Element): div:last-child","status":"PASS"},{"name":"In-document Element.matches: :last-child pseudo-class selector, matching first-child of multiple elements (with refNode Element): span:last-child","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-child pseudo-class selector, matching all only-child elements (with refNode Element): :only-child","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching all elements with no siblings of the same type (with refNode Element):  :only-of-type","status":"PASS"},{"name":"In-document Element.matches: :pseudo-only-of-type pseudo-class selector, matching em elements with no siblings of the same type (with refNode Element):  em:only-of-type","status":"PASS"},{"name":"In-document Element.matches: :empty pseudo-class selector, matching empty p elements (with refNode Element): p:empty","status":"PASS"},{"name":"In-document Element.matches: :empty pseudo-class selector, matching all empty elements (with refNode Element): :empty","status":"PASS"},{"name":"In-document Element.matches: :link and :visited pseudo-class selectors, matching a and area elements with href attributes (with refNode Element):  :link, #pseudo-link :visited","status":"PASS"},{"name":"In-document Element.matches: :link and :visited pseudo-class selectors, matching link elements with href attributes (with refNode Element):  :link, #head :visited","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching inherited language (1) (with no refNodes): #pseudo-lang-div1:lang(en)","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching specified language with exact value (1) (with no refNodes): #pseudo-lang-div2:lang(fr)","status":"PASS"},{"name":"In-document Element.matches: :lang pseudo-class selector, matching specified language with partial value (1) (with no refNodes): #pseudo-lang-div3:lang(en)","status":"PASS"},{"name":"In-document Element.matches: :enabled pseudo-class selector, matching all enabled form controls (1) (with no refNodes): #pseudo-ui :enabled","status":"PASS"},{"name":"In-document Element.matches: :enabled pseudo-class selector, not matching link elements (1) (with no refNodes): #pseudo-link :enabled","status":"PASS"},{"name":"In-document Element.matches: :disabled pseudo-class selector, matching all disabled form controls (1) (with no refNodes): #pseudo-ui :disabled","status":"PASS"},{"name":"In-document Element.matches: :disabled pseudo-class selector, not matching link elements (1) (with no refNodes): #pseudo-link :disabled","status":"PASS"},{"name":"In-document Element.matches: :checked pseudo-class selector, matching checked radio buttons and checkboxes (1) (with no refNodes): #pseudo-ui :checked","status":"PASS"},{"name":"In-document Element.matches: :not pseudo-class selector, matching (1) (with no refNodes): #not>:not(div)","status":"PASS"},{"name":"In-document Element.matches: :not pseudo-class selector, matching (1) (with no refNodes): #not * :not(:first-child)","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with specified class (1) (with no refNodes): .class-p","status":"PASS"},{"name":"In-document Element.matches: Class selector, chained, matching only elements with all specified classes (1) (with no refNodes): #class .apple.orange.banana","status":"PASS"},{"name":"In-document Element.matches: Class Selector, chained, with type selector (1) (with no refNodes): div.apple.banana.orange","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class value using non-ASCII characters (2) (with no refNodes): .台北Táiběi","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching multiple elements with class value using non-ASCII characters (1) (with no refNodes): .台北","status":"PASS"},{"name":"In-document Element.matches: Class selector, chained, matching element with multiple class values using non-ASCII characters (2) (with no refNodes): .台北Táiběi.台北","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class with escaped character (1) (with no refNodes): .foo\\:bar","status":"PASS"},{"name":"In-document Element.matches: Class selector, matching element with class with escaped character (1) (with no refNodes): .test\\.foo\\[5\\]bar","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching element with specified id (1) (with no refNodes): #id #id-div1","status":"PASS"},{"name":"In-document Element.matches: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div1","status":"PASS"},{"name":"In-document Element.matches: ID selector, chained, matching element with specified id (1) (with no refNodes): #id-div1, #id-div2","status":"PASS"},{"name":"In-document Element.matches: ID Selector, chained, with type selector (1) (with no refNodes): div#id-div1, div#id-div2","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching multiple elements with duplicate id (1) (with no refNodes): #id-li-duplicate","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id value using non-ASCII characters (3) (with no refNodes): #台北Táiběi","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id value using non-ASCII characters (4) (with no refNodes): #台北","status":"PASS"},{"name":"In-document Element.matches: ID selector, matching id values using non-ASCII characters (2) (with no refNodes): #台北Táiběi, #台北","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element that is a descendant of an element with id (1) (with no refNodes): #descendant div","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): body #descendant-div1","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element (1) (with no refNodes): div #descendant-div1","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with id that is a descendant of an element with id (1) (with no refNodes): #descendant #descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with id (1) (with no refNodes): #descendant .descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, matching element with class that is a descendant of an element with class (1) (with no refNodes): .descendant-div1 .descendant-div3","status":"PASS"},{"name":"In-document Element.matches: Descendant combinator, whitespace characters (1) (with no refNodes): #descendant\t\r\n#descendant-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element that is a child of an element with id (1) (with no refNodes): #child>div","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element (1) (with no refNodes): div>#child-div1","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element with id (1) (with no refNodes): #child>#child-div1","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with id that is a child of an element with class (1) (with no refNodes): #child-div1>.child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, matching element with class that is a child of an element with class (1) (with no refNodes): .child-div1>.child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, surrounded by whitespace (1) (with no refNodes): #child-div1\t\r\n>\t\r\n#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, whitespace after (1) (with no refNodes): #child-div1>\t\r\n#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, whitespace before (1) (with no refNodes): #child-div1\t\r\n>#child-div2","status":"PASS"},{"name":"In-document Element.matches: Child combinator, no whitespace (1) (with no refNodes): #child-div1>#child-div2","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+div","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element (1) (with no refNodes): div+#adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with id that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+#adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with id (1) (with no refNodes): #adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching element with class that is an adjacent sibling of an element with class (1) (with no refNodes): .adjacent-div2+.adjacent-div4","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, matching p element that is an adjacent sibling of a div element (1) (with no refNodes): #adjacent div+p","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, surrounded by whitespace (1) (with no refNodes): #adjacent-p2\t\r\n+\t\r\n#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, whitespace after (1) (with no refNodes): #adjacent-p2+\t\r\n#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, whitespace before (1) (with no refNodes): #adjacent-p2\t\r\n+#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: Adjacent sibling combinator, no whitespace (1) (with no refNodes): #adjacent-p2+#adjacent-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~div","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element (1) (with no refNodes): div~#sibling-div4","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with id that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~#sibling-div4","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching element with class that is a sibling of an element with id (1) (with no refNodes): #sibling-div2~.sibling-div","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, matching p element that is a sibling of a div element (1) (with no refNodes): #sibling div~p","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, surrounded by whitespace (1) (with no refNodes): #sibling-p2\t\r\n~\t\r\n#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, whitespace after (1) (with no refNodes): #sibling-p2~\t\r\n#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, whitespace before (1) (with no refNodes): #sibling-p2\t\r\n~#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: General sibling combinator, no whitespace (1) (with no refNodes): #sibling-p2~#sibling-p3","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, surrounded by whitespace (1) (with no refNodes): #group em\t\r \n,\t\r \n#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, whitespace after (1) (with no refNodes): #group em,\t\r\n#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, whitespace before (1) (with no refNodes): #group em\t\r\n,#group strong","status":"PASS"},{"name":"In-document Element.matches: Syntax, group of selectors separator, no whitespace (1) (with no refNodes): #group em,#group strong","status":"PASS"}]}