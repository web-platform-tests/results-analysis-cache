{"status":"OK","subtests":[{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown. (toggleAttribute)","status":"PASS"},{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown, even if the attribute is already present. (toggleAttribute)","status":"PASS"},{"name":"toggleAttribute should lowercase its name argument (upper case attribute)","status":"PASS"},{"name":"toggleAttribute should lowercase its name argument (mixed case attribute)","status":"PASS"},{"name":"toggleAttribute should not throw even when qualifiedName starts with 'xmlns'","status":"PASS"},{"name":"Basic functionality should be intact. (toggleAttribute)","status":"PASS"},{"name":"toggleAttribute should not change the order of previously set attributes.","status":"PASS"},{"name":"toggleAttribute should set the first attribute with the given name","status":"PASS"},{"name":"toggleAttribute should set the attribute with the given qualified name","status":"PASS"},{"name":"Toggling element with inline style should make inline style disappear","status":"PASS"},{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown. (setAttribute)","status":"PASS"},{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown, even if the attribute is already present. (setAttribute)","status":"PASS"},{"name":"setAttribute should lowercase its name argument (upper case attribute)","status":"PASS"},{"name":"setAttribute should lowercase its name argument (mixed case attribute)","status":"PASS"},{"name":"setAttribute should not throw even when qualifiedName starts with 'xmlns'","status":"PASS"},{"name":"Basic functionality should be intact.","status":"PASS"},{"name":"setAttribute should not change the order of previously set attributes.","status":"PASS"},{"name":"setAttribute should set the first attribute with the given name","status":"PASS"},{"name":"setAttribute should set the attribute with the given qualified name","status":"PASS"},{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown. (setAttributeNS)","status":"PASS"},{"name":"When qualifiedName does not match the Name production, an INVALID_CHARACTER_ERR exception is to be thrown, even if the attribute is already present. (setAttributeNS)","status":"PASS"},{"name":"When qualifiedName does not match the QName production, an INVALID_CHARACTER_ERR exception is to be thrown.","status":"PASS"},{"name":"null and the empty string should result in a null namespace.","status":"PASS"},{"name":"A namespace is required to use a prefix.","status":"PASS"},{"name":"The xml prefix should not be allowed for arbitrary namespaces","status":"PASS"},{"name":"XML-namespaced attributes don't need an xml prefix","status":"PASS"},{"name":"The xmlns prefix should not be allowed for arbitrary namespaces","status":"PASS"},{"name":"The xmlns qualified name should not be allowed for arbitrary namespaces","status":"PASS"},{"name":"xmlns should be allowed as local name","status":"PASS"},{"name":"The XMLNS namespace should require xmlns as prefix or qualified name","status":"PASS"},{"name":"xmlns should be allowed as prefix in the XMLNS namespace","status":"PASS"},{"name":"xmlns should be allowed as qualified name in the XMLNS namespace","status":"PASS"},{"name":"Setting the same attribute with another prefix should not change the prefix","status":"PASS"},{"name":"setAttribute should not throw even if a load is not allowed","status":"PASS"},{"name":"Attributes should work in document fragments.","status":"PASS"},{"name":"Attribute values should not be parsed.","status":"PASS"},{"name":"Specified attributes should be accessible.","status":"PASS"},{"name":"Entities in attributes should have been expanded while parsing.","status":"PASS"},{"name":"Unset attributes return null","status":"PASS"},{"name":"First set attribute is returned by getAttribute","status":"PASS"},{"name":"Style attributes are not normalized","status":"PASS"},{"name":"Only lowercase attributes are returned on HTML elements (upper case attribute)","status":"PASS"},{"name":"Only lowercase attributes are returned on HTML elements (mixed case attribute)","status":"PASS"},{"name":"First set attribute is returned with mapped attribute set first","status":"PASS"},{"name":"First set attribute is returned with mapped attribute set later","status":"PASS"},{"name":"Non-HTML element with upper-case attribute","status":"PASS"},{"name":"Attribute with prefix in local name","status":"PASS"},{"name":"Attribute loses its owner when removed","status":"PASS"},{"name":"Basic functionality of getAttributeNode/getAttributeNodeNS","status":"PASS"},{"name":"Basic functionality of setAttributeNode","status":"PASS"},{"name":"setAttributeNode should distinguish attributes with same local name and different namespaces","status":"PASS"},{"name":"setAttributeNode doesn't have case-insensitivity even with an HTMLElement","status":"PASS"},{"name":"Basic functionality of setAttributeNodeNS","status":"PASS"},{"name":"If attrâ€™s element is neither null nor element, throw an InUseAttributeError.","status":"PASS"},{"name":"Replacing an attr by itself","status":"PASS"},{"name":"Basic functionality of removeAttributeNode","status":"PASS"},{"name":"setAttributeNode on bound attribute should throw InUseAttributeError","status":"PASS"},{"name":"setAttributeNode, if it fires mutation events, should fire one with the new node when resetting an existing attribute","status":"PASS"},{"name":"setAttributeNode, if it fires mutation events, should fire one with the new node when resetting an existing attribute (outer shell)","status":"PASS"},{"name":"setAttributeNode called with an Attr that has the same name as an existing one should not change attribute order","status":"PASS"},{"name":"getAttributeNames tests","status":"PASS"},{"name":"Own property correctness with basic attributes","status":"PASS"},{"name":"Own property correctness with non-namespaced attribute before same-name namespaced one","status":"PASS"},{"name":"Own property correctness with namespaced attribute before same-name non-namespaced one","status":"PASS"},{"name":"Own property correctness with two namespaced attributes with the same name-with-prefix","status":"PASS"},{"name":"Own property names should only include all-lowercase qualified names for an HTML element in an HTML document","status":"PASS"},{"name":"Own property names should include all qualified names for a non-HTML element in an HTML document","status":"PASS"},{"name":"Own property names should include all qualified names for an HTML element in a non-HTML document","status":"PASS"}]}