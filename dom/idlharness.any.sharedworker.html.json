{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface Window: original interface defined","status":"PASS"},{"name":"Partial interface Window: member names are unique","status":"PASS"},{"name":"Partial interface Document: member names are unique","status":"PASS"},{"name":"Partial interface Document[2]: member names are unique","status":"PASS"},{"name":"Partial interface Window[2]: member names are unique","status":"PASS"},{"name":"Document includes NonElementParentNode: member names are unique","status":"PASS"},{"name":"DocumentFragment includes NonElementParentNode: member names are unique","status":"PASS"},{"name":"Document includes ParentNode: member names are unique","status":"PASS"},{"name":"DocumentFragment includes ParentNode: member names are unique","status":"PASS"},{"name":"Element includes ParentNode: member names are unique","status":"PASS"},{"name":"Element includes NonDocumentTypeChildNode: member names are unique","status":"PASS"},{"name":"CharacterData includes NonDocumentTypeChildNode: member names are unique","status":"PASS"},{"name":"DocumentType includes ChildNode: member names are unique","status":"PASS"},{"name":"Element includes ChildNode: member names are unique","status":"PASS"},{"name":"CharacterData includes ChildNode: member names are unique","status":"PASS"},{"name":"Element includes Slottable: member names are unique","status":"PASS"},{"name":"Text includes Slottable: member names are unique","status":"PASS"},{"name":"Document includes XPathEvaluatorBase: member names are unique","status":"PASS"},{"name":"XPathEvaluator includes XPathEvaluatorBase: member names are unique","status":"PASS"},{"name":"Document includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Document includes DocumentAndElementEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes DocumentAndElementEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes ElementContentEditable: member names are unique","status":"PASS"},{"name":"HTMLElement includes HTMLOrSVGElement: member names are unique","status":"PASS"},{"name":"Window includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Window includes AnimationFrameProvider: member names are unique","status":"PASS"},{"name":"Window includes WindowSessionStorage: member names are unique","status":"PASS"},{"name":"Window includes WindowLocalStorage: member names are unique","status":"PASS"},{"name":"Event interface: existence and properties of interface object","status":"PASS"},{"name":"Event interface object length","status":"PASS"},{"name":"Event interface object name","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Event interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Event interface: attribute type","status":"PASS"},{"name":"Event interface: attribute target","status":"PASS"},{"name":"Event interface: attribute srcElement","status":"PASS"},{"name":"Event interface: attribute currentTarget","status":"PASS"},{"name":"Event interface: operation composedPath()","status":"PASS"},{"name":"Event interface: constant NONE on interface object","status":"PASS"},{"name":"Event interface: constant NONE on interface prototype object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant CAPTURING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface object","status":"PASS"},{"name":"Event interface: constant AT_TARGET on interface prototype object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface object","status":"PASS"},{"name":"Event interface: constant BUBBLING_PHASE on interface prototype object","status":"PASS"},{"name":"Event interface: attribute eventPhase","status":"PASS"},{"name":"Event interface: operation stopPropagation()","status":"PASS"},{"name":"Event interface: attribute cancelBubble","status":"PASS"},{"name":"Event interface: operation stopImmediatePropagation()","status":"PASS"},{"name":"Event interface: attribute bubbles","status":"PASS"},{"name":"Event interface: attribute cancelable","status":"PASS"},{"name":"Event interface: attribute returnValue","status":"PASS"},{"name":"Event interface: operation preventDefault()","status":"PASS"},{"name":"Event interface: attribute defaultPrevented","status":"PASS"},{"name":"Event interface: attribute composed","status":"PASS"},{"name":"Event interface: attribute timeStamp","status":"PASS"},{"name":"Event interface: operation initEvent(DOMString, optional boolean, optional boolean)","status":"PASS"},{"name":"Event must be primary interface of new Event(\"foo\")","status":"PASS"},{"name":"Stringification of new Event(\"foo\")","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"type\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"srcElement\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"currentTarget\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"composedPath()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"NONE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"AT_TARGET\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"eventPhase\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopPropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"cancelBubble\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"stopImmediatePropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"bubbles\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"cancelable\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"returnValue\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"preventDefault()\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"defaultPrevented\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"composed\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"timeStamp\" with the proper type","status":"PASS"},{"name":"Event interface: new Event(\"foo\") must inherit property \"initEvent(DOMString, optional boolean, optional boolean)\" with the proper type","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString, optional boolean, optional boolean) on new Event(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface object","status":"PASS"},{"name":"CustomEvent interface object length","status":"PASS"},{"name":"CustomEvent interface object name","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CustomEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CustomEvent interface: attribute detail","status":"PASS"},{"name":"CustomEvent interface: operation initCustomEvent(DOMString, optional boolean, optional boolean, optional any)","status":"PASS"},{"name":"CustomEvent must be primary interface of new CustomEvent(\"foo\")","status":"PASS"},{"name":"Stringification of new CustomEvent(\"foo\")","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"detail\" with the proper type","status":"PASS"},{"name":"CustomEvent interface: new CustomEvent(\"foo\") must inherit property \"initCustomEvent(DOMString, optional boolean, optional boolean, optional any)\" with the proper type","status":"PASS"},{"name":"CustomEvent interface: calling initCustomEvent(DOMString, optional boolean, optional boolean, optional any) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"type\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"target\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"srcElement\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"currentTarget\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"composedPath()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"NONE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"CAPTURING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"AT_TARGET\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"BUBBLING_PHASE\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"eventPhase\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopPropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"cancelBubble\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"stopImmediatePropagation()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"bubbles\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"cancelable\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"returnValue\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"preventDefault()\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"defaultPrevented\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"composed\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must have own property \"isTrusted\"","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"timeStamp\" with the proper type","status":"PASS"},{"name":"Event interface: new CustomEvent(\"foo\") must inherit property \"initEvent(DOMString, optional boolean, optional boolean)\" with the proper type","status":"PASS"},{"name":"Event interface: calling initEvent(DOMString, optional boolean, optional boolean) on new CustomEvent(\"foo\") with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface object","status":"PASS"},{"name":"EventTarget interface object length","status":"PASS"},{"name":"EventTarget interface object name","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"EventTarget interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"EventTarget interface: operation addEventListener(DOMString, EventListener?, optional (AddEventListenerOptions or boolean))","status":"PASS"},{"name":"EventTarget interface: operation removeEventListener(DOMString, EventListener?, optional (EventListenerOptions or boolean))","status":"PASS"},{"name":"EventTarget interface: operation dispatchEvent(Event)","status":"PASS"},{"name":"EventTarget must be primary interface of new EventTarget()","status":"PASS"},{"name":"Stringification of new EventTarget()","status":"PASS"},{"name":"EventTarget interface: new EventTarget() must inherit property \"addEventListener(DOMString, EventListener?, optional (AddEventListenerOptions or boolean))\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener?, optional (AddEventListenerOptions or boolean)) on new EventTarget() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new EventTarget() must inherit property \"removeEventListener(DOMString, EventListener?, optional (EventListenerOptions or boolean))\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener?, optional (EventListenerOptions or boolean)) on new EventTarget() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new EventTarget() must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new EventTarget() with too few arguments must throw TypeError","status":"PASS"},{"name":"EventListener interface: existence and properties of interface object","status":"PASS"},{"name":"AbortController interface: existence and properties of interface object","status":"PASS"},{"name":"AbortController interface object length","status":"PASS"},{"name":"AbortController interface object name","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AbortController interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AbortController interface: attribute signal","status":"PASS"},{"name":"AbortController interface: operation abort()","status":"PASS"},{"name":"AbortController must be primary interface of new AbortController()","status":"PASS"},{"name":"Stringification of new AbortController()","status":"PASS"},{"name":"AbortController interface: new AbortController() must inherit property \"signal\" with the proper type","status":"PASS"},{"name":"AbortController interface: new AbortController() must inherit property \"abort()\" with the proper type","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface object","status":"PASS"},{"name":"AbortSignal interface object length","status":"PASS"},{"name":"AbortSignal interface object name","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AbortSignal interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AbortSignal interface: operation abort()","status":"FAIL"},{"name":"AbortSignal interface: attribute aborted","status":"PASS"},{"name":"AbortSignal interface: attribute onabort","status":"PASS"},{"name":"AbortSignal must be primary interface of new AbortController().signal","status":"PASS"},{"name":"Stringification of new AbortController().signal","status":"PASS"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"abort()\" with the proper type","status":"PASS"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"aborted\" with the proper type","status":"PASS"},{"name":"AbortSignal interface: new AbortController().signal must inherit property \"onabort\" with the proper type","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"addEventListener(DOMString, EventListener?, optional (AddEventListenerOptions or boolean))\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling addEventListener(DOMString, EventListener?, optional (AddEventListenerOptions or boolean)) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"removeEventListener(DOMString, EventListener?, optional (EventListenerOptions or boolean))\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling removeEventListener(DOMString, EventListener?, optional (EventListenerOptions or boolean)) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"EventTarget interface: new AbortController().signal must inherit property \"dispatchEvent(Event)\" with the proper type","status":"PASS"},{"name":"EventTarget interface: calling dispatchEvent(Event) on new AbortController().signal with too few arguments must throw TypeError","status":"PASS"},{"name":"NodeList interface: existence and properties of interface object","status":"PASS"},{"name":"HTMLCollection interface: existence and properties of interface object","status":"PASS"},{"name":"MutationObserver interface: existence and properties of interface object","status":"PASS"},{"name":"MutationRecord interface: existence and properties of interface object","status":"PASS"},{"name":"Node interface: existence and properties of interface object","status":"PASS"},{"name":"Document interface: existence and properties of interface object","status":"PASS"},{"name":"XMLDocument interface: existence and properties of interface object","status":"PASS"},{"name":"DOMImplementation interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentType interface: existence and properties of interface object","status":"PASS"},{"name":"DocumentFragment interface: existence and properties of interface object","status":"PASS"},{"name":"ShadowRoot interface: existence and properties of interface object","status":"PASS"},{"name":"Element interface: existence and properties of interface object","status":"PASS"},{"name":"NamedNodeMap interface: existence and properties of interface object","status":"PASS"},{"name":"Attr interface: existence and properties of interface object","status":"PASS"},{"name":"CharacterData interface: existence and properties of interface object","status":"PASS"},{"name":"Text interface: existence and properties of interface object","status":"PASS"},{"name":"CDATASection interface: existence and properties of interface object","status":"PASS"},{"name":"ProcessingInstruction interface: existence and properties of interface object","status":"PASS"},{"name":"Comment interface: existence and properties of interface object","status":"PASS"},{"name":"AbstractRange interface: existence and properties of interface object","status":"PASS"},{"name":"StaticRange interface: existence and properties of interface object","status":"PASS"},{"name":"Range interface: existence and properties of interface object","status":"PASS"},{"name":"NodeIterator interface: existence and properties of interface object","status":"PASS"},{"name":"TreeWalker interface: existence and properties of interface object","status":"PASS"},{"name":"NodeFilter interface: existence and properties of interface object","status":"PASS"},{"name":"DOMTokenList interface: existence and properties of interface object","status":"PASS"},{"name":"XPathResult interface: existence and properties of interface object","status":"PASS"},{"name":"XPathExpression interface: existence and properties of interface object","status":"PASS"},{"name":"XPathNSResolver interface: existence and properties of interface object","status":"PASS"},{"name":"XPathEvaluator interface: existence and properties of interface object","status":"PASS"},{"name":"XSLTProcessor interface: existence and properties of interface object","status":"PASS"}]}