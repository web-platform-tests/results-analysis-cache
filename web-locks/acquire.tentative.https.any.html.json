{"status":"OK","subtests":[{"name":"navigator.locks.request requires a name and a callback","status":"FAIL"},{"name":"mode must be \"shared\" or \"exclusive\"","status":"FAIL"},{"name":"The 'steal' and 'ifAvailable' options are mutually exclusive","status":"FAIL"},{"name":"The 'steal' option must be used with exclusive locks","status":"FAIL"},{"name":"The 'signal' and 'steal' options are mutually exclusive","status":"FAIL"},{"name":"The 'signal' and 'ifAvailable' options are mutually exclusive","status":"FAIL"},{"name":"callback must be a function","status":"FAIL"},{"name":"navigator.locks.request's returned promise resolves after lock is released","status":"FAIL"},{"name":"Returned Promise rejects if callback throws synchronously","status":"FAIL"},{"name":"Returned Promise rejects if callback throws asynchronously","status":"FAIL"}]}