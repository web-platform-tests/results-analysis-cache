{"status":"OK","subtests":[{"name":"the audio transceiver.getHeaderExtensionsToNegotiate() includes mandatory extensions","status":"PASS"},{"name":"the video transceiver.getHeaderExtensionsToNegotiate() includes mandatory extensions","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws TypeError on encountering missing URI","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws TypeError on encountering missing direction","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws InvalidModificationError on encountering unknown URI","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws InvalidModificationError when removing elements from the list","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws InvalidModificationError when adding elements to the list","status":"PASS"},{"name":"setHeaderExtensionsToNegotiate throws InvalidModificationError when setting a mandatory header extension's direction to something else than \"sendrecv\"","status":"PASS"},{"name":"modified direction set by setHeaderExtensionsToNegotiate is visible in subsequent getHeaderExtensionsToNegotiate","status":"PASS"},{"name":"Unstopped extensions turn up in offer","status":"PASS"},{"name":"Stopped extensions do not turn up in offers","status":"PASS"},{"name":"The set of negotiated extensions has the same size as the set of extensions to negotiate","status":"PASS"},{"name":"Header extensions can be reactivated in subsequent offers","status":"PASS"},{"name":"Header extensions can be deactivated on a per-mline basis","status":"PASS"},{"name":"Extensions not negotiated by the peer are `stopped` in getNegotiatedHeaderExtensions","status":"PASS"},{"name":"Prior to negotiation, getNegotiatedHeaderExtensions() returns `stopped` for all extensions.","status":"PASS"},{"name":"Answer header extensions are a subset of the offered header extensions","status":"PASS"},{"name":"A subsequent offer from the other side will reoffer extensions not negotiated by the initial offerer","status":"PASS"}]}