{"status":"OK","subtests":[{"name":"[audio] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is not offered","status":"FAIL"},{"name":"[audio] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is offered, but not answered","status":"FAIL"},{"name":"[audio] getSynchronizationSources() should contain senderCaptureTimeOffset if absolute capture time RTP header extension is negotiated","status":"FAIL"},{"name":"[video] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is not offered","status":"FAIL"},{"name":"[video] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is offered, but not answered","status":"FAIL"},{"name":"[video] getSynchronizationSources() should contain senderCaptureTimeOffset if absolute capture time RTP header extension is negotiated","status":"FAIL"},{"name":"Audio and video RTCRtpSynchronizationSource.senderCaptureTimeOffset must be zero","status":"FAIL"}]}