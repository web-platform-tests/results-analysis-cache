{"status":"TIMEOUT","subtests":[{"name":"[audio] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is not offered","status":"TIMEOUT"},{"name":"[audio] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is offered, but not answered","status":"NOTRUN"},{"name":"[audio] getSynchronizationSources() should contain senderCaptureTimeOffset if absolute capture time RTP header extension is negotiated","status":"NOTRUN"},{"name":"[video] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is not offered","status":"NOTRUN"},{"name":"[video] getSynchronizationSources() should not contain senderCaptureTimeOffset if absolute capture time RTP header extension is offered, but not answered","status":"NOTRUN"},{"name":"[video] getSynchronizationSources() should contain senderCaptureTimeOffset if absolute capture time RTP header extension is negotiated","status":"NOTRUN"},{"name":"Audio and video RTCRtpSynchronizationSource.senderCaptureTimeOffset must be zero","status":"NOTRUN"}]}