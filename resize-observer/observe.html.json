{"status":"OK","subtests":[{"name":"ResizeObserver implemented","status":"PASS"},{"name":"guard","status":"PASS"},{"name":"test0: simple observation","status":"PASS"},{"name":"test1: multiple observation on same element trigger only one","status":"PASS"},{"name":"test2: throw exception when observing non-element","status":"PASS"},{"name":"test3: disconnect stops all notifications","status":"PASS"},{"name":"test4: unobserve target stops notifications, unobserve non-observed does nothing","status":"PASS"},{"name":"test5: observe img","status":"PASS"},{"name":"test6: iframe notifications","status":"PASS"},{"name":"test7: callback.this","status":"PASS"},{"name":"test8: simple content-box observation","status":"PASS"},{"name":"test9: simple content-box observation but keep border-box size unchanged","status":"PASS"},{"name":"test10: simple border-box observation","status":"PASS"},{"name":"test11: simple observation with vertical writing mode","status":"PASS"},{"name":"test12: no observation is fired after the change of writing mode when box's specified size comes from logical size properties.","status":"PASS"},{"name":"test13: an observation is fired after the change of writing mode when box's specified size comes from physical size properties.","status":"PASS"},{"name":"test14: observe the same target but using a different box should override the previous one","status":"PASS"},{"name":"test15: an observation is fired with box dimensions 0 when element's display property is set to inline","status":"PASS"},{"name":"test16: observations do not fire for non-replaced inline elements","status":"PASS"},{"name":"test17: Box sizing snd Resize Observer notifications","status":"PASS"},{"name":"test18: an observation is fired when device-pixel-content-box is being observed","status":"PASS"}]}