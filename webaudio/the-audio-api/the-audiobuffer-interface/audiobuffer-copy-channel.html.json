{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"initialize\"","status":"PASS"},{"name":"Executing \"copyFrom-exceptions\"","status":"PASS"},{"name":"Executing \"copyTo-exceptions\"","status":"PASS"},{"name":"Executing \"copyFrom-validate\"","status":"PASS"},{"name":"Executing \"copyTo-validate\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  Initialized values contains only the constant -1.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [copyFrom-exceptions] ","status":"PASS"},{"name":"  AudioBuffer.prototype.copyFromChannel does exist.","status":"PASS"},{"name":"  0: buffer = context.createBuffer(3, 16, context.sampleRate) did not throw an exception.","status":"PASS"},{"name":"  1: buffer.copyFromChannel(null, 0) threw TypeError: \"AudioBuffer.copyFromChannel: Argument 1 is not an object.\".","status":"PASS"},{"name":"  2: buffer.copyFromChannel(context, 0) threw TypeError: \"AudioBuffer.copyFromChannel: Argument 1 does not implement interface Float32Array.\".","status":"PASS"},{"name":"  3: buffer.copyFromChannel(x, -1) threw IndexSizeError: \"AudioBuffer.copyFromChannel: Channel number (4294967295) is out of range\".","status":"PASS"},{"name":"  4: buffer.copyFromChannel(x, 3) threw IndexSizeError: \"AudioBuffer.copyFromChannel: Channel number (3) is out of range\".","status":"PASS"},{"name":"  5: buffer.copyFromChannel(x, 0, -1) did not throw an exception.","status":"PASS"},{"name":"  6: buffer.copyFromChannel(x, 0, 16) did not throw an exception.","status":"PASS"},{"name":"  7: buffer.copyFromChannel(x, 3) threw IndexSizeError: \"AudioBuffer.copyFromChannel: Channel number (3) is out of range\".","status":"PASS"},{"name":"  8: buffer.copyFromChannel(SharedArrayBuffer view, 0) threw TypeError: \"AudioBuffer.copyFromChannel: Argument 1 can't be a SharedArrayBuffer or an ArrayBufferView backed by a SharedArrayBuffer\".","status":"PASS"},{"name":"  9: buffer.copyFromChannel(SharedArrayBuffer view, 0, 0) threw TypeError: \"AudioBuffer.copyFromChannel: Argument 1 can't be a SharedArrayBuffer or an ArrayBufferView backed by a SharedArrayBuffer\".","status":"PASS"},{"name":"< [copyFrom-exceptions] All assertions passed. (total 11 assertions)","status":"PASS"},{"name":"> [copyTo-exceptions] ","status":"PASS"},{"name":"  AudioBuffer.prototype.copyToChannel does exist.","status":"PASS"},{"name":"  0: buffer.copyToChannel(null, 0) threw TypeError: \"AudioBuffer.copyToChannel: Argument 1 is not an object.\".","status":"PASS"},{"name":"  1: buffer.copyToChannel(context, 0) threw TypeError: \"AudioBuffer.copyToChannel: Argument 1 does not implement interface Float32Array.\".","status":"PASS"},{"name":"  2: buffer.copyToChannel(x, -1) threw IndexSizeError: \"AudioBuffer.copyToChannel: Channel number (4294967295) is out of range\".","status":"PASS"},{"name":"  3: buffer.copyToChannel(x, 3) threw IndexSizeError: \"AudioBuffer.copyToChannel: Channel number (3) is out of range\".","status":"PASS"},{"name":"  4: buffer.copyToChannel(x, 0, -1) did not throw an exception.","status":"PASS"},{"name":"  5: buffer.copyToChannel(x, 0, 16) did not throw an exception.","status":"PASS"},{"name":"  6: buffer.copyToChannel(x, 3) threw IndexSizeError: \"AudioBuffer.copyToChannel: Channel number (3) is out of range\".","status":"PASS"},{"name":"  7: buffer.copyToChannel(SharedArrayBuffer view, 0) threw TypeError: \"AudioBuffer.copyToChannel: Argument 1 can't be a SharedArrayBuffer or an ArrayBufferView backed by a SharedArrayBuffer\".","status":"PASS"},{"name":"  8: buffer.copyToChannel(SharedArrayBuffer view, 0, 0) threw TypeError: \"AudioBuffer.copyToChannel: Argument 1 can't be a SharedArrayBuffer or an ArrayBufferView backed by a SharedArrayBuffer\".","status":"PASS"},{"name":"< [copyTo-exceptions] All assertions passed. (total 10 assertions)","status":"PASS"},{"name":"> [copyFrom-validate] ","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 0) is identical to the array [1,2,3,4,5,6,7,8].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 1) is identical to the array [2,3,4,5,6,7,8,9].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 2) is identical to the array [3,4,5,6,7,8,9,10].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 0, 1) is identical to the array [2,3,4,5,6,7,8,9].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 1, 1) is identical to the array [3,4,5,6,7,8,9,10].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 2, 1) is identical to the array [4,5,6,7,8,9,10,11].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 0, 11) is identical to the array [12,13,14,15,16,-1,-1,-1].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 1, 11) is identical to the array [13,14,15,16,17,-1,-1,-1].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst8, 2, 11) is identical to the array [14,15,16,17,18,-1,-1,-1].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst26, 0) is identical to the array [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16...].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst26, 1) is identical to the array [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17...].","status":"PASS"},{"name":"  buffer.copyFromChannel(dst26, 2) is identical to the array [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18...].","status":"PASS"},{"name":"< [copyFrom-validate] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [copyTo-validate] ","status":"PASS"},{"name":"  buffer = createConstantBuffer(context, 16, [-1,-1,-1]) did not throw an exception.","status":"PASS"},{"name":"  buffer.copyToChannel(src, 0) is identical to the array [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16...].","status":"PASS"},{"name":"  buffer.copyToChannel(src, 1) is identical to the array [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16...].","status":"PASS"},{"name":"  buffer.copyToChannel(src, 2) is identical to the array [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 0) is identical to the array [1,2,3,4,5,6,7,8,9,10,-1,-1,-1,-1,-1,-1...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 1) is identical to the array [1,2,3,4,5,6,7,8,9,10,-1,-1,-1,-1,-1,-1...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 2) is identical to the array [1,2,3,4,5,6,7,8,9,10,-1,-1,-1,-1,-1,-1...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 0, 5) is identical to the array [-1,-1,-1,-1,-1,1,2,3,4,5,6,7,8,9,10,-1...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 1, 5) is identical to the array [-1,-1,-1,-1,-1,1,2,3,4,5,6,7,8,9,10,-1...].","status":"PASS"},{"name":"  buffer.copyToChannel(src10, 2, 5) is identical to the array [-1,-1,-1,-1,-1,1,2,3,4,5,6,7,8,9,10,-1...].","status":"PASS"},{"name":"< [copyTo-validate] All assertions passed. (total 10 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}