{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"initialize\"","status":"PASS"},{"name":"Executing \"invalid constructor\"","status":"PASS"},{"name":"Executing \"default constructor\"","status":"PASS"},{"name":"Executing \"test AudioNodeOptions\"","status":"PASS"},{"name":"Executing \"constructor options\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  context = new OfflineAudioContext(...) did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [invalid constructor] ","status":"PASS"},{"name":"  new OscillatorNode() threw TypeError: \"Failed to construct 'OscillatorNode': 1 argument required, but only 0 present.\".","status":"PASS"},{"name":"  new OscillatorNode(1) threw TypeError: \"Failed to construct 'OscillatorNode': parameter 1 is not of type 'BaseAudioContext'.\".","status":"PASS"},{"name":"  new OscillatorNode(context, 42) threw TypeError: \"Failed to construct 'OscillatorNode': cannot convert to dictionary.\".","status":"PASS"},{"name":"< [invalid constructor] All assertions passed. (total 3 assertions)","status":"PASS"},{"name":"> [default constructor] ","status":"PASS"},{"name":"  node0 = new OscillatorNode(context) did not throw an exception.","status":"PASS"},{"name":"  node0 instanceof OscillatorNode is equal to true.","status":"PASS"},{"name":"  node0.numberOfInputs is equal to 0.","status":"PASS"},{"name":"  node0.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  node0.channelCount is equal to 2.","status":"PASS"},{"name":"  node0.channelCountMode is equal to max.","status":"PASS"},{"name":"  node0.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  node0.type is equal to sine.","status":"PASS"},{"name":"  node0.frequency.value is equal to 440.","status":"PASS"},{"name":"< [default constructor] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [test AudioNodeOptions] ","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCount: 17}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCount is equal to 17.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCount: 0}) threw NotSupportedError: \"Failed to construct 'OscillatorNode': The channel count provided (0) is outside the range [1, 32].\".","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCount: 99}) threw NotSupportedError: \"Failed to construct 'OscillatorNode': The channel count provided (99) is outside the range [1, 32].\".","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCountMode: \"max\"} did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode is equal to max.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCountMode: \"max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to max.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCountMode: \"clamped-max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to clamped-max.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCountMode: \"explicit\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to explicit.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelCountMode: \"foobar\"} threw TypeError: \"Failed to construct 'OscillatorNode': The provided value 'foobar' is not a valid enum value of type ChannelCountMode.\".","status":"PASS"},{"name":"  node.channelCountMode after invalid setter is equal to explicit.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelInterpretation: \"speakers\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelInterpretation: \"discrete\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to discrete.","status":"PASS"},{"name":"  new OscillatorNode(c, {channelInterpretation: \"foobar\"}) threw TypeError: \"Failed to construct 'OscillatorNode': The provided value 'foobar' is not a valid enum value of type ChannelInterpretation.\".","status":"PASS"},{"name":"  node.channelInterpretation after invalid setter is equal to discrete.","status":"PASS"},{"name":"< [test AudioNodeOptions] All assertions passed. (total 20 assertions)","status":"PASS"},{"name":"> [constructor options] ","status":"PASS"},{"name":"  node1 = new OscillatorNode(c, {\"type\":\"sawtooth\",\"detune\":7,\"frequency\":918}) did not throw an exception.","status":"PASS"},{"name":"  node1.type is equal to sawtooth.","status":"PASS"},{"name":"  node1.detune.value is equal to 7.","status":"PASS"},{"name":"  node1.frequency.value is equal to 918.","status":"PASS"},{"name":"  node1.channelCount is equal to 2.","status":"PASS"},{"name":"  node1.channelCountMode is equal to max.","status":"PASS"},{"name":"  node1.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  new OscillatorNode(c, {\"type\":\"sine\",\"periodicWave\":{}}) did not throw an exception.","status":"PASS"},{"name":"  new OscillatorNode(c, {\"type\":\"custom\"}) threw InvalidStateError: \"Failed to construct 'OscillatorNode': A PeriodicWave must be specified if the type is set to \"custom\"\".","status":"PASS"},{"name":"  new OscillatorNode(c, {\"type\":\"custom\",\"periodicWave\":{}}) did not throw an exception.","status":"PASS"},{"name":"  new OscillatorNode(c, {periodicWave: null} threw TypeError: \"Failed to construct 'OscillatorNode': member periodicWave is not of type PeriodicWave.\".","status":"PASS"},{"name":"< [constructor options] All assertions passed. (total 11 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}