{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"initialize\"","status":"PASS"},{"name":"Executing \"invalid constructor\"","status":"PASS"},{"name":"Executing \"default constructor\"","status":"PASS"},{"name":"Executing \"test AudioNodeOptions\"","status":"PASS"},{"name":"Executing \"constructor options\"","status":"PASS"},{"name":"Executing \"functionality\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  context = new OfflineAudioContext(...) did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [invalid constructor] ","status":"PASS"},{"name":"  new IIRFilterNode() threw TypeError: \"Not enough arguments\".","status":"PASS"},{"name":"  new IIRFilterNode(1) threw TypeError: \"Not enough arguments\".","status":"PASS"},{"name":"  new IIRFilterNode(context, 42) threw TypeError: \"Type error\".","status":"PASS"},{"name":"< [invalid constructor] All assertions passed. (total 3 assertions)","status":"PASS"},{"name":"> [default constructor] ","status":"PASS"},{"name":"  node0 = new IIRFilterNode(context, {\"feedforward\":[1],\"feedback\":[1,-0.9]}) did not throw an exception.","status":"PASS"},{"name":"  node0 instanceof IIRFilterNode is equal to true.","status":"PASS"},{"name":"  node0.numberOfInputs is equal to 1.","status":"PASS"},{"name":"  node0.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  node0.channelCount is equal to 2.","status":"PASS"},{"name":"  node0.channelCountMode is equal to max.","status":"PASS"},{"name":"  node0.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"< [default constructor] All assertions passed. (total 7 assertions)","status":"PASS"},{"name":"> [test AudioNodeOptions] ","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 17}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCount is equal to 17.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 0}) threw NotSupportedError: \"Channel count cannot be 0\".","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCount: 99}) threw NotSupportedError: \"Channel count exceeds maximum limit\".","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"max\"} did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode is equal to max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"clamped-max\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to clamped-max.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"explicit\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelCountMode after valid setter is equal to explicit.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelCountMode: \"foobar\"} threw TypeError: \"Type error\".","status":"PASS"},{"name":"  node.channelCountMode after invalid setter is equal to explicit.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"speakers\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"discrete\"}) did not throw an exception.","status":"PASS"},{"name":"  node.channelInterpretation is equal to discrete.","status":"PASS"},{"name":"  new IIRFilterNode(c, {channelInterpretation: \"foobar\"}) threw TypeError: \"Type error\".","status":"PASS"},{"name":"  node.channelInterpretation after invalid setter is equal to discrete.","status":"PASS"},{"name":"< [test AudioNodeOptions] All assertions passed. (total 20 assertions)","status":"PASS"},{"name":"> [constructor options] ","status":"PASS"},{"name":"  node = new IIRFilterNode(, {\"feedback\":[1,0.5]}) threw TypeError: \"Member IIRFilterOptions.feedforward is required and must be an instance of sequence\".","status":"PASS"},{"name":"  node = new IIRFilterNode(c, {\"feedforward\":[1,0.5]}) threw TypeError: \"Member IIRFilterOptions.feedback is required and must be an instance of sequence\".","status":"PASS"},{"name":"< [constructor options] All assertions passed. (total 2 assertions)","status":"PASS"},{"name":"> [functionality] ","status":"PASS"},{"name":"  Output of filter using new IIRFilter(...) is identical to the array [0,0.05756402015686035,0.14371910691261292,0.21500660479068756,0.29277661442756653,0.36597779393196106,0.43976426124572754,0.511192798614502,0.5813756585121155,0.6494057774543762,0.7153944969177246,0.7789546847343445,0.8399595022201538,0.8981648087501526,0.9533984661102295,1.0054665803909302...].","status":"PASS"},{"name":"< [functionality] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 6 tasks ran successfully.","status":"PASS"}]}