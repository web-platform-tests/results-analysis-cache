{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"initialize\"","status":"PASS"},{"name":"Executing \"existence\"","status":"PASS"},{"name":"Executing \"parameters\"","status":"FAIL"},{"name":"Executing \"exceptions-createIIRFilter\"","status":"PASS"},{"name":"Executing \"exceptions-getFrequencyData\"","status":"FAIL"},{"name":"Audit report","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  Initialize context for testing did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [existence] ","status":"PASS"},{"name":"X context.createIIRFilter does not exist. Got undefined.","status":"FAIL"},{"name":"< [existence] 1 out of 1 assertions were failed.","status":"FAIL"},{"name":"> [parameters] ","status":"PASS"},{"name":"> [exceptions-createIIRFilter] ","status":"PASS"},{"name":"  createIIRFilter() threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"  createIIRFilter(new Float32Array(1)) threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"  createIIRFilter(null, null) threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"X createIIRFilter([], []) threw \"TypeError\" instead of NotSupportedError.","status":"FAIL"},{"name":"X createIIRFilter([1], []) threw \"TypeError\" instead of NotSupportedError.","status":"FAIL"},{"name":"X createIIRFilter([], [1]) threw \"TypeError\" instead of NotSupportedError.","status":"FAIL"},{"name":"X createIIRFilter(new Float32Array(20), new Float32Array(20)) incorrectly threw TypeError: \"context.createIIRFilter is not a function\".","status":"FAIL"},{"name":"X createIIRFilter(new Float32Array(21), [1]) threw \"TypeError\" instead of NotSupportedError.","status":"FAIL"},{"name":"X createIIRFilter([1], new Float32Array(21)) threw \"TypeError\" instead of NotSupportedError.","status":"FAIL"},{"name":"X createIIRFilter([1], new Float32Array(2)) threw \"TypeError\" instead of InvalidStateError.","status":"FAIL"},{"name":"X createIIRFilter(new Float32Array(10), [1]) threw \"TypeError\" instead of InvalidStateError.","status":"FAIL"},{"name":"  createIIRFilter([1], [1, NaN, Infinity]) threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"  createIIRFilter([1, NaN, Infinity], [1]) threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"  createIIRFilter([1, 'abc', []], [1]) threw TypeError: \"context.createIIRFilter is not a function\".","status":"PASS"},{"name":"< [exceptions-createIIRFilter] 8 out of 14 assertions were failed.","status":"FAIL"},{"name":"> [exceptions-getFrequencyData] ","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 2 out of 5 tasks were failed.","status":"FAIL"}]}