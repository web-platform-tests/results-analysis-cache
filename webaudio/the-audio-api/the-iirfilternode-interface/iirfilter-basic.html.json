{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"initialize\"","status":"PASS"},{"name":"Executing \"existence\"","status":"PASS"},{"name":"Executing \"parameters\"","status":"PASS"},{"name":"Executing \"exceptions-createIIRFilter\"","status":"PASS"},{"name":"Executing \"exceptions-getFrequencyData\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [initialize] ","status":"PASS"},{"name":"  Initialize context for testing did not throw an exception.","status":"PASS"},{"name":"< [initialize] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [existence] ","status":"PASS"},{"name":"  context.createIIRFilter does exist.","status":"PASS"},{"name":"< [existence] All assertions passed. (total 1 assertions)","status":"PASS"},{"name":"> [parameters] ","status":"PASS"},{"name":"  numberOfInputs is equal to 1.","status":"PASS"},{"name":"  numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  channelCountMode is equal to max.","status":"PASS"},{"name":"  channelInterpretation is equal to speakers.","status":"PASS"},{"name":"< [parameters] All assertions passed. (total 4 assertions)","status":"PASS"},{"name":"> [exceptions-createIIRFilter] ","status":"PASS"},{"name":"  createIIRFilter() threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': 2 arguments required, but only 0 present.\".","status":"PASS"},{"name":"  createIIRFilter(new Float32Array(1)) threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': 2 arguments required, but only 1 present.\".","status":"PASS"},{"name":"  createIIRFilter(null, null) threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The provided value cannot be converted to a sequence.\".","status":"PASS"},{"name":"  createIIRFilter([], []) threw NotSupportedError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The number of feedback coefficients provided (0) is outside the range [1, 20].\".","status":"PASS"},{"name":"  createIIRFilter([1], []) threw NotSupportedError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The number of feedback coefficients provided (0) is outside the range [1, 20].\".","status":"PASS"},{"name":"  createIIRFilter([], [1]) threw NotSupportedError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The number of feedforward coefficients provided (0) is outside the range [1, 20].\".","status":"PASS"},{"name":"  createIIRFilter(new Float32Array(20), new Float32Array(20)) did not throw an exception.","status":"PASS"},{"name":"  createIIRFilter(new Float32Array(21), [1]) threw NotSupportedError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The number of feedforward coefficients provided (21) is outside the range [1, 20].\".","status":"PASS"},{"name":"  createIIRFilter([1], new Float32Array(21)) threw NotSupportedError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The number of feedback coefficients provided (21) is outside the range [1, 20].\".","status":"PASS"},{"name":"  createIIRFilter([1], new Float32Array(2)) threw InvalidStateError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': First feedback coefficient cannot be zero.\".","status":"PASS"},{"name":"  createIIRFilter(new Float32Array(10), [1]) threw InvalidStateError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': At least one feedforward coefficient must be non-zero.\".","status":"PASS"},{"name":"  createIIRFilter([1], [1, NaN, Infinity]) threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The provided double value is non-finite.\".","status":"PASS"},{"name":"  createIIRFilter([1, NaN, Infinity], [1]) threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The provided double value is non-finite.\".","status":"PASS"},{"name":"  createIIRFilter([1, 'abc', []], [1]) threw TypeError: \"Failed to execute 'createIIRFilter' on 'BaseAudioContext': The provided double value is non-finite.\".","status":"PASS"},{"name":"< [exceptions-createIIRFilter] All assertions passed. (total 14 assertions)","status":"PASS"},{"name":"> [exceptions-getFrequencyData] ","status":"PASS"},{"name":"  getFrequencyResponse(null, new Float32Array(1), new Float32Array(1)) threw TypeError: \"Failed to execute 'getFrequencyResponse' on 'IIRFilterNode': parameter 1 is not of type 'Float32Array'.\".","status":"PASS"},{"name":"  getFrequencyResponse(new Float32Array(1), null, new Float32Array(1)) threw TypeError: \"Failed to execute 'getFrequencyResponse' on 'IIRFilterNode': parameter 2 is not of type 'Float32Array'.\".","status":"PASS"},{"name":"  getFrequencyResponse(new Float32Array(1), new Float32Array(1), null) threw TypeError: \"Failed to execute 'getFrequencyResponse' on 'IIRFilterNode': parameter 3 is not of type 'Float32Array'.\".","status":"PASS"},{"name":"  getFrequencyResponse(new Float32Array(10), new Float32Array(1), new Float32Array(20)) threw InvalidAccessError: \"Failed to execute 'getFrequencyResponse' on 'IIRFilterNode': The magResponse length provided (1) is outside the range [10, 10].\".","status":"PASS"},{"name":"  getFrequencyResponse(new Float32Array(10), new Float32Array(20), new Float32Array(1)) threw InvalidAccessError: \"Failed to execute 'getFrequencyResponse' on 'IIRFilterNode': The magResponse length provided (20) is outside the range [10, 10].\".","status":"PASS"},{"name":"< [exceptions-getFrequencyData] All assertions passed. (total 5 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}