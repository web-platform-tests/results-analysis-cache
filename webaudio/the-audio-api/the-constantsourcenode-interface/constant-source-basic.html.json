{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"createConstantSource()\"","status":"PASS"},{"name":"Executing \"new ConstantSourceNode()\"","status":"PASS"},{"name":"Executing \"start/stop exceptions\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [createConstantSource()] ","status":"PASS"},{"name":"  Factory method: node = context.createConstantSource() did not throw an exception.","status":"PASS"},{"name":"  Factory method: node instance of ConstantSourceNode is equal to true.","status":"PASS"},{"name":"  Factory method: node.numberOfInputs is equal to 0.","status":"PASS"},{"name":"  Factory method: node.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  Factory method: node.channelCount is equal to 2.","status":"PASS"},{"name":"  Factory method: node.channelCountMode is equal to max.","status":"PASS"},{"name":"  Factory method: node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  Factory method: node.offset.value is equal to 1.","status":"PASS"},{"name":"  Factory method: node.offset.defaultValue is equal to 1.","status":"PASS"},{"name":"  Factory method: node.offset.minValue is equal to -3.4028234663852886e+38.","status":"PASS"},{"name":"  Factory method: node.offset.maxValue is equal to 3.4028234663852886e+38.","status":"PASS"},{"name":"< [createConstantSource()] All assertions passed. (total 11 assertions)","status":"PASS"},{"name":"> [new ConstantSourceNode()] ","status":"PASS"},{"name":"  Constructor: node = new ConstantSourceNode() did not throw an exception.","status":"PASS"},{"name":"  Constructor: node instance of ConstantSourceNode is equal to true.","status":"PASS"},{"name":"  Constructor: node.numberOfInputs is equal to 0.","status":"PASS"},{"name":"  Constructor: node.numberOfOutputs is equal to 1.","status":"PASS"},{"name":"  Constructor: node.channelCount is equal to 2.","status":"PASS"},{"name":"  Constructor: node.channelCountMode is equal to max.","status":"PASS"},{"name":"  Constructor: node.channelInterpretation is equal to speakers.","status":"PASS"},{"name":"  Constructor: node.offset.value is equal to 1.","status":"PASS"},{"name":"  Constructor: node.offset.defaultValue is equal to 1.","status":"PASS"},{"name":"  Constructor: node.offset.minValue is equal to -3.4028234663852886e+38.","status":"PASS"},{"name":"  Constructor: node.offset.maxValue is equal to 3.4028234663852886e+38.","status":"PASS"},{"name":"< [new ConstantSourceNode()] All assertions passed. (total 11 assertions)","status":"PASS"},{"name":"> [start/stop exceptions] ","status":"PASS"},{"name":"  start(NaN) threw TypeError: \"Failed to execute 'start' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"  start(Infinity) threw TypeError: \"Failed to execute 'start' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"  start(-Infinity) threw TypeError: \"Failed to execute 'start' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"  Calling stop() before start() threw InvalidStateError: \"Failed to execute 'stop' on 'AudioScheduledSourceNode': cannot call stop without calling start first.\".","status":"PASS"},{"name":"  start(-1) threw RangeError: \"Failed to execute 'start' on 'AudioScheduledSourceNode': The start time provided (-1) is less than the minimum bound (0).\".","status":"PASS"},{"name":"  Calling start() twice threw InvalidStateError: \"Failed to execute 'start' on 'AudioScheduledSourceNode': cannot call start more than once.\".","status":"PASS"},{"name":"  stop(-1) threw RangeError: \"Failed to execute 'stop' on 'AudioScheduledSourceNode': The stop time provided (-1) is less than the minimum bound (0).\".","status":"PASS"},{"name":"  stop(NaN) threw TypeError: \"Failed to execute 'stop' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"  stop(Infinity) threw TypeError: \"Failed to execute 'stop' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"  stop(-Infinity) threw TypeError: \"Failed to execute 'stop' on 'AudioScheduledSourceNode': The provided double value is non-finite.\".","status":"PASS"},{"name":"< [start/stop exceptions] All assertions passed. (total 10 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 3 tasks ran successfully.","status":"PASS"}]}