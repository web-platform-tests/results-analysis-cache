{"status":"TIMEOUT","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"test-suspend\"","status":"FAIL"},{"name":"Executing \"test-resume\"","status":"PASS"},{"name":"Executing \"test-after-close\"","status":"TIMEOUT"},{"name":"Executing \"resume-running-context\"","status":"NOTRUN"},{"name":"Audit report","status":"NOTRUN"},{"name":"> [test-suspend] Test suspend() for offline context","status":"PASS"},{"name":"  offlineContext = new OfflineAudioContext(1, 44100, 44100) did not throw an exception.","status":"PASS"},{"name":"  offlineContext.state is equal to suspended.","status":"PASS"},{"name":"X p1 = offlineContext.suspend() incorrectly threw TypeError: \"offlineContext.suspend is not a function\".","status":"FAIL"},{"name":"X p1 instanceof Promise is not true. Got false.","status":"FAIL"},{"name":"> [test-resume] Test resume() for offline context","status":"PASS"},{"name":"  p2 = offlineContext.resume() did not throw an exception.","status":"PASS"},{"name":"  p2 instanceof Promise is true.","status":"PASS"},{"name":"  After resume, offlineContext.state is equal to suspended.","status":"PASS"},{"name":"X p2 resolved incorrectly. Got Promise.","status":"FAIL"},{"name":"< [test-resume] 1 out of 4 assertions were failed.","status":"FAIL"},{"name":"> [test-after-close] Test state after context closed","status":"PASS"},{"name":"  p3 = offlineContext.startRendering() did not throw an exception.","status":"PASS"}]}