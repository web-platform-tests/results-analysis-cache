{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"Test 1\"","status":"PASS"},{"name":"Executing \"Test 2\"","status":"PASS"},{"name":"Executing \"Test 3\"","status":"PASS"},{"name":"Executing \"Test 4\"","status":"PASS"},{"name":"Executing \"Test 5\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [Test 1] k-rate frequency input","status":"PASS"},{"name":"  Test 1: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"X k-rate frequency with input does not equal [0,0.07662386447191238,0.15279719233512878,0.22807207703590393,0.30200594663619995,0.37416407465934753,0.4441221356391907,0.5114688277244568,0.5758082270622253,0.6367618441581726,0.6939714550971985,0.7471005916595459,0.7958369255065918,0.8398938179016113,0.8790122270584106,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.\n\tIndex\tActual\t\t\tExpected\t\tAbsError\t\tRelError\t\tTest threshold\n\t[129]\t-6.8821799755096436e-1\t-4.5234957337379456e-1\t2.3586842417716980e-1\t5.2142952720829094e-1\t0.0000000000000000e+0\n\t[130]\t-9.0242308378219604e-1\t-5.1935595273971558e-1\t3.8306713104248047e-1\t7.3758109254687088e-1\t0.0000000000000000e+0\n\t[131]\t-9.9687290191650391e-1\t-5.8330863714218140e-1\t4.1356426477432251e-1\t7.0899732738487853e-1\t0.0000000000000000e+0\n\t[132]\t-9.5903325080871582e-1\t-6.4383149147033691e-1\t3.1520175933837891e-1\t4.8957182665691512e-1\t0.0000000000000000e+0\n\t[133]\t-7.9392594099044800e-1\t-7.0056873559951782e-1\t9.3357205390930176e-2\t1.3325916594185283e-1\t0.0000000000000000e+0\n\t...and 506 more errors.\n\tMax AbsError of 1.9995587468147278e+0 at index of 618.\n\t[618]\t-9.9961638450622559e-1\t9.9994236230850220e-1\t1.9995587468147278e+0\t1.9996740034080325e+0\t0.0000000000000000e+0\n\tMax RelError of 7.0191030309800865e+1 at index of 164.\n\t[164]\t-8.4908038377761841e-1\t1.2271538376808167e-2\t8.6135192215442657e-1\t7.0191030309800865e+1\t0.0000000000000000e+0\n","status":"FAIL"},{"name":"< [Test 1] 1 out of 8 assertions were failed.","status":"FAIL"},{"name":"> [Test 2] k-rate detune input","status":"PASS"},{"name":"  Test 2: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune with input equals [0,0.3311063051223755,0.6248595118522644,0.8481203317642212,0.9757021069526672,0.9932119250297546,0.8986744284629822,0.7027547359466553,0.42755505442619324,0.1041216030716896,-0.23105813562870026,-0.5401715040206909,-0.7883464694023132,-0.9475855827331543,-0.9999247193336487,-0.9394592046737671...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 2] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 3] k-rate frequency input with a-rate detune","status":"PASS"},{"name":"  Test 3: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"X k-rate frequency input with a-rate detune does not equal [0,0.07662386447191238,0.15279719233512878,0.22807207703590393,0.30200594663619995,0.37416407465934753,0.4441221356391907,0.5114688277244568,0.5758082270622253,0.6367618441581726,0.6939714550971985,0.7471005916595459,0.7958369255065918,0.8398938179016113,0.8790122270584106,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.\n\tIndex\tActual\t\t\tExpected\t\tAbsError\t\tRelError\t\tTest threshold\n\t[129]\t-6.8821799755096436e-1\t-4.5234957337379456e-1\t2.3586842417716980e-1\t5.2142952720829094e-1\t0.0000000000000000e+0\n\t[130]\t-9.0242308378219604e-1\t-5.1935595273971558e-1\t3.8306713104248047e-1\t7.3758109254687088e-1\t0.0000000000000000e+0\n\t[131]\t-9.9687290191650391e-1\t-5.8330863714218140e-1\t4.1356426477432251e-1\t7.0899732738487853e-1\t0.0000000000000000e+0\n\t[132]\t-9.5903325080871582e-1\t-6.4383149147033691e-1\t3.1520175933837891e-1\t4.8957182665691512e-1\t0.0000000000000000e+0\n\t[133]\t-7.9392594099044800e-1\t-7.0056873559951782e-1\t9.3357205390930176e-2\t1.3325916594185283e-1\t0.0000000000000000e+0\n\t...and 506 more errors.\n\tMax AbsError of 1.9995587468147278e+0 at index of 618.\n\t[618]\t-9.9961638450622559e-1\t9.9994236230850220e-1\t1.9995587468147278e+0\t1.9996740034080325e+0\t0.0000000000000000e+0\n\tMax RelError of 7.0191030309800865e+1 at index of 164.\n\t[164]\t-8.4908038377761841e-1\t1.2271538376808167e-2\t8.6135192215442657e-1\t7.0191030309800865e+1\t0.0000000000000000e+0\n","status":"FAIL"},{"name":"< [Test 3] 1 out of 12 assertions were failed.","status":"FAIL"},{"name":"> [Test 4] a-rate frequency with k-rate detune input","status":"PASS"},{"name":"  Test 4: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune input with a-rate frequency equals [0,0.07662386447191238,0.15279719233512878,0.230291947722435,0.3085210621356964,0.3868181109428406,0.46443799138069153,0.5405592918395996,0.6142886877059937,0.6846673488616943,0.7506800293922424,0.8112664222717285,0.8653356432914734,0.91178297996521,0.9495100975036621,0.9774478077888489...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 4] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 5] k-rate inputs for frequency and detune","status":"PASS"},{"name":"  Test 5: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef;.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"X k-rate inputs for both frequency and detune does not equal [0,0.07662386447191238,0.15279719233512878,0.22807207703590393,0.30200594663619995,0.37416407465934753,0.4441221356391907,0.5114688277244568,0.5758082270622253,0.6367618441581726,0.6939714550971985,0.7471005916595459,0.7958369255065918,0.8398938179016113,0.8790122270584106,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.\n\tIndex\tActual\t\t\tExpected\t\tAbsError\t\tRelError\t\tTest threshold\n\t[129]\t-6.8821799755096436e-1\t-4.5234957337379456e-1\t2.3586842417716980e-1\t5.2142952720829094e-1\t0.0000000000000000e+0\n\t[130]\t-9.0242308378219604e-1\t-5.1935595273971558e-1\t3.8306713104248047e-1\t7.3758109254687088e-1\t0.0000000000000000e+0\n\t[131]\t-9.9687290191650391e-1\t-5.8330863714218140e-1\t4.1356426477432251e-1\t7.0899732738487853e-1\t0.0000000000000000e+0\n\t[132]\t-9.5903325080871582e-1\t-6.4383149147033691e-1\t3.1520175933837891e-1\t4.8957182665691512e-1\t0.0000000000000000e+0\n\t[133]\t-7.9392594099044800e-1\t-7.0056873559951782e-1\t9.3357205390930176e-2\t1.3325916594185283e-1\t0.0000000000000000e+0\n\t...and 506 more errors.\n\tMax AbsError of 1.9995587468147278e+0 at index of 618.\n\t[618]\t-9.9961638450622559e-1\t9.9994236230850220e-1\t1.9995587468147278e+0\t1.9996740034080325e+0\t0.0000000000000000e+0\n\tMax RelError of 7.0191030309800865e+1 at index of 164.\n\t[164]\t-8.4908038377761841e-1\t1.2271538376808167e-2\t8.6135192215442657e-1\t7.0191030309800865e+1\t0.0000000000000000e+0\n","status":"FAIL"},{"name":"< [Test 5] 1 out of 15 assertions were failed.","status":"FAIL"},{"name":"# AUDIT TASK RUNNER FINISHED: 3 out of 5 tasks were failed.","status":"FAIL"}]}