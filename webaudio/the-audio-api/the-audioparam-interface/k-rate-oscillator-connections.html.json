{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"Test 1\"","status":"PASS"},{"name":"Executing \"Test 2\"","status":"PASS"},{"name":"Executing \"Test 3\"","status":"PASS"},{"name":"Executing \"Test 4\"","status":"PASS"},{"name":"Executing \"Test 5\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [Test 1] k-rate frequency input","status":"PASS"},{"name":"  Test 1: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency with input equals [0,0.07662388682365417,0.15279722213745117,0.2280721366405487,0.30200594663619995,0.3741641044616699,0.4441221356391907,0.5114688873291016,0.5758081674575806,0.6367618441581726,0.6939714550971985,0.7471005320549011,0.7958369255065918,0.8398938179016113,0.8790122270584106,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 1] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 2] k-rate detune input","status":"PASS"},{"name":"  Test 2: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune with input equals [0,0.3311063051223755,0.6248595118522644,0.8481203317642212,0.975702166557312,0.9932119250297546,0.8986744284629822,0.7027547359466553,0.42755502462387085,0.1041216254234314,-0.23105812072753906,-0.5401714444160461,-0.7883464097976685,-0.9475856423377991,-0.9999246597290039,-0.9394591450691223...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 2] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 3] k-rate frequency input with a-rate detune","status":"PASS"},{"name":"  Test 3: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency input with a-rate detune equals [0,0.07662388682365417,0.15266048908233643,0.2276681810617447,0.3012153208255768,0.3728828430175781,0.44226622581481934,0.508978009223938,0.5726482272148132,0.6329298615455627,0.6894980072975159,0.7420486807823181,0.7903092503547668,0.8340273499488831,0.8729849457740784,0.9069863557815552...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 3] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 4] a-rate frequency with k-rate detune input","status":"PASS"},{"name":"  Test 4: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune input with a-rate frequency equals [0,0.07662388682365417,0.15504689514636993,0.2347174733877182,0.3150010108947754,0.3951808214187622,0.47445863485336304,0.5519571900367737,0.6267285346984863,0.6977577805519104,0.7639768123626709,0.8242767453193665,0.8775221705436707,0.9225711822509766,0.9582991600036621,0.983623206615448...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 4] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 5] k-rate inputs for frequency and detune","status":"PASS"},{"name":"  Test 5: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef;.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate inputs for both frequency and detune equals [0,0.07662388682365417,0.15279722213745117,0.2280721366405487,0.30200594663619995,0.3741641044616699,0.4441221356391907,0.5114688873291016,0.5758081674575806,0.6367618441581726,0.6939714550971985,0.7471005320549011,0.7958369255065918,0.8398938179016113,0.8790122270584106,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 5] All assertions passed. (total 15 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}