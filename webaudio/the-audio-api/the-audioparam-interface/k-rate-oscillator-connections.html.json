{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"Test 1\"","status":"PASS"},{"name":"Executing \"Test 2\"","status":"PASS"},{"name":"Executing \"Test 3\"","status":"PASS"},{"name":"Executing \"Test 4\"","status":"PASS"},{"name":"Executing \"Test 5\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [Test 1] k-rate frequency input","status":"PASS"},{"name":"  Test 1: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency with input equals [0,0.07662386447191238,0.15504705905914307,0.2347176969051361,0.3150014579296112,0.3951813280582428,0.4744589328765869,0.551957905292511,0.6267290115356445,0.6977584362030029,0.7639777064323425,0.8242772817611694,0.8775222897529602,0.9225717186927795,0.9583003520965576,0.9836235642433167...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 1] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 2] k-rate detune input","status":"PASS"},{"name":"  Test 2: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune with input equals [0,0.3311063051223755,0.6253354549407959,0.8490886688232422,0.9764981269836426,0.9924829006195068,0.8946155309677124,0.6935603618621826,0.41200417280197144,0.08217514306306839,-0.2577908933162689,-0.5682337284088135,-0.8126012682914734,-0.9617900252342224,-0.9976780414581299,-0.9154096841812134...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 2] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 3] k-rate frequency input with a-rate detune","status":"PASS"},{"name":"  Test 3: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency input with a-rate detune equals [0,0.07662386447191238,0.15490634739398956,0.234294593334198,0.3141601085662842,0.39379963278770447,0.47243741154670715,0.5492294430732727,0.6232695579528809,0.6935974359512329,0.7592089772224426,0.8190691471099854,0.8721268177032471,0.9173320531845093,0.953656017780304,0.9801127314567566...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 3] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 4] a-rate frequency with k-rate detune input","status":"PASS"},{"name":"  Test 4: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune input with a-rate frequency equals [0,0.07662386447191238,0.15490634739398956,0.234294593334198,0.3141601085662842,0.39379963278770447,0.47243741154670715,0.5492294430732727,0.6232695579528809,0.6935974359512329,0.7592089772224426,0.8190691471099854,0.8721268177032471,0.9173320531845093,0.953656017780304,0.9801127314567566...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 4] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 5] k-rate inputs for frequency and detune","status":"PASS"},{"name":"  Test 5: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef;.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate inputs for both frequency and detune equals [0,0.07662386447191238,0.15490634739398956,0.234294593334198,0.3141601085662842,0.39379963278770447,0.47243741154670715,0.5492294430732727,0.6232695579528809,0.6935974359512329,0.7592089772224426,0.8190691471099854,0.8721268177032471,0.9173320531845093,0.953656017780304,0.9801127314567566...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 5] All assertions passed. (total 15 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}