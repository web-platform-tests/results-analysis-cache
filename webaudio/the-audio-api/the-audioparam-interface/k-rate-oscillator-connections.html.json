{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"Test 1\"","status":"PASS"},{"name":"Executing \"Test 2\"","status":"PASS"},{"name":"Executing \"Test 3\"","status":"PASS"},{"name":"Executing \"Test 4\"","status":"PASS"},{"name":"Executing \"Test 5\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [Test 1] k-rate frequency input","status":"PASS"},{"name":"  Test 1: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 1: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency with input equals [0,0.07662386447191238,0.15279719233512878,0.22807207703590393,0.30200594663619995,0.37416401505470276,0.44412216544151306,0.5114688873291016,0.5758081674575806,0.6367619037628174,0.6939714550971985,0.7471005320549011,0.795836865901947,0.8398937582969666,0.8790121674537659,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 1] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 2] k-rate detune input","status":"PASS"},{"name":"  Test 2: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcRef.detune.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 2: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune with input equals [0,0.3311063051223755,0.6248594522476196,0.8481203317642212,0.9757020473480225,0.9932119846343994,0.898674488067627,0.7027547359466553,0.427555114030838,0.10412159562110901,-0.23105810582637787,-0.5401715040206909,-0.7883464097976685,-0.9475855231285095,-0.9999247193336487,-0.9394592046737671...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 2] All assertions passed. (total 8 assertions)","status":"PASS"},{"name":"> [Test 3] k-rate frequency input with a-rate detune","status":"PASS"},{"name":"  Test 3: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: srcTest.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 3: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  k-rate frequency input with a-rate detune equals [0,0.07662386447191238,0.15266044437885284,0.2276681512594223,0.3012153208255768,0.37288278341293335,0.44226622581481934,0.508978009223938,0.572648286819458,0.6329298615455627,0.6894978880882263,0.7420486807823181,0.7903092503547668,0.8340274095535278,0.8729848265647888,0.9069863557815552...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 3] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 4] a-rate frequency with k-rate detune input","status":"PASS"},{"name":"  Test 4: srcRef.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: srcTest.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 4: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate detune input with a-rate frequency equals [0,0.07662386447191238,0.15504691004753113,0.2347174882888794,0.3150010406970978,0.395180881023407,0.4744586944580078,0.5519572496414185,0.6267284750938416,0.6977577209472656,0.7639768123626709,0.8242766857147217,0.8775221109390259,0.9225713014602661,0.9582992196083069,0.983623206615448...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 4] All assertions passed. (total 12 assertions)","status":"PASS"},{"name":"> [Test 5] k-rate inputs for frequency and detune","status":"PASS"},{"name":"  Test 5: srcRef.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef;.frequency.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcRef.detune.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.frequency.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: srcTest.detune.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.setValueAtTime(100, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.offset.linearRampToValueAtTime(2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.offset.linearRampToValueAtTime(-2000, 0.078125) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modFreq.connect(srcTest.frequency) did not throw an exception.","status":"PASS"},{"name":"  Test 5: modDetune.connect(srcTest.detune) did not throw an exception.","status":"PASS"},{"name":"  k-rate inputs for both frequency and detune equals [0,0.07662386447191238,0.15279719233512878,0.22807207703590393,0.30200594663619995,0.37416401505470276,0.44412216544151306,0.5114688873291016,0.5758081674575806,0.6367619037628174,0.6939714550971985,0.7471005320549011,0.795836865901947,0.8398937582969666,0.8790121674537659,0.9129621982574463...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [Test 5] All assertions passed. (total 15 assertions)","status":"PASS"},{"name":"# AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.","status":"PASS"}]}