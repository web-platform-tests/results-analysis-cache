{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"delayTime\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [delayTime] DelayNode delayTime k-rate input","status":"PASS"},{"name":"  refNode = new DelayNode(context) did not throw an exception.","status":"PASS"},{"name":"  refNode.delayTime.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  refNode.delayTime.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  refNode.delayTime.linearRampToValueAtTime(1.125, 1) did not throw an exception.","status":"PASS"},{"name":"  testNode = new DelayNode(context) did not throw an exception.","status":"PASS"},{"name":"  testNode.delayTime.automationRate = 'k-rate' did not throw an exception.","status":"PASS"},{"name":"  testMod = new ConstantSourceNode(context) did not throw an exception.","status":"PASS"},{"name":"  testMod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  testMod.offset.linearRampToValueAtTime(1.125, 1) did not throw an exception.","status":"PASS"},{"name":"  testMod.connect(testNode.delayTime) did not throw an exception.","status":"PASS"},{"name":"  Expected k-rate delayTime AudioParam with input is not constantly 0 (contains 4095 different values).","status":"PASS"},{"name":"  Actual k-rate delayTime AudioParam with input is not constantly 0 (contains 4095 different values).","status":"PASS"},{"name":"  output[128, 143] contains only the constant 0.","status":"PASS"},{"name":"X output[144, 255] should have contain at least one value different from 0.","status":"FAIL"},{"name":"  k-rate delayTime AudioParam with input equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [delayTime] 1 out of 15 assertions were failed.","status":"FAIL"},{"name":"# AUDIT TASK RUNNER FINISHED: 1 out of 1 tasks were failed.","status":"FAIL"}]}