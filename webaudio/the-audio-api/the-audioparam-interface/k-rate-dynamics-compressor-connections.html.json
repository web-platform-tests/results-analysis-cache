{"status":"OK","subtests":[{"name":"# AUDIT TASK RUNNER STARTED.","status":"PASS"},{"name":"Executing \"attack\"","status":"PASS"},{"name":"Executing \"knee\"","status":"PASS"},{"name":"Executing \"ratio\"","status":"PASS"},{"name":"Executing \"release\"","status":"PASS"},{"name":"Executing \"threshold\"","status":"PASS"},{"name":"Audit report","status":"PASS"},{"name":"> [attack] Dynamics compressor attack","status":"PASS"},{"name":"  attack: refNode = new DynamicsCompressorNode(context) did not throw an exception.","status":"PASS"},{"name":"  attack: tstNode = new DynamicsCompressorNode(context, {\"attack\":0}) did not throw an exception.","status":"PASS"},{"name":"  attack: refNode[attack].setValueAtTime(refNode[attack].minValue, 0) did not throw an exception.","status":"PASS"},{"name":"  attack: refNode[attack].linearRampToValueAtTime(refNode[attack].minValue, 0.25) did not throw an exception.","status":"PASS"},{"name":"  attack: mod = new ConstantSourceNode(context, {offset: 0}) did not throw an exception.","status":"PASS"},{"name":"  attack: mod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  attack: mod.offset.linearRampToValueAtTime(1, 0.25) did not throw an exception.","status":"PASS"},{"name":"  attack: mod.connect(tstNode[attack]) did not throw an exception.","status":"PASS"},{"name":"  k-rate attack AudioParam with input equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [attack] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [knee] Dynamics compressor knee","status":"PASS"},{"name":"  knee: refNode = new DynamicsCompressorNode(context) did not throw an exception.","status":"PASS"},{"name":"  knee: tstNode = new DynamicsCompressorNode(context, {\"knee\":0}) did not throw an exception.","status":"PASS"},{"name":"  knee: refNode[knee].setValueAtTime(refNode[knee].minValue, 0) did not throw an exception.","status":"PASS"},{"name":"  knee: refNode[knee].linearRampToValueAtTime(refNode[knee].minValue, 0.25) did not throw an exception.","status":"PASS"},{"name":"  knee: mod = new ConstantSourceNode(context, {offset: 0}) did not throw an exception.","status":"PASS"},{"name":"  knee: mod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  knee: mod.offset.linearRampToValueAtTime(40, 0.25) did not throw an exception.","status":"PASS"},{"name":"  knee: mod.connect(tstNode[knee]) did not throw an exception.","status":"PASS"},{"name":"  k-rate knee AudioParam with input equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [knee] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [ratio] Dynamics compressor ratio","status":"PASS"},{"name":"  ratio: refNode = new DynamicsCompressorNode(context) did not throw an exception.","status":"PASS"},{"name":"  ratio: tstNode = new DynamicsCompressorNode(context, {\"ratio\":1}) did not throw an exception.","status":"PASS"},{"name":"  ratio: refNode[ratio].setValueAtTime(refNode[ratio].minValue, 0) did not throw an exception.","status":"PASS"},{"name":"  ratio: refNode[ratio].linearRampToValueAtTime(refNode[ratio].minValue, 0.25) did not throw an exception.","status":"PASS"},{"name":"  ratio: mod = new ConstantSourceNode(context, {offset: 0}) did not throw an exception.","status":"PASS"},{"name":"  ratio: mod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  ratio: mod.offset.linearRampToValueAtTime(19, 0.25) did not throw an exception.","status":"PASS"},{"name":"  ratio: mod.connect(tstNode[ratio]) did not throw an exception.","status":"PASS"},{"name":"  k-rate ratio AudioParam with input equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [ratio] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [release] Dynamics compressor release","status":"PASS"},{"name":"  release: refNode = new DynamicsCompressorNode(context) did not throw an exception.","status":"PASS"},{"name":"  release: tstNode = new DynamicsCompressorNode(context, {\"release\":0}) did not throw an exception.","status":"PASS"},{"name":"  release: refNode[release].setValueAtTime(refNode[release].minValue, 0) did not throw an exception.","status":"PASS"},{"name":"  release: refNode[release].linearRampToValueAtTime(refNode[release].minValue, 0.25) did not throw an exception.","status":"PASS"},{"name":"  release: mod = new ConstantSourceNode(context, {offset: 0}) did not throw an exception.","status":"PASS"},{"name":"  release: mod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  release: mod.offset.linearRampToValueAtTime(1, 0.25) did not throw an exception.","status":"PASS"},{"name":"  release: mod.connect(tstNode[release]) did not throw an exception.","status":"PASS"},{"name":"  k-rate release AudioParam with input equals [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.","status":"PASS"},{"name":"< [release] All assertions passed. (total 9 assertions)","status":"PASS"},{"name":"> [threshold] Dynamics compressor threshold","status":"PASS"},{"name":"  threshold: refNode = new DynamicsCompressorNode(context) did not throw an exception.","status":"PASS"},{"name":"  threshold: tstNode = new DynamicsCompressorNode(context, {\"threshold\":-100}) did not throw an exception.","status":"PASS"},{"name":"  threshold: refNode[threshold].setValueAtTime(refNode[threshold].minValue, 0) did not throw an exception.","status":"PASS"},{"name":"  threshold: refNode[threshold].linearRampToValueAtTime(refNode[threshold].minValue, 0.25) did not throw an exception.","status":"PASS"},{"name":"  threshold: mod = new ConstantSourceNode(context, {offset: 0}) did not throw an exception.","status":"PASS"},{"name":"  threshold: mod.offset.setValueAtTime(0, 0) did not throw an exception.","status":"PASS"},{"name":"  threshold: mod.offset.linearRampToValueAtTime(100, 0.25) did not throw an exception.","status":"PASS"},{"name":"  threshold: mod.connect(tstNode[threshold]) did not throw an exception.","status":"PASS"},{"name":"X k-rate threshold AudioParam with input does not equal [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0...] with an element-wise tolerance of {\"absoluteThreshold\":0,\"relativeThreshold\":0}.\n\tIndex\tActual\t\t\tExpected\t\tAbsError\t\tRelError\t\tTest threshold\n\t[2432]\t-1.2464846484363079e-2\t-1.2467551976442337e-2\t2.7054920792579651e-6\t2.1700267096299585e-4\t0.0000000000000000e+0\n\t[2433]\t-1.2221721000969410e-2\t-1.2226040475070477e-2\t4.3194741010665894e-6\t3.5330114519694408e-4\t0.0000000000000000e+0\n\t[2434]\t-1.1524774134159088e-2\t-1.1529818177223206e-2\t5.0440430641174316e-6\t4.3747810993947684e-4\t0.0000000000000000e+0\n\t[2435]\t-1.1310786008834839e-2\t-1.1316673830151558e-2\t5.8878213167190552e-6\t5.2027843208062160e-4\t0.0000000000000000e+0\n\t[2436]\t-1.1019666679203510e-2\t-1.1026107706129551e-2\t6.4410269260406494e-6\t5.8416143735472506e-4\t0.0000000000000000e+0\n\t...and 9560 more errors.\n\tMax AbsError of 1.7777085304260254e-5 at index of 2523.\n\t[2523]\t2.0277557894587517e-2\t2.0295334979891777e-2\t1.7777085304260254e-5\t8.7591977771608322e-4\t0.0000000000000000e+0\n\tMax RelError of 3.2567427641635026e-2 at index of 2579.\n\t[2579]\t-2.8551585273817182e-6\t-2.9512739274650812e-6\t9.6115400083363056e-8\t3.2567427641635026e-2\t0.0000000000000000e+0\n","status":"FAIL"},{"name":"< [threshold] 1 out of 9 assertions were failed.","status":"FAIL"},{"name":"# AUDIT TASK RUNNER FINISHED: 1 out of 5 tasks were failed.","status":"FAIL"}]}