{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"HTMLElement includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes DocumentAndElementEventHandlers: member names are unique","status":"PASS"},{"name":"HTMLElement includes ElementContentEditable: member names are unique","status":"PASS"},{"name":"HTMLElement includes HTMLOrSVGElement: member names are unique","status":"PASS"},{"name":"Element includes ParentNode: member names are unique","status":"PASS"},{"name":"Element includes NonDocumentTypeChildNode: member names are unique","status":"PASS"},{"name":"Element includes ChildNode: member names are unique","status":"PASS"},{"name":"Element includes Slottable: member names are unique","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"BaseAudioContext interface object length","status":"PASS"},{"name":"BaseAudioContext interface object name","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"BaseAudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"BaseAudioContext interface: attribute destination","status":"PASS"},{"name":"BaseAudioContext interface: attribute sampleRate","status":"PASS"},{"name":"BaseAudioContext interface: attribute currentTime","status":"PASS"},{"name":"BaseAudioContext interface: attribute listener","status":"PASS"},{"name":"BaseAudioContext interface: attribute state","status":"PASS"},{"name":"BaseAudioContext interface: attribute audioWorklet","status":"PASS"},{"name":"BaseAudioContext interface: attribute onstatechange","status":"PASS"},{"name":"BaseAudioContext interface: operation createAnalyser()","status":"PASS"},{"name":"BaseAudioContext interface: operation createBiquadFilter()","status":"PASS"},{"name":"BaseAudioContext interface: operation createBuffer(unsigned long, unsigned long, float)","status":"PASS"},{"name":"BaseAudioContext interface: operation createBufferSource()","status":"PASS"},{"name":"BaseAudioContext interface: operation createChannelMerger(optional unsigned long)","status":"PASS"},{"name":"BaseAudioContext interface: operation createChannelSplitter(optional unsigned long)","status":"PASS"},{"name":"BaseAudioContext interface: operation createConstantSource()","status":"PASS"},{"name":"BaseAudioContext interface: operation createConvolver()","status":"PASS"},{"name":"BaseAudioContext interface: operation createDelay(optional double)","status":"PASS"},{"name":"BaseAudioContext interface: operation createDynamicsCompressor()","status":"PASS"},{"name":"BaseAudioContext interface: operation createGain()","status":"PASS"},{"name":"BaseAudioContext interface: operation createIIRFilter(sequence<double>, sequence<double>)","status":"PASS"},{"name":"BaseAudioContext interface: operation createOscillator()","status":"PASS"},{"name":"BaseAudioContext interface: operation createPanner()","status":"PASS"},{"name":"BaseAudioContext interface: operation createPeriodicWave(sequence<float>, sequence<float>, optional PeriodicWaveConstraints)","status":"PASS"},{"name":"BaseAudioContext interface: operation createScriptProcessor(optional unsigned long, optional unsigned long, optional unsigned long)","status":"PASS"},{"name":"BaseAudioContext interface: operation createStereoPanner()","status":"PASS"},{"name":"BaseAudioContext interface: operation createWaveShaper()","status":"PASS"},{"name":"BaseAudioContext interface: operation decodeAudioData(ArrayBuffer, optional DecodeSuccessCallback?, optional DecodeErrorCallback?)","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"AudioContext interface object length","status":"PASS"},{"name":"AudioContext interface object name","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioContext interface: attribute baseLatency","status":"PASS"},{"name":"AudioContext interface: attribute outputLatency","status":"FAIL"},{"name":"AudioContext interface: operation getOutputTimestamp()","status":"PASS"},{"name":"AudioContext interface: operation resume()","status":"PASS"},{"name":"AudioContext interface: operation suspend()","status":"PASS"},{"name":"AudioContext interface: operation close()","status":"PASS"},{"name":"AudioContext interface: operation createMediaElementSource(HTMLMediaElement)","status":"PASS"},{"name":"AudioContext interface: operation createMediaStreamSource(MediaStream)","status":"PASS"},{"name":"AudioContext interface: operation createMediaStreamTrackSource(MediaStreamTrack)","status":"FAIL"},{"name":"AudioContext interface: operation createMediaStreamDestination()","status":"PASS"},{"name":"AudioContext must be primary interface of context","status":"PASS"},{"name":"Stringification of context","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"baseLatency\" with the proper type","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"outputLatency\" with the proper type","status":"FAIL"},{"name":"AudioContext interface: context must inherit property \"getOutputTimestamp()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"resume()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"suspend()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"createMediaElementSource(HTMLMediaElement)\" with the proper type","status":"PASS"},{"name":"AudioContext interface: calling createMediaElementSource(HTMLMediaElement) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"createMediaStreamSource(MediaStream)\" with the proper type","status":"PASS"},{"name":"AudioContext interface: calling createMediaStreamSource(MediaStream) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioContext interface: context must inherit property \"createMediaStreamTrackSource(MediaStreamTrack)\" with the proper type","status":"FAIL"},{"name":"AudioContext interface: calling createMediaStreamTrackSource(MediaStreamTrack) on context with too few arguments must throw TypeError","status":"FAIL"},{"name":"AudioContext interface: context must inherit property \"createMediaStreamDestination()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"destination\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"currentTime\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"listener\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"state\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"audioWorklet\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createAnalyser()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createBiquadFilter()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createBuffer(unsigned long, unsigned long, float)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createBuffer(unsigned long, unsigned long, float) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createBufferSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createChannelMerger(optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelMerger(optional unsigned long) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createChannelSplitter(optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelSplitter(optional unsigned long) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createConstantSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createConvolver()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createDelay(optional double)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createDelay(optional double) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createDynamicsCompressor()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createGain()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createIIRFilter(sequence<double>, sequence<double>)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createIIRFilter(sequence<double>, sequence<double>) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createOscillator()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createPeriodicWave(sequence<float>, sequence<float>, optional PeriodicWaveConstraints)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createPeriodicWave(sequence<float>, sequence<float>, optional PeriodicWaveConstraints) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createScriptProcessor(optional unsigned long, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createScriptProcessor(optional unsigned long, optional unsigned long, optional unsigned long) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createStereoPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"createWaveShaper()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: context must inherit property \"decodeAudioData(ArrayBuffer, optional DecodeSuccessCallback?, optional DecodeErrorCallback?)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling decodeAudioData(ArrayBuffer, optional DecodeSuccessCallback?, optional DecodeErrorCallback?) on context with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface object","status":"PASS"},{"name":"OfflineAudioContext interface object length","status":"PASS"},{"name":"OfflineAudioContext interface object name","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OfflineAudioContext interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OfflineAudioContext interface: operation startRendering()","status":"PASS"},{"name":"OfflineAudioContext interface: operation resume()","status":"PASS"},{"name":"OfflineAudioContext interface: operation suspend(double)","status":"PASS"},{"name":"OfflineAudioContext interface: attribute length","status":"PASS"},{"name":"OfflineAudioContext interface: attribute oncomplete","status":"PASS"},{"name":"OfflineAudioContext must be primary interface of new OfflineAudioContext(1, 1, sample_rate)","status":"PASS"},{"name":"Stringification of new OfflineAudioContext(1, 1, sample_rate)","status":"PASS"},{"name":"OfflineAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"startRendering()\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"resume()\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"suspend(double)\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: calling suspend(double) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"length\" with the proper type","status":"PASS"},{"name":"OfflineAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"oncomplete\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"destination\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"currentTime\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"listener\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"state\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"audioWorklet\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"onstatechange\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createAnalyser()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createBiquadFilter()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createBuffer(unsigned long, unsigned long, float)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createBuffer(unsigned long, unsigned long, float) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createBufferSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createChannelMerger(optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelMerger(optional unsigned long) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createChannelSplitter(optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createChannelSplitter(optional unsigned long) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createConstantSource()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createConvolver()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createDelay(optional double)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createDelay(optional double) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createDynamicsCompressor()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createGain()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createIIRFilter(sequence<double>, sequence<double>)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createIIRFilter(sequence<double>, sequence<double>) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createOscillator()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createPeriodicWave(sequence<float>, sequence<float>, optional PeriodicWaveConstraints)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createPeriodicWave(sequence<float>, sequence<float>, optional PeriodicWaveConstraints) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createScriptProcessor(optional unsigned long, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling createScriptProcessor(optional unsigned long, optional unsigned long, optional unsigned long) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createStereoPanner()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"createWaveShaper()\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: new OfflineAudioContext(1, 1, sample_rate) must inherit property \"decodeAudioData(ArrayBuffer, optional DecodeSuccessCallback?, optional DecodeErrorCallback?)\" with the proper type","status":"PASS"},{"name":"BaseAudioContext interface: calling decodeAudioData(ArrayBuffer, optional DecodeSuccessCallback?, optional DecodeErrorCallback?) on new OfflineAudioContext(1, 1, sample_rate) with too few arguments must throw TypeError","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface object","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface object length","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface object name","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: attribute renderedBuffer","status":"PASS"},{"name":"OfflineAudioCompletionEvent must be primary interface of new OfflineAudioCompletionEvent(\"\", {renderedBuffer: buffer})","status":"PASS"},{"name":"Stringification of new OfflineAudioCompletionEvent(\"\", {renderedBuffer: buffer})","status":"PASS"},{"name":"OfflineAudioCompletionEvent interface: new OfflineAudioCompletionEvent(\"\", {renderedBuffer: buffer}) must inherit property \"renderedBuffer\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface object","status":"PASS"},{"name":"AudioBuffer interface object length","status":"PASS"},{"name":"AudioBuffer interface object name","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioBuffer interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioBuffer interface: attribute sampleRate","status":"PASS"},{"name":"AudioBuffer interface: attribute length","status":"PASS"},{"name":"AudioBuffer interface: attribute duration","status":"PASS"},{"name":"AudioBuffer interface: attribute numberOfChannels","status":"PASS"},{"name":"AudioBuffer interface: operation getChannelData(unsigned long)","status":"PASS"},{"name":"AudioBuffer interface: operation copyFromChannel(Float32Array, unsigned long, optional unsigned long)","status":"PASS"},{"name":"AudioBuffer interface: operation copyToChannel(Float32Array, unsigned long, optional unsigned long)","status":"PASS"},{"name":"AudioBuffer must be primary interface of buffer","status":"PASS"},{"name":"Stringification of buffer","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"sampleRate\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"length\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"duration\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"numberOfChannels\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"getChannelData(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling getChannelData(unsigned long) on buffer with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"copyFromChannel(Float32Array, unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling copyFromChannel(Float32Array, unsigned long, optional unsigned long) on buffer with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioBuffer interface: buffer must inherit property \"copyToChannel(Float32Array, unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioBuffer interface: calling copyToChannel(Float32Array, unsigned long, optional unsigned long) on buffer with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioNode interface object length","status":"PASS"},{"name":"AudioNode interface object name","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioNode interface: operation connect(AudioNode, optional unsigned long, optional unsigned long)","status":"PASS"},{"name":"AudioNode interface: operation connect(AudioParam, optional unsigned long)","status":"PASS"},{"name":"AudioNode interface: operation disconnect()","status":"PASS"},{"name":"AudioNode interface: operation disconnect(unsigned long)","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode)","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode, unsigned long)","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioNode, unsigned long, unsigned long)","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioParam)","status":"PASS"},{"name":"AudioNode interface: operation disconnect(AudioParam, unsigned long)","status":"PASS"},{"name":"AudioNode interface: attribute context","status":"PASS"},{"name":"AudioNode interface: attribute numberOfInputs","status":"PASS"},{"name":"AudioNode interface: attribute numberOfOutputs","status":"PASS"},{"name":"AudioNode interface: attribute channelCount","status":"PASS"},{"name":"AudioNode interface: attribute channelCountMode","status":"PASS"},{"name":"AudioNode interface: attribute channelInterpretation","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParam interface object length","status":"PASS"},{"name":"AudioParam interface object name","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioParam interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioParam interface: attribute value","status":"PASS"},{"name":"AudioParam interface: attribute automationRate","status":"PASS"},{"name":"AudioParam interface: attribute defaultValue","status":"PASS"},{"name":"AudioParam interface: attribute minValue","status":"PASS"},{"name":"AudioParam interface: attribute maxValue","status":"PASS"},{"name":"AudioParam interface: operation setValueAtTime(float, double)","status":"PASS"},{"name":"AudioParam interface: operation linearRampToValueAtTime(float, double)","status":"PASS"},{"name":"AudioParam interface: operation exponentialRampToValueAtTime(float, double)","status":"PASS"},{"name":"AudioParam interface: operation setTargetAtTime(float, double, float)","status":"PASS"},{"name":"AudioParam interface: operation setValueCurveAtTime(sequence<float>, double, double)","status":"PASS"},{"name":"AudioParam interface: operation cancelScheduledValues(double)","status":"PASS"},{"name":"AudioParam interface: operation cancelAndHoldAtTime(double)","status":"PASS"},{"name":"AudioParam must be primary interface of new AudioBufferSourceNode(context).playbackRate","status":"PASS"},{"name":"Stringification of new AudioBufferSourceNode(context).playbackRate","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"value\" with the proper type","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"automationRate\" with the proper type","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"defaultValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"minValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"maxValue\" with the proper type","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"setValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueAtTime(float, double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"linearRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling linearRampToValueAtTime(float, double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"exponentialRampToValueAtTime(float, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling exponentialRampToValueAtTime(float, double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"setTargetAtTime(float, double, float)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setTargetAtTime(float, double, float) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"setValueCurveAtTime(sequence<float>, double, double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling setValueCurveAtTime(sequence<float>, double, double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"cancelScheduledValues(double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling cancelScheduledValues(double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioParam interface: new AudioBufferSourceNode(context).playbackRate must inherit property \"cancelAndHoldAtTime(double)\" with the proper type","status":"PASS"},{"name":"AudioParam interface: calling cancelAndHoldAtTime(double) on new AudioBufferSourceNode(context).playbackRate with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioScheduledSourceNode interface object length","status":"PASS"},{"name":"AudioScheduledSourceNode interface object name","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioScheduledSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioScheduledSourceNode interface: attribute onended","status":"PASS"},{"name":"AudioScheduledSourceNode interface: operation start(optional double)","status":"PASS"},{"name":"AudioScheduledSourceNode interface: operation stop(optional double)","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface object","status":"PASS"},{"name":"AnalyserNode interface object length","status":"PASS"},{"name":"AnalyserNode interface object name","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AnalyserNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AnalyserNode interface: operation getFloatFrequencyData(Float32Array)","status":"PASS"},{"name":"AnalyserNode interface: operation getByteFrequencyData(Uint8Array)","status":"PASS"},{"name":"AnalyserNode interface: operation getFloatTimeDomainData(Float32Array)","status":"PASS"},{"name":"AnalyserNode interface: operation getByteTimeDomainData(Uint8Array)","status":"PASS"},{"name":"AnalyserNode interface: attribute fftSize","status":"PASS"},{"name":"AnalyserNode interface: attribute frequencyBinCount","status":"PASS"},{"name":"AnalyserNode interface: attribute minDecibels","status":"PASS"},{"name":"AnalyserNode interface: attribute maxDecibels","status":"PASS"},{"name":"AnalyserNode interface: attribute smoothingTimeConstant","status":"PASS"},{"name":"AnalyserNode must be primary interface of new AnalyserNode(context)","status":"PASS"},{"name":"Stringification of new AnalyserNode(context)","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"getFloatFrequencyData(Float32Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getFloatFrequencyData(Float32Array) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"getByteFrequencyData(Uint8Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getByteFrequencyData(Uint8Array) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"getFloatTimeDomainData(Float32Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getFloatTimeDomainData(Float32Array) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"getByteTimeDomainData(Uint8Array)\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: calling getByteTimeDomainData(Uint8Array) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"fftSize\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"frequencyBinCount\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"minDecibels\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"maxDecibels\" with the proper type","status":"PASS"},{"name":"AnalyserNode interface: new AnalyserNode(context) must inherit property \"smoothingTimeConstant\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new AnalyserNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AnalyserNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioBufferSourceNode interface object length","status":"PASS"},{"name":"AudioBufferSourceNode interface object name","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioBufferSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute buffer","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute playbackRate","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute detune","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loop","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loopStart","status":"PASS"},{"name":"AudioBufferSourceNode interface: attribute loopEnd","status":"PASS"},{"name":"AudioBufferSourceNode interface: operation start(optional double, optional double, optional double)","status":"PASS"},{"name":"AudioBufferSourceNode must be primary interface of new AudioBufferSourceNode(context)","status":"PASS"},{"name":"Stringification of new AudioBufferSourceNode(context)","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"buffer\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"playbackRate\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"loop\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"loopStart\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"loopEnd\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"start(optional double, optional double, optional double)\" with the proper type","status":"PASS"},{"name":"AudioBufferSourceNode interface: calling start(optional double, optional double, optional double) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"start(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(optional double) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new AudioBufferSourceNode(context) must inherit property \"stop(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(optional double) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new AudioBufferSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new AudioBufferSourceNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioDestinationNode interface object length","status":"PASS"},{"name":"AudioDestinationNode interface object name","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioDestinationNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioDestinationNode interface: attribute maxChannelCount","status":"PASS"},{"name":"AudioDestinationNode must be primary interface of context.destination","status":"PASS"},{"name":"Stringification of context.destination","status":"PASS"},{"name":"AudioDestinationNode interface: context.destination must inherit property \"maxChannelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on context.destination with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.destination must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface object","status":"PASS"},{"name":"AudioListener interface object length","status":"PASS"},{"name":"AudioListener interface object name","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioListener interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioListener interface: attribute positionX","status":"PASS"},{"name":"AudioListener interface: attribute positionY","status":"PASS"},{"name":"AudioListener interface: attribute positionZ","status":"PASS"},{"name":"AudioListener interface: attribute forwardX","status":"PASS"},{"name":"AudioListener interface: attribute forwardY","status":"PASS"},{"name":"AudioListener interface: attribute forwardZ","status":"PASS"},{"name":"AudioListener interface: attribute upX","status":"PASS"},{"name":"AudioListener interface: attribute upY","status":"PASS"},{"name":"AudioListener interface: attribute upZ","status":"PASS"},{"name":"AudioListener interface: operation setPosition(float, float, float)","status":"PASS"},{"name":"AudioListener interface: operation setOrientation(float, float, float, float, float, float)","status":"PASS"},{"name":"AudioListener must be primary interface of context.listener","status":"PASS"},{"name":"Stringification of context.listener","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"positionX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"positionY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"positionZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"forwardX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"forwardY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"forwardZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"upX\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"upY\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"upZ\" with the proper type","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"setPosition(float, float, float)\" with the proper type","status":"PASS"},{"name":"AudioListener interface: calling setPosition(float, float, float) on context.listener with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioListener interface: context.listener must inherit property \"setOrientation(float, float, float, float, float, float)\" with the proper type","status":"PASS"},{"name":"AudioListener interface: calling setOrientation(float, float, float, float, float, float) on context.listener with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface object","status":"PASS"},{"name":"AudioProcessingEvent interface object length","status":"PASS"},{"name":"AudioProcessingEvent interface object name","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioProcessingEvent interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute playbackTime","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute inputBuffer","status":"PASS"},{"name":"AudioProcessingEvent interface: attribute outputBuffer","status":"PASS"},{"name":"AudioProcessingEvent must be primary interface of new AudioProcessingEvent('', {\n        playbackTime: 0, inputBuffer: buffer, outputBuffer: buffer\n      })","status":"PASS"},{"name":"Stringification of new AudioProcessingEvent('', {\n        playbackTime: 0, inputBuffer: buffer, outputBuffer: buffer\n      })","status":"PASS"},{"name":"AudioProcessingEvent interface: new AudioProcessingEvent('', {\n        playbackTime: 0, inputBuffer: buffer, outputBuffer: buffer\n      }) must inherit property \"playbackTime\" with the proper type","status":"PASS"},{"name":"AudioProcessingEvent interface: new AudioProcessingEvent('', {\n        playbackTime: 0, inputBuffer: buffer, outputBuffer: buffer\n      }) must inherit property \"inputBuffer\" with the proper type","status":"PASS"},{"name":"AudioProcessingEvent interface: new AudioProcessingEvent('', {\n        playbackTime: 0, inputBuffer: buffer, outputBuffer: buffer\n      }) must inherit property \"outputBuffer\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface object","status":"PASS"},{"name":"BiquadFilterNode interface object length","status":"PASS"},{"name":"BiquadFilterNode interface object name","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"BiquadFilterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"BiquadFilterNode interface: attribute type","status":"PASS"},{"name":"BiquadFilterNode interface: attribute frequency","status":"PASS"},{"name":"BiquadFilterNode interface: attribute detune","status":"PASS"},{"name":"BiquadFilterNode interface: attribute Q","status":"PASS"},{"name":"BiquadFilterNode interface: attribute gain","status":"PASS"},{"name":"BiquadFilterNode interface: operation getFrequencyResponse(Float32Array, Float32Array, Float32Array)","status":"PASS"},{"name":"BiquadFilterNode must be primary interface of new BiquadFilterNode(context)","status":"PASS"},{"name":"Stringification of new BiquadFilterNode(context)","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"type\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"frequency\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"Q\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"gain\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: new BiquadFilterNode(context) must inherit property \"getFrequencyResponse(Float32Array, Float32Array, Float32Array)\" with the proper type","status":"PASS"},{"name":"BiquadFilterNode interface: calling getFrequencyResponse(Float32Array, Float32Array, Float32Array) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new BiquadFilterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new BiquadFilterNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface object","status":"PASS"},{"name":"ChannelMergerNode interface object length","status":"PASS"},{"name":"ChannelMergerNode interface object name","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ChannelMergerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ChannelMergerNode must be primary interface of new ChannelMergerNode(context)","status":"PASS"},{"name":"Stringification of new ChannelMergerNode(context)","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new ChannelMergerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelMergerNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface object","status":"PASS"},{"name":"ChannelSplitterNode interface object length","status":"PASS"},{"name":"ChannelSplitterNode interface object name","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ChannelSplitterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ChannelSplitterNode must be primary interface of new ChannelSplitterNode(context)","status":"PASS"},{"name":"Stringification of new ChannelSplitterNode(context)","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new ChannelSplitterNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ChannelSplitterNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"ConstantSourceNode interface object length","status":"PASS"},{"name":"ConstantSourceNode interface object name","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ConstantSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ConstantSourceNode interface: attribute offset","status":"PASS"},{"name":"ConstantSourceNode must be primary interface of new ConstantSourceNode(context)","status":"PASS"},{"name":"Stringification of new ConstantSourceNode(context)","status":"PASS"},{"name":"ConstantSourceNode interface: new ConstantSourceNode(context) must inherit property \"offset\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new ConstantSourceNode(context) must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new ConstantSourceNode(context) must inherit property \"start(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(optional double) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new ConstantSourceNode(context) must inherit property \"stop(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(optional double) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new ConstantSourceNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConstantSourceNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface object","status":"PASS"},{"name":"ConvolverNode interface object length","status":"PASS"},{"name":"ConvolverNode interface object name","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ConvolverNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ConvolverNode interface: attribute buffer","status":"PASS"},{"name":"ConvolverNode interface: attribute normalize","status":"PASS"},{"name":"ConvolverNode must be primary interface of new ConvolverNode(context)","status":"PASS"},{"name":"Stringification of new ConvolverNode(context)","status":"PASS"},{"name":"ConvolverNode interface: new ConvolverNode(context) must inherit property \"buffer\" with the proper type","status":"PASS"},{"name":"ConvolverNode interface: new ConvolverNode(context) must inherit property \"normalize\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new ConvolverNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new ConvolverNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface object","status":"PASS"},{"name":"DelayNode interface object length","status":"PASS"},{"name":"DelayNode interface object name","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DelayNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DelayNode interface: attribute delayTime","status":"PASS"},{"name":"DelayNode must be primary interface of new DelayNode(context)","status":"PASS"},{"name":"Stringification of new DelayNode(context)","status":"PASS"},{"name":"DelayNode interface: new DelayNode(context) must inherit property \"delayTime\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new DelayNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DelayNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface object","status":"PASS"},{"name":"DynamicsCompressorNode interface object length","status":"PASS"},{"name":"DynamicsCompressorNode interface object name","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"DynamicsCompressorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute threshold","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute knee","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute ratio","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute reduction","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute attack","status":"PASS"},{"name":"DynamicsCompressorNode interface: attribute release","status":"PASS"},{"name":"DynamicsCompressorNode must be primary interface of new DynamicsCompressorNode(context)","status":"PASS"},{"name":"Stringification of new DynamicsCompressorNode(context)","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"threshold\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"knee\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"ratio\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"reduction\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"attack\" with the proper type","status":"PASS"},{"name":"DynamicsCompressorNode interface: new DynamicsCompressorNode(context) must inherit property \"release\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new DynamicsCompressorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new DynamicsCompressorNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"GainNode interface: existence and properties of interface object","status":"PASS"},{"name":"GainNode interface object length","status":"PASS"},{"name":"GainNode interface object name","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"GainNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"GainNode interface: attribute gain","status":"PASS"},{"name":"GainNode must be primary interface of new GainNode(context)","status":"PASS"},{"name":"Stringification of new GainNode(context)","status":"PASS"},{"name":"GainNode interface: new GainNode(context) must inherit property \"gain\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new GainNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new GainNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface object","status":"PASS"},{"name":"IIRFilterNode interface object length","status":"PASS"},{"name":"IIRFilterNode interface object name","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"IIRFilterNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"IIRFilterNode interface: operation getFrequencyResponse(Float32Array, Float32Array, Float32Array)","status":"PASS"},{"name":"IIRFilterNode must be primary interface of new IIRFilterNode(context, {feedforward: [1], feedback: [1]})","status":"PASS"},{"name":"Stringification of new IIRFilterNode(context, {feedforward: [1], feedback: [1]})","status":"PASS"},{"name":"IIRFilterNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"getFrequencyResponse(Float32Array, Float32Array, Float32Array)\" with the proper type","status":"PASS"},{"name":"IIRFilterNode interface: calling getFrequencyResponse(Float32Array, Float32Array, Float32Array) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new IIRFilterNode(context, {feedforward: [1], feedback: [1]}) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaElementAudioSourceNode interface object length","status":"PASS"},{"name":"MediaElementAudioSourceNode interface object name","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: attribute mediaElement","status":"PASS"},{"name":"MediaElementAudioSourceNode must be primary interface of new MediaElementAudioSourceNode(context, {mediaElement: new Audio})","status":"PASS"},{"name":"Stringification of new MediaElementAudioSourceNode(context, {mediaElement: new Audio})","status":"PASS"},{"name":"MediaElementAudioSourceNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"mediaElement\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaElementAudioSourceNode(context, {mediaElement: new Audio}) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface object length","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface object name","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: attribute stream","status":"PASS"},{"name":"MediaStreamAudioDestinationNode must be primary interface of new MediaStreamAudioDestinationNode(context)","status":"PASS"},{"name":"Stringification of new MediaStreamAudioDestinationNode(context)","status":"PASS"},{"name":"MediaStreamAudioDestinationNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"stream\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new MediaStreamAudioDestinationNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new MediaStreamAudioDestinationNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface object","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface object length","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface object name","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"MediaStreamAudioSourceNode interface: attribute mediaStream","status":"PASS"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface object","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface object length","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface object name","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"MediaStreamTrackAudioSourceNode interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"OscillatorNode interface: existence and properties of interface object","status":"PASS"},{"name":"OscillatorNode interface object length","status":"PASS"},{"name":"OscillatorNode interface object name","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"OscillatorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"OscillatorNode interface: attribute type","status":"PASS"},{"name":"OscillatorNode interface: attribute frequency","status":"PASS"},{"name":"OscillatorNode interface: attribute detune","status":"PASS"},{"name":"OscillatorNode interface: operation setPeriodicWave(PeriodicWave)","status":"PASS"},{"name":"OscillatorNode must be primary interface of new OscillatorNode(context)","status":"PASS"},{"name":"Stringification of new OscillatorNode(context)","status":"PASS"},{"name":"OscillatorNode interface: new OscillatorNode(context) must inherit property \"type\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: new OscillatorNode(context) must inherit property \"frequency\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: new OscillatorNode(context) must inherit property \"detune\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: new OscillatorNode(context) must inherit property \"setPeriodicWave(PeriodicWave)\" with the proper type","status":"PASS"},{"name":"OscillatorNode interface: calling setPeriodicWave(PeriodicWave) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new OscillatorNode(context) must inherit property \"onended\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new OscillatorNode(context) must inherit property \"start(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling start(optional double) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioScheduledSourceNode interface: new OscillatorNode(context) must inherit property \"stop(optional double)\" with the proper type","status":"PASS"},{"name":"AudioScheduledSourceNode interface: calling stop(optional double) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new OscillatorNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new OscillatorNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface object","status":"PASS"},{"name":"PannerNode interface object length","status":"PASS"},{"name":"PannerNode interface object name","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"PannerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"PannerNode interface: attribute panningModel","status":"PASS"},{"name":"PannerNode interface: attribute positionX","status":"PASS"},{"name":"PannerNode interface: attribute positionY","status":"PASS"},{"name":"PannerNode interface: attribute positionZ","status":"PASS"},{"name":"PannerNode interface: attribute orientationX","status":"PASS"},{"name":"PannerNode interface: attribute orientationY","status":"PASS"},{"name":"PannerNode interface: attribute orientationZ","status":"PASS"},{"name":"PannerNode interface: attribute distanceModel","status":"PASS"},{"name":"PannerNode interface: attribute refDistance","status":"PASS"},{"name":"PannerNode interface: attribute maxDistance","status":"PASS"},{"name":"PannerNode interface: attribute rolloffFactor","status":"PASS"},{"name":"PannerNode interface: attribute coneInnerAngle","status":"PASS"},{"name":"PannerNode interface: attribute coneOuterAngle","status":"PASS"},{"name":"PannerNode interface: attribute coneOuterGain","status":"PASS"},{"name":"PannerNode interface: operation setPosition(float, float, float)","status":"PASS"},{"name":"PannerNode interface: operation setOrientation(float, float, float)","status":"PASS"},{"name":"PannerNode must be primary interface of new PannerNode(context)","status":"PASS"},{"name":"Stringification of new PannerNode(context)","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"panningModel\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"positionX\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"positionY\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"positionZ\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"orientationX\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"orientationY\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"orientationZ\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"distanceModel\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"refDistance\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"maxDistance\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"rolloffFactor\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"coneInnerAngle\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"coneOuterAngle\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"coneOuterGain\" with the proper type","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"setPosition(float, float, float)\" with the proper type","status":"PASS"},{"name":"PannerNode interface: calling setPosition(float, float, float) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"PannerNode interface: new PannerNode(context) must inherit property \"setOrientation(float, float, float)\" with the proper type","status":"PASS"},{"name":"PannerNode interface: calling setOrientation(float, float, float) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new PannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new PannerNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface object","status":"PASS"},{"name":"PeriodicWave interface object length","status":"PASS"},{"name":"PeriodicWave interface object name","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"PeriodicWave interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"PeriodicWave must be primary interface of new PeriodicWave(context)","status":"PASS"},{"name":"Stringification of new PeriodicWave(context)","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface object","status":"PASS"},{"name":"ScriptProcessorNode interface object length","status":"PASS"},{"name":"ScriptProcessorNode interface object name","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ScriptProcessorNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ScriptProcessorNode interface: attribute onaudioprocess","status":"PASS"},{"name":"ScriptProcessorNode interface: attribute bufferSize","status":"PASS"},{"name":"ScriptProcessorNode must be primary interface of context.createScriptProcessor()","status":"PASS"},{"name":"Stringification of context.createScriptProcessor()","status":"PASS"},{"name":"ScriptProcessorNode interface: context.createScriptProcessor() must inherit property \"onaudioprocess\" with the proper type","status":"PASS"},{"name":"ScriptProcessorNode interface: context.createScriptProcessor() must inherit property \"bufferSize\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on context.createScriptProcessor() with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: context.createScriptProcessor() must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface object","status":"PASS"},{"name":"StereoPannerNode interface object length","status":"PASS"},{"name":"StereoPannerNode interface object name","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"StereoPannerNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"StereoPannerNode interface: attribute pan","status":"PASS"},{"name":"StereoPannerNode must be primary interface of new StereoPannerNode(context)","status":"PASS"},{"name":"Stringification of new StereoPannerNode(context)","status":"PASS"},{"name":"StereoPannerNode interface: new StereoPannerNode(context) must inherit property \"pan\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new StereoPannerNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new StereoPannerNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface object","status":"PASS"},{"name":"WaveShaperNode interface object length","status":"PASS"},{"name":"WaveShaperNode interface object name","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WaveShaperNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WaveShaperNode interface: attribute curve","status":"PASS"},{"name":"WaveShaperNode interface: attribute oversample","status":"PASS"},{"name":"WaveShaperNode must be primary interface of new WaveShaperNode(context)","status":"PASS"},{"name":"Stringification of new WaveShaperNode(context)","status":"PASS"},{"name":"WaveShaperNode interface: new WaveShaperNode(context) must inherit property \"curve\" with the proper type","status":"PASS"},{"name":"WaveShaperNode interface: new WaveShaperNode(context) must inherit property \"oversample\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on new WaveShaperNode(context) with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: new WaveShaperNode(context) must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface object","status":"PASS"},{"name":"AudioWorklet interface object length","status":"PASS"},{"name":"AudioWorklet interface object name","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioWorklet interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioWorklet must be primary interface of context.audioWorklet","status":"PASS"},{"name":"Stringification of context.audioWorklet","status":"PASS"},{"name":"AudioWorkletGlobalScope interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface object","status":"PASS"},{"name":"AudioParamMap interface object length","status":"PASS"},{"name":"AudioParamMap interface object name","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioParamMap interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioParamMap must be primary interface of worklet_node.parameters","status":"PASS"},{"name":"Stringification of worklet_node.parameters","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface object","status":"PASS"},{"name":"AudioWorkletNode interface object length","status":"PASS"},{"name":"AudioWorkletNode interface object name","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"AudioWorkletNode interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"AudioWorkletNode interface: attribute parameters","status":"PASS"},{"name":"AudioWorkletNode interface: attribute port","status":"PASS"},{"name":"AudioWorkletNode interface: attribute onprocessorerror","status":"PASS"},{"name":"AudioWorkletNode must be primary interface of worklet_node","status":"PASS"},{"name":"Stringification of worklet_node","status":"PASS"},{"name":"AudioWorkletNode interface: worklet_node must inherit property \"parameters\" with the proper type","status":"PASS"},{"name":"AudioWorkletNode interface: worklet_node must inherit property \"port\" with the proper type","status":"PASS"},{"name":"AudioWorkletNode interface: worklet_node must inherit property \"onprocessorerror\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"connect(AudioNode, optional unsigned long, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioNode, optional unsigned long, optional unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"connect(AudioParam, optional unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling connect(AudioParam, optional unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect()\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(AudioNode)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(AudioNode, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(AudioNode, unsigned long, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioNode, unsigned long, unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(AudioParam)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"disconnect(AudioParam, unsigned long)\" with the proper type","status":"PASS"},{"name":"AudioNode interface: calling disconnect(AudioParam, unsigned long) on worklet_node with too few arguments must throw TypeError","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"context\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"numberOfInputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"numberOfOutputs\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"channelCount\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"channelCountMode\" with the proper type","status":"PASS"},{"name":"AudioNode interface: worklet_node must inherit property \"channelInterpretation\" with the proper type","status":"PASS"},{"name":"AudioWorkletProcessor interface: existence and properties of interface object","status":"PASS"}]}