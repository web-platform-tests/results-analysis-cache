{"status":"OK","subtests":[{"name":"getIdentityAssertion() should load IdP proxy and return assertion generated","status":"FAIL"},{"name":"getIdentityAssertion() should succeed if mock-idp.js return different domain and protocol in assertion","status":"FAIL"},{"name":"getIdentityAssertion() should reject with RTCError('idp-execution-failure') if mock-idp.js throws error","status":"FAIL"},{"name":"getIdentityAssertion() should reject with RTCError('idp-bad-script-failure') if IdP proxy script do not register its callback","status":"FAIL"},{"name":"getIdentityAssertion() should reject with OperationError if mock-idp.js return invalid result","status":"FAIL"},{"name":"getIdentityAssertion() should reject with RTCError('idp-load-failure') if IdP cannot be loaded","status":"FAIL"},{"name":"getIdentityAssertion() should reject with RTCError('idp-need-login') when mock-idp.js requires login","status":"FAIL"},{"name":"setIdentityProvider() with no peerIdentity provided should use peerIdentity value from getConfiguration()","status":"FAIL"},{"name":"Calling setIdentityProvider() multiple times should reset identity assertions","status":"FAIL"},{"name":"createOffer() should return SDP containing identity assertion string if identity provider is set","status":"FAIL"},{"name":"createOffer() should reject with OperationError if identity assertion request fails","status":"FAIL"},{"name":"createAnswer() should reject with OperationError if identity assertion request fails","status":"FAIL"}]}