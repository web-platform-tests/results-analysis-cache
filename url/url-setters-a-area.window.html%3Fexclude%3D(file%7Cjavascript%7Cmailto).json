{"status":"OK","subtests":[{"name":"Loading data…","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = '' The empty string is not a valid scheme. Setter leaves the URL unchanged.","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'b'","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'b'","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'B' Upper-case ASCII is lower-cased","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'B' Upper-case ASCII is lower-cased","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'é' Non-ASCII is rejected","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'é' Non-ASCII is rejected","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = '0b' No leading digit","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = '0b' No leading digit","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = '+b' No leading punctuation","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = '+b' No leading punctuation","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'bC0+-.'","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'bC0+-.'","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'b,c' Only some punctuation is acceptable","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'b,c' Only some punctuation is acceptable","status":"PASS"},{"name":"<a>: Setting <a://example.net>.protocol = 'bé' Non-ASCII is rejected","status":"PASS"},{"name":"<area>: Setting <a://example.net>.protocol = 'bé' Non-ASCII is rejected","status":"PASS"},{"name":"<a>: Setting <http://test@example.net>.protocol = 'file' Can’t switch from URL containing username/password/port to file","status":"PASS"},{"name":"<area>: Setting <http://test@example.net>.protocol = 'file' Can’t switch from URL containing username/password/port to file","status":"PASS"},{"name":"<a>: Setting <https://example.net:1234>.protocol = 'file'","status":"PASS"},{"name":"<area>: Setting <https://example.net:1234>.protocol = 'file'","status":"PASS"},{"name":"<a>: Setting <wss://x:x@example.net:1234>.protocol = 'file'","status":"PASS"},{"name":"<area>: Setting <wss://x:x@example.net:1234>.protocol = 'file'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.protocol = 'b' Can’t switch from special scheme to non-special","status":"FAIL"},{"name":"<area>: Setting <http://example.net>.protocol = 'b' Can’t switch from special scheme to non-special","status":"FAIL"},{"name":"<a>: Setting <https://example.net>.protocol = 's'","status":"FAIL"},{"name":"<area>: Setting <https://example.net>.protocol = 's'","status":"FAIL"},{"name":"<a>: Setting <ftp://example.net>.protocol = 'test'","status":"FAIL"},{"name":"<area>: Setting <ftp://example.net>.protocol = 'test'","status":"FAIL"},{"name":"<a>: Setting <ssh://me@example.net>.protocol = 'http' Can’t switch from non-special scheme to special","status":"FAIL"},{"name":"<area>: Setting <ssh://me@example.net>.protocol = 'http' Can’t switch from non-special scheme to special","status":"FAIL"},{"name":"<a>: Setting <ssh://me@example.net>.protocol = 'https'","status":"FAIL"},{"name":"<area>: Setting <ssh://me@example.net>.protocol = 'https'","status":"FAIL"},{"name":"<a>: Setting <ssh://me@example.net>.protocol = 'file'","status":"FAIL"},{"name":"<area>: Setting <ssh://me@example.net>.protocol = 'file'","status":"FAIL"},{"name":"<a>: Setting <ssh://example.net>.protocol = 'file'","status":"FAIL"},{"name":"<area>: Setting <ssh://example.net>.protocol = 'file'","status":"FAIL"},{"name":"<a>: Setting <nonsense:///test>.protocol = 'https'","status":"FAIL"},{"name":"<area>: Setting <nonsense:///test>.protocol = 'https'","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.protocol = 'https:foo : bar' Stuff after the first ':' is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net>.protocol = 'https:foo : bar' Stuff after the first ':' is ignored","status":"PASS"},{"name":"<a>: Setting <data:text/html,<p>Test>.protocol = 'view-source+data:foo : bar' Stuff after the first ':' is ignored","status":"PASS"},{"name":"<area>: Setting <data:text/html,<p>Test>.protocol = 'view-source+data:foo : bar' Stuff after the first ':' is ignored","status":"PASS"},{"name":"<a>: Setting <http://foo.com:443/>.protocol = 'https' Port is set to null if it is the default for new scheme.","status":"PASS"},{"name":"<area>: Setting <http://foo.com:443/>.protocol = 'https' Port is set to null if it is the default for new scheme.","status":"PASS"},{"name":"<a>: Setting <unix:/run/foo.socket>.username = 'me' No host means no username","status":"PASS"},{"name":"<area>: Setting <unix:/run/foo.socket>.username = 'me' No host means no username","status":"PASS"},{"name":"<a>: Setting <http://example.net>.username = 'me'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.username = 'me'","status":"PASS"},{"name":"<a>: Setting <http://:secret@example.net>.username = 'me'","status":"PASS"},{"name":"<area>: Setting <http://:secret@example.net>.username = 'me'","status":"PASS"},{"name":"<a>: Setting <http://me@example.net>.username = ''","status":"PASS"},{"name":"<area>: Setting <http://me@example.net>.username = ''","status":"PASS"},{"name":"<a>: Setting <http://me:secret@example.net>.username = ''","status":"PASS"},{"name":"<area>: Setting <http://me:secret@example.net>.username = ''","status":"PASS"},{"name":"<a>: Setting <http://example.net>.username = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the userinfo encode set.","status":"FAIL"},{"name":"<area>: Setting <http://example.net>.username = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the userinfo encode set.","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.username = '%c3%89té' Bytes already percent-encoded are left as-is.","status":"PASS"},{"name":"<area>: Setting <http://example.net>.username = '%c3%89té' Bytes already percent-encoded are left as-is.","status":"PASS"},{"name":"<a>: Setting <sc:///>.username = 'x'","status":"PASS"},{"name":"<area>: Setting <sc:///>.username = 'x'","status":"PASS"},{"name":"<a>: Setting <unix:/run/foo.socket>.password = 'secret' No host means no password","status":"PASS"},{"name":"<area>: Setting <unix:/run/foo.socket>.password = 'secret' No host means no password","status":"PASS"},{"name":"<a>: Setting <http://example.net>.password = 'secret'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.password = 'secret'","status":"PASS"},{"name":"<a>: Setting <http://me@example.net>.password = 'secret'","status":"PASS"},{"name":"<area>: Setting <http://me@example.net>.password = 'secret'","status":"PASS"},{"name":"<a>: Setting <http://:secret@example.net>.password = ''","status":"PASS"},{"name":"<area>: Setting <http://:secret@example.net>.password = ''","status":"PASS"},{"name":"<a>: Setting <http://me:secret@example.net>.password = ''","status":"PASS"},{"name":"<area>: Setting <http://me:secret@example.net>.password = ''","status":"PASS"},{"name":"<a>: Setting <http://example.net>.password = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the userinfo encode set.","status":"FAIL"},{"name":"<area>: Setting <http://example.net>.password = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the userinfo encode set.","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.password = '%c3%89té' Bytes already percent-encoded are left as-is.","status":"PASS"},{"name":"<area>: Setting <http://example.net>.password = '%c3%89té' Bytes already percent-encoded are left as-is.","status":"PASS"},{"name":"<a>: Setting <sc:///>.password = 'x'","status":"PASS"},{"name":"<area>: Setting <sc:///>.password = 'x'","status":"PASS"},{"name":"<a>: Setting <sc://x/>.host = '\u0000' Non-special scheme","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '\u0000' Non-special scheme","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '\t'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '\t'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '\n'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '\n'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '\r'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '\r'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = ' '","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = ' '","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '#'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '#'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '/'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '/'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '?'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '?'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = '@'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = '@'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.host = 'ß'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.host = 'ß'","status":"FAIL"},{"name":"<a>: Setting <https://x/>.host = 'ß' IDNA Nontransitional_Processing","status":"FAIL"},{"name":"<area>: Setting <https://x/>.host = 'ß' IDNA Nontransitional_Processing","status":"FAIL"},{"name":"<a>: Setting <data:text/plain,Stuff>.host = 'example.net' Cannot-be-a-base means no host","status":"PASS"},{"name":"<area>: Setting <data:text/plain,Stuff>.host = 'example.net' Cannot-be-a-base means no host","status":"PASS"},{"name":"<a>: Setting <http://example.net>.host = 'example.com:8080'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = 'example.com:8080'","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.host = 'example.com' Port number is unchanged if not specified in the new value","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.host = 'example.com' Port number is unchanged if not specified in the new value","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.host = 'example.com:' Port number is unchanged if not specified","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.host = 'example.com:' Port number is unchanged if not specified","status":"PASS"},{"name":"<a>: Setting <http://example.net>.host = '' The empty host is not valid for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = '' The empty host is not valid for special schemes","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/foo>.host = '' The empty host is OK for non-special schemes","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/foo>.host = '' The empty host is OK for non-special schemes","status":"FAIL"},{"name":"<a>: Setting <a:/foo>.host = 'example.net' Path-only URLs can gain a host","status":"FAIL"},{"name":"<area>: Setting <a:/foo>.host = 'example.net' Path-only URLs can gain a host","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.host = '0x7F000001:8080' IPv4 address syntax is normalized","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = '0x7F000001:8080' IPv4 address syntax is normalized","status":"PASS"},{"name":"<a>: Setting <http://example.net>.host = '[::0:01]:2' IPv6 address syntax is normalized","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = '[::0:01]:2' IPv6 address syntax is normalized","status":"PASS"},{"name":"<a>: Setting <http://example.net>.host = '[2001:db8::2]:4002' IPv6 literal address with port, crbug.com/1012416","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = '[2001:db8::2]:4002' IPv6 literal address with port, crbug.com/1012416","status":"PASS"},{"name":"<a>: Setting <http://example.net>.host = 'example.com:80' Default port number is removed","status":"PASS"},{"name":"<area>: Setting <http://example.net>.host = 'example.com:80' Default port number is removed","status":"PASS"},{"name":"<a>: Setting <https://example.net>.host = 'example.com:443' Default port number is removed","status":"PASS"},{"name":"<area>: Setting <https://example.net>.host = 'example.com:443' Default port number is removed","status":"PASS"},{"name":"<a>: Setting <https://example.net>.host = 'example.com:80' Default port number is only removed for the relevant scheme","status":"PASS"},{"name":"<area>: Setting <https://example.net>.host = 'example.com:80' Default port number is only removed for the relevant scheme","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.host = 'example.com:80' Port number is removed if new port is scheme default and existing URL has a non-default port","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.host = 'example.com:80' Port number is removed if new port is scheme default and existing URL has a non-default port","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/path>.host = 'example.com\\stuff' \\ is not a delimiter for non-special schemes, but still forbidden in hosts","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/path>.host = 'example.com\\stuff' \\ is not a delimiter for non-special schemes, but still forbidden in hosts","status":"FAIL"},{"name":"<a>: Setting <view-source+http://example.net/path>.host = 'example.com:8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/path>.host = 'example.com:8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"FAIL"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:8080+2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:8080+2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:65535' Port numbers are 16 bit integers","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:65535' Port numbers are 16 bit integers","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.host = 'example.com:65536' Port numbers are 16 bit integers, overflowing is an error. Hostname is still set, though.","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.host = 'example.com:65536' Port numbers are 16 bit integers, overflowing is an error. Hostname is still set, though.","status":"PASS"},{"name":"<a>: Setting <http://example.net/>.host = '[google.com]' Broken IPv6","status":"PASS"},{"name":"<area>: Setting <http://example.net/>.host = '[google.com]' Broken IPv6","status":"PASS"},{"name":"<a>: Setting <http://example.net/>.host = '[::1.2.3.4x]'","status":"PASS"},{"name":"<area>: Setting <http://example.net/>.host = '[::1.2.3.4x]'","status":"PASS"},{"name":"<a>: Setting <http://example.net/>.host = '[::1.2.3.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.host = '[::1.2.3.]'","status":"FAIL"},{"name":"<a>: Setting <http://example.net/>.host = '[::1.2.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.host = '[::1.2.]'","status":"FAIL"},{"name":"<a>: Setting <http://example.net/>.host = '[::1.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.host = '[::1.]'","status":"FAIL"},{"name":"<a>: Setting <sc://test@test/>.host = ''","status":"FAIL"},{"name":"<area>: Setting <sc://test@test/>.host = ''","status":"FAIL"},{"name":"<a>: Setting <sc://test:12/>.host = ''","status":"FAIL"},{"name":"<area>: Setting <sc://test:12/>.host = ''","status":"FAIL"},{"name":"<a>: Setting <http://example.com/>.host = '///bad.com' Leading / is not stripped","status":"PASS"},{"name":"<area>: Setting <http://example.com/>.host = '///bad.com' Leading / is not stripped","status":"PASS"},{"name":"<a>: Setting <sc://example.com/>.host = '///bad.com' Leading / is not stripped","status":"FAIL"},{"name":"<area>: Setting <sc://example.com/>.host = '///bad.com' Leading / is not stripped","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '\u0000' Non-special scheme","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '\u0000' Non-special scheme","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '\t'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '\t'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '\n'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '\n'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '\r'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '\r'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = ' '","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = ' '","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '#'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '#'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '/'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '/'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '?'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '?'","status":"FAIL"},{"name":"<a>: Setting <sc://x/>.hostname = '@'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.hostname = '@'","status":"FAIL"},{"name":"<a>: Setting <data:text/plain,Stuff>.hostname = 'example.net' Cannot-be-a-base means no host","status":"PASS"},{"name":"<area>: Setting <data:text/plain,Stuff>.hostname = 'example.net' Cannot-be-a-base means no host","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.hostname = 'example.com'","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.hostname = 'example.com'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hostname = '' The empty host is not valid for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hostname = '' The empty host is not valid for special schemes","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/foo>.hostname = '' The empty host is OK for non-special schemes","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/foo>.hostname = '' The empty host is OK for non-special schemes","status":"FAIL"},{"name":"<a>: Setting <a:/foo>.hostname = 'example.net' Path-only URLs can gain a host","status":"FAIL"},{"name":"<area>: Setting <a:/foo>.hostname = 'example.net' Path-only URLs can gain a host","status":"FAIL"},{"name":"<a>: Setting <http://example.net:8080>.hostname = '0x7F000001' IPv4 address syntax is normalized","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.hostname = '0x7F000001' IPv4 address syntax is normalized","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hostname = '[::0:01]' IPv6 address syntax is normalized","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hostname = '[::0:01]' IPv6 address syntax is normalized","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.hostname = 'example.com:8080' : delimiter invalidates entire value","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.hostname = 'example.com:8080' : delimiter invalidates entire value","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080/path>.hostname = 'example.com:' : delimiter invalidates entire value","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080/path>.hostname = 'example.com:' : delimiter invalidates entire value","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.hostname = 'example.com/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.hostname = 'example.com/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.hostname = 'example.com?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.hostname = 'example.com?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.hostname = 'example.com#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.hostname = 'example.com#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.hostname = 'example.com\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.hostname = 'example.com\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/path>.hostname = 'example.com\\stuff' \\ is not a delimiter for non-special schemes, but still forbidden in hosts","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/path>.hostname = 'example.com\\stuff' \\ is not a delimiter for non-special schemes, but still forbidden in hosts","status":"FAIL"},{"name":"<a>: Setting <http://example.net/>.hostname = '[google.com]' Broken IPv6","status":"PASS"},{"name":"<area>: Setting <http://example.net/>.hostname = '[google.com]' Broken IPv6","status":"PASS"},{"name":"<a>: Setting <http://example.net/>.hostname = '[::1.2.3.4x]'","status":"PASS"},{"name":"<area>: Setting <http://example.net/>.hostname = '[::1.2.3.4x]'","status":"PASS"},{"name":"<a>: Setting <http://example.net/>.hostname = '[::1.2.3.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.hostname = '[::1.2.3.]'","status":"FAIL"},{"name":"<a>: Setting <http://example.net/>.hostname = '[::1.2.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.hostname = '[::1.2.]'","status":"FAIL"},{"name":"<a>: Setting <http://example.net/>.hostname = '[::1.]'","status":"FAIL"},{"name":"<area>: Setting <http://example.net/>.hostname = '[::1.]'","status":"FAIL"},{"name":"<a>: Setting <sc://test@test/>.hostname = ''","status":"FAIL"},{"name":"<area>: Setting <sc://test@test/>.hostname = ''","status":"FAIL"},{"name":"<a>: Setting <sc://test:12/>.hostname = ''","status":"FAIL"},{"name":"<area>: Setting <sc://test:12/>.hostname = ''","status":"FAIL"},{"name":"<a>: Setting <non-spec:/.//p>.hostname = 'h' Drop /. from path","status":"FAIL"},{"name":"<area>: Setting <non-spec:/.//p>.hostname = 'h' Drop /. from path","status":"FAIL"},{"name":"<a>: Setting <non-spec:/.//p>.hostname = ''","status":"FAIL"},{"name":"<area>: Setting <non-spec:/.//p>.hostname = ''","status":"FAIL"},{"name":"<a>: Setting <http://example.com/>.hostname = '///bad.com' Leading / is not stripped","status":"PASS"},{"name":"<area>: Setting <http://example.com/>.hostname = '///bad.com' Leading / is not stripped","status":"PASS"},{"name":"<a>: Setting <sc://example.com/>.hostname = '///bad.com' Leading / is not stripped","status":"FAIL"},{"name":"<area>: Setting <sc://example.com/>.hostname = '///bad.com' Leading / is not stripped","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.port = '8080'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.port = '8080'","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.port = '' Port number is removed if empty is the new value","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.port = '' Port number is removed if empty is the new value","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080>.port = '80' Default port number is removed","status":"PASS"},{"name":"<area>: Setting <http://example.net:8080>.port = '80' Default port number is removed","status":"PASS"},{"name":"<a>: Setting <https://example.net:4433>.port = '443' Default port number is removed","status":"PASS"},{"name":"<area>: Setting <https://example.net:4433>.port = '443' Default port number is removed","status":"PASS"},{"name":"<a>: Setting <https://example.net>.port = '80' Default port number is only removed for the relevant scheme","status":"PASS"},{"name":"<area>: Setting <https://example.net>.port = '80' Default port number is only removed for the relevant scheme","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '8080/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080/stuff' Stuff after a / delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '8080?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080?stuff' Stuff after a ? delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '8080#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080#stuff' Stuff after a # delimiter is ignored","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '8080\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080\\stuff' Stuff after a \\ delimiter is ignored for special schemes","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/path>.port = '8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/path>.port = '8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"FAIL"},{"name":"<a>: Setting <http://example.net/path>.port = '8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080stuff2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '8080+2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '8080+2' Anything other than ASCII digit stops the port parser in a setter but is not an error","status":"PASS"},{"name":"<a>: Setting <http://example.net/path>.port = '65535' Port numbers are 16 bit integers","status":"PASS"},{"name":"<area>: Setting <http://example.net/path>.port = '65535' Port numbers are 16 bit integers","status":"PASS"},{"name":"<a>: Setting <http://example.net:8080/path>.port = '65536' Port numbers are 16 bit integers, overflowing is an error","status":"FAIL"},{"name":"<area>: Setting <http://example.net:8080/path>.port = '65536' Port numbers are 16 bit integers, overflowing is an error","status":"FAIL"},{"name":"<a>: Setting <non-special://example.net:8080/path>.port = '65536' Port numbers are 16 bit integers, overflowing is an error","status":"FAIL"},{"name":"<area>: Setting <non-special://example.net:8080/path>.port = '65536' Port numbers are 16 bit integers, overflowing is an error","status":"FAIL"},{"name":"<a>: Setting <non-base:value>.port = '12'","status":"PASS"},{"name":"<area>: Setting <non-base:value>.port = '12'","status":"PASS"},{"name":"<a>: Setting <sc:///>.port = '12'","status":"PASS"},{"name":"<area>: Setting <sc:///>.port = '12'","status":"PASS"},{"name":"<a>: Setting <sc://x/>.port = '12'","status":"FAIL"},{"name":"<area>: Setting <sc://x/>.port = '12'","status":"FAIL"},{"name":"<a>: Setting <data:original>.pathname = 'new value'","status":"PASS"},{"name":"<area>: Setting <data:original>.pathname = 'new value'","status":"PASS"},{"name":"<a>: Setting <sc:original>.pathname = 'new value'","status":"PASS"},{"name":"<area>: Setting <sc:original>.pathname = 'new value'","status":"PASS"},{"name":"<a>: Setting <foo://somehost/some/path>.pathname = '' Non-special URLs can have their paths erased","status":"FAIL"},{"name":"<area>: Setting <foo://somehost/some/path>.pathname = '' Non-special URLs can have their paths erased","status":"FAIL"},{"name":"<a>: Setting <foo:///some/path>.pathname = '' Non-special URLs with an empty host can have their paths erased","status":"FAIL"},{"name":"<area>: Setting <foo:///some/path>.pathname = '' Non-special URLs with an empty host can have their paths erased","status":"FAIL"},{"name":"<a>: Setting <foo:/some/path>.pathname = '' Path-only URLs cannot have their paths erased","status":"FAIL"},{"name":"<area>: Setting <foo:/some/path>.pathname = '' Path-only URLs cannot have their paths erased","status":"FAIL"},{"name":"<a>: Setting <foo:/some/path>.pathname = 'test' Path-only URLs always have an initial slash","status":"FAIL"},{"name":"<area>: Setting <foo:/some/path>.pathname = 'test' Path-only URLs always have an initial slash","status":"FAIL"},{"name":"<a>: Setting <unix:/run/foo.socket?timeout=10>.pathname = '/var/log/../run/bar.socket'","status":"FAIL"},{"name":"<area>: Setting <unix:/run/foo.socket?timeout=10>.pathname = '/var/log/../run/bar.socket'","status":"FAIL"},{"name":"<a>: Setting <https://example.net#nav>.pathname = 'home'","status":"PASS"},{"name":"<area>: Setting <https://example.net#nav>.pathname = 'home'","status":"PASS"},{"name":"<a>: Setting <https://example.net#nav>.pathname = '../home'","status":"PASS"},{"name":"<area>: Setting <https://example.net#nav>.pathname = '../home'","status":"PASS"},{"name":"<a>: Setting <http://example.net/home?lang=fr#nav>.pathname = '\\a\\%2E\\b\\%2e.\\c' \\ is a segment delimiter for 'special' URLs","status":"PASS"},{"name":"<area>: Setting <http://example.net/home?lang=fr#nav>.pathname = '\\a\\%2E\\b\\%2e.\\c' \\ is a segment delimiter for 'special' URLs","status":"PASS"},{"name":"<a>: Setting <view-source+http://example.net/home?lang=fr#nav>.pathname = '\\a\\%2E\\b\\%2e.\\c' \\ is *not* a segment delimiter for non-'special' URLs","status":"FAIL"},{"name":"<area>: Setting <view-source+http://example.net/home?lang=fr#nav>.pathname = '\\a\\%2E\\b\\%2e.\\c' \\ is *not* a segment delimiter for non-'special' URLs","status":"FAIL"},{"name":"<a>: Setting <a:/>.pathname = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the default encode set. Tabs and newlines are removed.","status":"FAIL"},{"name":"<area>: Setting <a:/>.pathname = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the default encode set. Tabs and newlines are removed.","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.pathname = '%2e%2E%c3%89té' Bytes already percent-encoded are left as-is, including %2E outside dotted segments.","status":"FAIL"},{"name":"<area>: Setting <http://example.net>.pathname = '%2e%2E%c3%89té' Bytes already percent-encoded are left as-is, including %2E outside dotted segments.","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.pathname = '?' ? needs to be encoded","status":"PASS"},{"name":"<area>: Setting <http://example.net>.pathname = '?' ? needs to be encoded","status":"PASS"},{"name":"<a>: Setting <http://example.net>.pathname = '#' # needs to be encoded","status":"PASS"},{"name":"<area>: Setting <http://example.net>.pathname = '#' # needs to be encoded","status":"PASS"},{"name":"<a>: Setting <sc://example.net>.pathname = '?' ? needs to be encoded, non-special scheme","status":"FAIL"},{"name":"<area>: Setting <sc://example.net>.pathname = '?' ? needs to be encoded, non-special scheme","status":"FAIL"},{"name":"<a>: Setting <sc://example.net>.pathname = '#' # needs to be encoded, non-special scheme","status":"FAIL"},{"name":"<area>: Setting <sc://example.net>.pathname = '#' # needs to be encoded, non-special scheme","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.pathname = '/?é' ? doesn't mess up encoding","status":"PASS"},{"name":"<area>: Setting <http://example.net>.pathname = '/?é' ? doesn't mess up encoding","status":"PASS"},{"name":"<a>: Setting <http://example.net>.pathname = '/#é' # doesn't mess up encoding","status":"PASS"},{"name":"<area>: Setting <http://example.net>.pathname = '/#é' # doesn't mess up encoding","status":"PASS"},{"name":"<a>: Setting <non-spec:/>.pathname = '/.//p' Serialize /. in path","status":"FAIL"},{"name":"<area>: Setting <non-spec:/>.pathname = '/.//p' Serialize /. in path","status":"FAIL"},{"name":"<a>: Setting <non-spec:/>.pathname = '/..//p'","status":"FAIL"},{"name":"<area>: Setting <non-spec:/>.pathname = '/..//p'","status":"FAIL"},{"name":"<a>: Setting <non-spec:/>.pathname = '//p'","status":"FAIL"},{"name":"<area>: Setting <non-spec:/>.pathname = '//p'","status":"FAIL"},{"name":"<a>: Setting <non-spec:/.//>.pathname = 'p' Drop /. from path","status":"FAIL"},{"name":"<area>: Setting <non-spec:/.//>.pathname = 'p' Drop /. from path","status":"FAIL"},{"name":"<a>: Setting <data:/nospace>.pathname = 'space ' Non-special URLs with non-opaque paths percent-encode U+0020","status":"FAIL"},{"name":"<area>: Setting <data:/nospace>.pathname = 'space ' Non-special URLs with non-opaque paths percent-encode U+0020","status":"FAIL"},{"name":"<a>: Setting <sc:/nospace>.pathname = 'space '","status":"FAIL"},{"name":"<area>: Setting <sc:/nospace>.pathname = 'space '","status":"FAIL"},{"name":"<a>: Setting <https://example.net#nav>.search = 'lang=fr'","status":"PASS"},{"name":"<area>: Setting <https://example.net#nav>.search = 'lang=fr'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.search = 'lang=fr'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.search = 'lang=fr'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.search = '?lang=fr'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.search = '?lang=fr'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.search = '??lang=fr'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.search = '??lang=fr'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.search = '?'","status":"FAIL"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.search = '?'","status":"FAIL"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.search = ''","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.search = ''","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US>.search = ''","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US>.search = ''","status":"PASS"},{"name":"<a>: Setting <https://example.net>.search = ''","status":"PASS"},{"name":"<area>: Setting <https://example.net>.search = ''","status":"PASS"},{"name":"<a>: Setting <a:/>.search = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the query encode set. Tabs and newlines are removed.","status":"FAIL"},{"name":"<area>: Setting <a:/>.search = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' UTF-8 percent encoding with the query encode set. Tabs and newlines are removed.","status":"FAIL"},{"name":"<a>: Setting <http://example.net>.search = '%c3%89té' Bytes already percent-encoded are left as-is","status":"PASS"},{"name":"<area>: Setting <http://example.net>.search = '%c3%89té' Bytes already percent-encoded are left as-is","status":"PASS"},{"name":"<a>: Setting <data:space ?query>.search = '' Drop trailing spaces from trailing opaque paths","status":"PASS"},{"name":"<area>: Setting <data:space ?query>.search = '' Drop trailing spaces from trailing opaque paths","status":"PASS"},{"name":"<a>: Setting <sc:space ?query>.search = ''","status":"PASS"},{"name":"<area>: Setting <sc:space ?query>.search = ''","status":"PASS"},{"name":"<a>: Setting <data:space  ?query#fragment>.search = '' Do not drop trailing spaces from non-trailing opaque paths","status":"PASS"},{"name":"<area>: Setting <data:space  ?query#fragment>.search = '' Do not drop trailing spaces from non-trailing opaque paths","status":"PASS"},{"name":"<a>: Setting <sc:space  ?query#fragment>.search = ''","status":"PASS"},{"name":"<area>: Setting <sc:space  ?query#fragment>.search = ''","status":"PASS"},{"name":"<a>: Setting <https://example.net>.hash = 'main'","status":"PASS"},{"name":"<area>: Setting <https://example.net>.hash = 'main'","status":"PASS"},{"name":"<a>: Setting <https://example.net#nav>.hash = 'main'","status":"PASS"},{"name":"<area>: Setting <https://example.net#nav>.hash = 'main'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US>.hash = '##nav'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US>.hash = '##nav'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.hash = '#main'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.hash = '#main'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.hash = '#'","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.hash = '#'","status":"PASS"},{"name":"<a>: Setting <https://example.net?lang=en-US#nav>.hash = ''","status":"PASS"},{"name":"<area>: Setting <https://example.net?lang=en-US#nav>.hash = ''","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '#foo bar'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '#foo bar'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '#foo\"bar'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '#foo\"bar'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '#foo<bar'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '#foo<bar'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '#foo>bar'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '#foo>bar'","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '#foo`bar'","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '#foo`bar'","status":"PASS"},{"name":"<a>: Setting <a:/>.hash = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' Simple percent-encoding; tabs and newlines are removed","status":"PASS"},{"name":"<area>: Setting <a:/>.hash = '\u0000\u0001\t\n\r\u001f !\"#$%&'()*+,-./09:;<=>?@AZ[\\]^_`az{|}~Éé' Simple percent-encoding; tabs and newlines are removed","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = 'a\u0000b' Percent-encode NULLs in fragment","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = 'a\u0000b' Percent-encode NULLs in fragment","status":"PASS"},{"name":"<a>: Setting <non-spec:/>.hash = 'a\u0000b' Percent-encode NULLs in fragment","status":"PASS"},{"name":"<area>: Setting <non-spec:/>.hash = 'a\u0000b' Percent-encode NULLs in fragment","status":"PASS"},{"name":"<a>: Setting <http://example.net>.hash = '%c3%89té' Bytes already percent-encoded are left as-is","status":"PASS"},{"name":"<area>: Setting <http://example.net>.hash = '%c3%89té' Bytes already percent-encoded are left as-is","status":"PASS"},{"name":"<a>: Setting <data:space                                                                                                                                  #fragment>.hash = '' Drop trailing spaces from trailing opaque paths","status":"PASS"},{"name":"<area>: Setting <data:space                                                                                                                                  #fragment>.hash = '' Drop trailing spaces from trailing opaque paths","status":"PASS"},{"name":"<a>: Setting <sc:space    #fragment>.hash = ''","status":"PASS"},{"name":"<area>: Setting <sc:space    #fragment>.hash = ''","status":"PASS"},{"name":"<a>: Setting <data:space  ?query#fragment>.hash = '' Do not drop trailing spaces from non-trailing opaque paths","status":"PASS"},{"name":"<area>: Setting <data:space  ?query#fragment>.hash = '' Do not drop trailing spaces from non-trailing opaque paths","status":"PASS"},{"name":"<a>: Setting <sc:space  ?query#fragment>.hash = ''","status":"PASS"},{"name":"<area>: Setting <sc:space  ?query#fragment>.hash = ''","status":"PASS"}]}