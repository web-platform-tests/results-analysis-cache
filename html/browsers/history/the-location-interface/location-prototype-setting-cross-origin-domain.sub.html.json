{"status":"OK","subtests":[{"name":"Cross-origin via document.domain: the prototype is null","status":"FAIL"},{"name":"Cross-origin via document.domain: setting the prototype to an empty object via Object.setPrototypeOf should throw a TypeError","status":"FAIL"},{"name":"Cross-origin via document.domain: setting the prototype to an empty object via __proto__ should throw a \"SecurityError\" DOMException","status":"FAIL"},{"name":"Cross-origin via document.domain: setting the prototype to an empty object via Reflect.setPrototypeOf should return false","status":"FAIL"},{"name":"Cross-origin via document.domain: the prototype must still be its original value","status":"FAIL"},{"name":"Cross-origin via document.domain: setting the prototype to its original value via Object.setPrototypeOf should not throw","status":"PASS"},{"name":"Cross-origin via document.domain: setting the prototype to its original value via __proto__ should throw a \"SecurityError\" since it ends up in CrossOriginGetOwnProperty","status":"FAIL"},{"name":"Cross-origin via document.domain: setting the prototype to its original value via Reflect.setPrototypeOf should return true","status":"PASS"}]}