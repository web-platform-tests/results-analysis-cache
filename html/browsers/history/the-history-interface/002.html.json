{"status":"OK","subtests":[{"name":"history.length should update when loading pages in an iframe","status":"PASS"},{"name":"history.length should update when setting location.hash","status":"PASS"},{"name":"history.replaceState must exist","status":"PASS"},{"name":"history.replaceState must exist within iframes","status":"PASS"},{"name":"initial history.state should be null","status":"PASS"},{"name":"history.length should not update when replacing a state with no URL","status":"PASS"},{"name":"history.state should update after a state is pushed","status":"PASS"},{"name":"hash should not change when replaceState is called without a URL","status":"PASS"},{"name":"history.length should not update when replacing a state with a URL","status":"PASS"},{"name":"hash should change when replaceState is called with a URL","status":"PASS"},{"name":"replaceState must replace the existing state and not add an extra one","status":"PASS"},{"name":"replaceState must replace the existing state without altering the forward history","status":"PASS"},{"name":"replaceState must not be allowed to create invalid URLs","status":"PASS"},{"name":"replaceState must not be allowed to create cross-origin URLs","status":"PASS"},{"name":"replaceState must not be allowed to create cross-origin URLs (about:blank)","status":"PASS"},{"name":"replaceState must not be allowed to create cross-origin URLs (data:URI)","status":"PASS"},{"name":"security errors are expected to be thrown in the context of the document that owns the history object","status":"PASS"},{"name":"replaceState must be able to set location.pathname","status":"PASS"},{"name":"replaceState must be able to set absolute URLs to the same host","status":"PASS"},{"name":"replaceState must not remove any tasks queued by the history traversal task source","status":"PASS"},{"name":".go must queue a task with the history traversal task source (run asynchronously)","status":"PASS"},{"name":"replaceState must not fire hashchange events","status":"PASS"},{"name":"replaceState must not be able to use a function as data","status":"PASS"},{"name":"replaceState must not be able to use a DOM node as data","status":"PASS"},{"name":"replaceState must be able to use an error object as data","status":"FAIL"},{"name":"security errors are expected to be thrown in the context of the document that owns the history object (2)","status":"PASS"},{"name":"replaceState must be able to make structured clones of complex objects","status":"PASS"},{"name":"history.state should also reference a clone of the original object","status":"PASS"},{"name":"history.state should be a clone of the original object, not a reference to it","status":"PASS"},{"name":"popstate event should fire when navigation occurs","status":"PASS"},{"name":"popstate event should pass the state data","status":"PASS"},{"name":"state data should cope with circular object references","status":"PASS"},{"name":"state data should be a clone of the original object, not a reference to it","status":"PASS"},{"name":"history.state should also reference a clone of the original object (2)","status":"PASS"},{"name":"history.state should be a clone of the original object, not a reference to it (2)","status":"PASS"},{"name":"history.state should be identical to the object passed to the event handler unless history.state is updated","status":"PASS"},{"name":"replaceState should not actually load the new URL","status":"PASS"},{"name":"reloading a replaced state should actually load the new URL","status":"PASS"}]}