{"status":"OK","subtests":[{"name":"mouse got/lost pointercapture: subsequent events to target","status":"PASS"},{"name":"mouse pointerover/enter should be received before the target receives gotpointercapture even when the pointer is not over it.","status":"PASS"},{"name":"mouse gotpointercapture.pointerType is correct.","status":"PASS"},{"name":"mouse gotpointercapture event is a PointerEvent event","status":"PASS"},{"name":"mouse gotpointercapture.isTrusted value is true","status":"FAIL"},{"name":"mouse gotpointercapture.composed value is valid","status":"FAIL"},{"name":"mouse gotpointercapture.bubbles value is valid","status":"PASS"},{"name":"mouse gotpointercapture.cancelable value is valid","status":"PASS"},{"name":"mouse gotpointercapture.pressure value is valid","status":"PASS"},{"name":"mouse gotpointercapture properties for pointerType = mouse","status":"PASS"},{"name":"mouse lostpointercapture.pointerType is correct.","status":"PASS"},{"name":"mouse lostpointercapture event is a PointerEvent event","status":"PASS"},{"name":"mouse lostpointercapture.isTrusted value is true","status":"FAIL"},{"name":"mouse lostpointercapture.composed value is valid","status":"FAIL"},{"name":"mouse lostpointercapture.bubbles value is valid","status":"PASS"},{"name":"mouse lostpointercapture.cancelable value is valid","status":"PASS"},{"name":"mouse lostpointercapture.pressure value is valid","status":"PASS"},{"name":"mouse lostpointercapture properties for pointerType = mouse","status":"PASS"},{"name":"mouse pointerout/leave should not be received unless the target just lost the capture.","status":"PASS"}]}