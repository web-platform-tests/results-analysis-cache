{"status":"OK","subtests":[{"name":"CaptureController in window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must succeed before capture starts","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must succeed before capture starts","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must succeed before capture starts","status":"PASS"},{"name":"setFocusBehavior(\"invalid\") must throw TypeError if focusBehavior is invalid","status":"PASS"},{"name":"setFocusBehavior(\"null\") must throw TypeError if focusBehavior is invalid","status":"PASS"},{"name":"setFocusBehavior(\"undefined\") must throw TypeError if focusBehavior is invalid","status":"PASS"},{"name":"setFocusBehavior(\"[object Object]\") must throw TypeError if focusBehavior is invalid","status":"PASS"},{"name":"setFocusBehavior(\"true\") must throw TypeError if focusBehavior is invalid","status":"PASS"},{"name":"getDisplayMedia({controller}) must succeed","status":"PASS"},{"name":"getDisplayMedia({controller: invalid}) must fail with TypeError","status":"PASS"},{"name":"getDisplayMedia({controller: null}) must fail with TypeError","status":"PASS"},{"name":"getDisplayMedia({controller: [object Object]}) must fail with TypeError","status":"PASS"},{"name":"getDisplayMedia({controller: true}) must fail with TypeError","status":"PASS"},{"name":"getDisplayMedia({controller}) must fail with InvalidStateError if controller is bound","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must succeed when window of opportunity is opened if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must succeed when window of opportunity is opened if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must succeed when window of opportunity is opened if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must succeed when window of opportunity is opened if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must succeed when window of opportunity is opened if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must succeed when window of opportunity is opened if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must succeed when getDisplayMedia promise is pending if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must succeed when getDisplayMedia promise is pending if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must succeed when getDisplayMedia promise is pending if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must succeed when getDisplayMedia promise is pending if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must succeed when getDisplayMedia promise is pending if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must succeed when getDisplayMedia promise is pending if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError when track is stopped if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError when track is stopped if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError when track is stopped if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError when track is stopped if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError when track is stopped if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError when track is stopped if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError if capturing a monitor","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError if capturing a monitor","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError if capturing a monitor","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError when window of opportunity is closed if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError when window of opportunity is closed if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError when window of opportunity is closed if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError when window of opportunity is closed if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError when window of opportunity is closed if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError when window of opportunity is closed if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError the second time if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError the second time if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError the second time if capturing a window","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError the second time if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError the second time if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError the second time if capturing a browser","status":"PASS"},{"name":"setFocusBehavior(\"focus-capturing-application\") must throw InvalidStateError if getDisplayMedia fails","status":"PASS"},{"name":"setFocusBehavior(\"focus-captured-surface\") must throw InvalidStateError if getDisplayMedia fails","status":"PASS"},{"name":"setFocusBehavior(\"no-focus-change\") must throw InvalidStateError if getDisplayMedia fails","status":"PASS"}]}