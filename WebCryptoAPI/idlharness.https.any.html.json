{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: original interface mixin defined","status":"PASS"},{"name":"Partial interface mixin WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Partial interface Window: member names are unique","status":"PASS"},{"name":"Window includes GlobalEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowEventHandlers: member names are unique","status":"PASS"},{"name":"Window includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"WorkerGlobalScope includes WindowOrWorkerGlobalScope: member names are unique","status":"PASS"},{"name":"Window includes AnimationFrameProvider: member names are unique","status":"PASS"},{"name":"Window includes WindowSessionStorage: member names are unique","status":"PASS"},{"name":"Window includes WindowLocalStorage: member names are unique","status":"PASS"},{"name":"Crypto interface: existence and properties of interface object","status":"PASS"},{"name":"Crypto interface object length","status":"PASS"},{"name":"Crypto interface object name","status":"PASS"},{"name":"Crypto interface: existence and properties of interface prototype object","status":"PASS"},{"name":"Crypto interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"Crypto interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"Crypto interface: attribute subtle","status":"PASS"},{"name":"Crypto interface: operation getRandomValues(ArrayBufferView)","status":"PASS"},{"name":"Crypto must be primary interface of crypto","status":"PASS"},{"name":"Stringification of crypto","status":"PASS"},{"name":"Crypto interface: crypto must inherit property \"subtle\" with the proper type","status":"PASS"},{"name":"Crypto interface: crypto must inherit property \"getRandomValues(ArrayBufferView)\" with the proper type","status":"PASS"},{"name":"Crypto interface: calling getRandomValues(ArrayBufferView) on crypto with too few arguments must throw TypeError","status":"PASS"},{"name":"CryptoKey interface: existence and properties of interface object","status":"PASS"},{"name":"CryptoKey interface object length","status":"PASS"},{"name":"CryptoKey interface object name","status":"PASS"},{"name":"CryptoKey interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CryptoKey interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CryptoKey interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CryptoKey interface: attribute type","status":"PASS"},{"name":"CryptoKey interface: attribute extractable","status":"PASS"},{"name":"CryptoKey interface: attribute algorithm","status":"PASS"},{"name":"CryptoKey interface: attribute usages","status":"PASS"},{"name":"SubtleCrypto interface: existence and properties of interface object","status":"PASS"},{"name":"SubtleCrypto interface object length","status":"PASS"},{"name":"SubtleCrypto interface object name","status":"PASS"},{"name":"SubtleCrypto interface: existence and properties of interface prototype object","status":"PASS"},{"name":"SubtleCrypto interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"SubtleCrypto interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"SubtleCrypto interface: operation encrypt(AlgorithmIdentifier, CryptoKey, BufferSource)","status":"PASS"},{"name":"SubtleCrypto interface: operation decrypt(AlgorithmIdentifier, CryptoKey, BufferSource)","status":"PASS"},{"name":"SubtleCrypto interface: operation sign(AlgorithmIdentifier, CryptoKey, BufferSource)","status":"PASS"},{"name":"SubtleCrypto interface: operation verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource)","status":"PASS"},{"name":"SubtleCrypto interface: operation digest(AlgorithmIdentifier, BufferSource)","status":"PASS"},{"name":"SubtleCrypto interface: operation generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>)","status":"PASS"},{"name":"SubtleCrypto interface: operation deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>)","status":"PASS"},{"name":"SubtleCrypto interface: operation deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long)","status":"PASS"},{"name":"SubtleCrypto interface: operation importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>)","status":"PASS"},{"name":"SubtleCrypto interface: operation exportKey(KeyFormat, CryptoKey)","status":"PASS"},{"name":"SubtleCrypto interface: operation wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier)","status":"PASS"},{"name":"SubtleCrypto interface: operation unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>)","status":"PASS"},{"name":"SubtleCrypto must be primary interface of crypto.subtle","status":"PASS"},{"name":"Stringification of crypto.subtle","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"encrypt(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling encrypt(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"decrypt(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling decrypt(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"sign(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling sign(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"digest(AlgorithmIdentifier, BufferSource)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling digest(AlgorithmIdentifier, BufferSource) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"exportKey(KeyFormat, CryptoKey)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling exportKey(KeyFormat, CryptoKey) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"SubtleCrypto interface: crypto.subtle must inherit property \"unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type","status":"PASS"},{"name":"SubtleCrypto interface: calling unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError","status":"PASS"},{"name":"Window interface: attribute crypto","status":"PASS"}]}