{"status":"OK","subtests":[{"name":"idl_test setup","status":"PASS"},{"name":"idl_test validation","status":"PASS"},{"name":"ReadableStreamDefaultReader includes ReadableStreamGenericReader: member names are unique","status":"PASS"},{"name":"ReadableStreamBYOBReader includes ReadableStreamGenericReader: member names are unique","status":"PASS"},{"name":"ReadableStream interface: existence and properties of interface object","status":"PASS"},{"name":"ReadableStream interface object length","status":"PASS"},{"name":"ReadableStream interface object name","status":"PASS"},{"name":"ReadableStream interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ReadableStream interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ReadableStream interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ReadableStream interface: attribute locked","status":"FAIL"},{"name":"ReadableStream interface: operation cancel(optional any)","status":"FAIL"},{"name":"ReadableStream interface: operation getReader(optional ReadableStreamGetReaderOptions)","status":"FAIL"},{"name":"ReadableStream interface: operation pipeThrough(ReadableWritablePair, optional StreamPipeOptions)","status":"FAIL"},{"name":"ReadableStream interface: operation pipeTo(WritableStream, optional StreamPipeOptions)","status":"FAIL"},{"name":"ReadableStream interface: operation tee()","status":"FAIL"},{"name":"ReadableStream interface: async iterable<any>","status":"FAIL"},{"name":"ReadableStream must be primary interface of new ReadableStream()","status":"PASS"},{"name":"Stringification of new ReadableStream()","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"locked\" with the proper type","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"cancel(optional any)\" with the proper type","status":"PASS"},{"name":"ReadableStream interface: calling cancel(optional any) on new ReadableStream() with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"getReader(optional ReadableStreamGetReaderOptions)\" with the proper type","status":"PASS"},{"name":"ReadableStream interface: calling getReader(optional ReadableStreamGetReaderOptions) on new ReadableStream() with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"pipeThrough(ReadableWritablePair, optional StreamPipeOptions)\" with the proper type","status":"PASS"},{"name":"ReadableStream interface: calling pipeThrough(ReadableWritablePair, optional StreamPipeOptions) on new ReadableStream() with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"pipeTo(WritableStream, optional StreamPipeOptions)\" with the proper type","status":"PASS"},{"name":"ReadableStream interface: calling pipeTo(WritableStream, optional StreamPipeOptions) on new ReadableStream() with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStream interface: new ReadableStream() must inherit property \"tee()\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: existence and properties of interface object","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface object length","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface object name","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: operation read()","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: operation releaseLock()","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: attribute closed","status":"FAIL"},{"name":"ReadableStreamDefaultReader interface: operation cancel(optional any)","status":"FAIL"},{"name":"ReadableStreamDefaultReader must be primary interface of (new ReadableStream()).getReader()","status":"FAIL"},{"name":"Stringification of (new ReadableStream()).getReader()","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: (new ReadableStream()).getReader() must inherit property \"read()\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: (new ReadableStream()).getReader() must inherit property \"releaseLock()\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: (new ReadableStream()).getReader() must inherit property \"closed\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: (new ReadableStream()).getReader() must inherit property \"cancel(optional any)\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultReader interface: calling cancel(optional any) on (new ReadableStream()).getReader() with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStreamBYOBReader interface: existence and properties of interface object","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface object length","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface object name","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: operation read(ArrayBufferView)","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: operation releaseLock()","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: attribute closed","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: operation cancel(optional any)","status":"FAIL"},{"name":"ReadableStreamBYOBReader must be primary interface of (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' })","status":"FAIL"},{"name":"Stringification of (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' })","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"read(ArrayBufferView)\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: calling read(ArrayBufferView) on (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) with too few arguments must throw TypeError","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"releaseLock()\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"closed\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"cancel(optional any)\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBReader interface: calling cancel(optional any) on (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) with too few arguments must throw TypeError","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: existence and properties of interface object","status":"FAIL"},{"name":"ReadableStreamDefaultController interface object length","status":"FAIL"},{"name":"ReadableStreamDefaultController interface object name","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: attribute desiredSize","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: operation close()","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: operation enqueue(optional any)","status":"FAIL"},{"name":"ReadableStreamDefaultController interface: operation error(optional any)","status":"FAIL"},{"name":"ReadableStreamDefaultController must be primary interface of self.readableStreamDefaultController","status":"FAIL"},{"name":"Stringification of self.readableStreamDefaultController","status":"PASS"},{"name":"ReadableStreamDefaultController interface: self.readableStreamDefaultController must inherit property \"desiredSize\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultController interface: self.readableStreamDefaultController must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultController interface: self.readableStreamDefaultController must inherit property \"enqueue(optional any)\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultController interface: calling enqueue(optional any) on self.readableStreamDefaultController with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableStreamDefaultController interface: self.readableStreamDefaultController must inherit property \"error(optional any)\" with the proper type","status":"PASS"},{"name":"ReadableStreamDefaultController interface: calling error(optional any) on self.readableStreamDefaultController with too few arguments must throw TypeError","status":"PASS"},{"name":"ReadableByteStreamController interface: existence and properties of interface object","status":"FAIL"},{"name":"ReadableByteStreamController interface object length","status":"FAIL"},{"name":"ReadableByteStreamController interface object name","status":"FAIL"},{"name":"ReadableByteStreamController interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ReadableByteStreamController interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ReadableByteStreamController interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ReadableByteStreamController interface: attribute byobRequest","status":"FAIL"},{"name":"ReadableByteStreamController interface: attribute desiredSize","status":"FAIL"},{"name":"ReadableByteStreamController interface: operation close()","status":"FAIL"},{"name":"ReadableByteStreamController interface: operation enqueue(ArrayBufferView)","status":"FAIL"},{"name":"ReadableByteStreamController interface: operation error(optional any)","status":"FAIL"},{"name":"ReadableByteStreamController must be primary interface of self.readableByteStreamController","status":"FAIL"},{"name":"Stringification of self.readableByteStreamController","status":"FAIL"},{"name":"ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"byobRequest\" with the proper type","status":"FAIL"},{"name":"ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"desiredSize\" with the proper type","status":"FAIL"},{"name":"ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"close()\" with the proper type","status":"FAIL"},{"name":"ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"enqueue(ArrayBufferView)\" with the proper type","status":"FAIL"},{"name":"ReadableByteStreamController interface: calling enqueue(ArrayBufferView) on self.readableByteStreamController with too few arguments must throw TypeError","status":"FAIL"},{"name":"ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"error(optional any)\" with the proper type","status":"FAIL"},{"name":"ReadableByteStreamController interface: calling error(optional any) on self.readableByteStreamController with too few arguments must throw TypeError","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: existence and properties of interface object","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface object length","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface object name","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: existence and properties of interface prototype object","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: existence and properties of interface prototype object's \"constructor\" property","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: existence and properties of interface prototype object's @@unscopables property","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: attribute view","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: operation respond(unsigned long long)","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: operation respondWithNewView(ArrayBufferView)","status":"FAIL"},{"name":"ReadableStreamBYOBRequest must be primary interface of self.readableStreamByobRequest","status":"FAIL"},{"name":"Stringification of self.readableStreamByobRequest","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"view\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"respond(unsigned long long)\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: calling respond(unsigned long long) on self.readableStreamByobRequest with too few arguments must throw TypeError","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"respondWithNewView(ArrayBufferView)\" with the proper type","status":"FAIL"},{"name":"ReadableStreamBYOBRequest interface: calling respondWithNewView(ArrayBufferView) on self.readableStreamByobRequest with too few arguments must throw TypeError","status":"FAIL"},{"name":"WritableStream interface: existence and properties of interface object","status":"PASS"},{"name":"WritableStream interface object length","status":"PASS"},{"name":"WritableStream interface object name","status":"PASS"},{"name":"WritableStream interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WritableStream interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WritableStream interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WritableStream interface: attribute locked","status":"FAIL"},{"name":"WritableStream interface: operation abort(optional any)","status":"FAIL"},{"name":"WritableStream interface: operation close()","status":"PASS"},{"name":"WritableStream interface: operation getWriter()","status":"PASS"},{"name":"WritableStream must be primary interface of new WritableStream()","status":"PASS"},{"name":"Stringification of new WritableStream()","status":"PASS"},{"name":"WritableStream interface: new WritableStream() must inherit property \"locked\" with the proper type","status":"PASS"},{"name":"WritableStream interface: new WritableStream() must inherit property \"abort(optional any)\" with the proper type","status":"PASS"},{"name":"WritableStream interface: calling abort(optional any) on new WritableStream() with too few arguments must throw TypeError","status":"PASS"},{"name":"WritableStream interface: new WritableStream() must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"WritableStream interface: new WritableStream() must inherit property \"getWriter()\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: existence and properties of interface object","status":"PASS"},{"name":"WritableStreamDefaultWriter interface object length","status":"PASS"},{"name":"WritableStreamDefaultWriter interface object name","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: attribute closed","status":"FAIL"},{"name":"WritableStreamDefaultWriter interface: attribute desiredSize","status":"FAIL"},{"name":"WritableStreamDefaultWriter interface: attribute ready","status":"FAIL"},{"name":"WritableStreamDefaultWriter interface: operation abort(optional any)","status":"FAIL"},{"name":"WritableStreamDefaultWriter interface: operation close()","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: operation releaseLock()","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: operation write(optional any)","status":"FAIL"},{"name":"WritableStreamDefaultWriter must be primary interface of (new WritableStream()).getWriter()","status":"PASS"},{"name":"Stringification of (new WritableStream()).getWriter()","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"closed\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"desiredSize\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"ready\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"abort(optional any)\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: calling abort(optional any) on (new WritableStream()).getWriter() with too few arguments must throw TypeError","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"close()\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"releaseLock()\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: (new WritableStream()).getWriter() must inherit property \"write(optional any)\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultWriter interface: calling write(optional any) on (new WritableStream()).getWriter() with too few arguments must throw TypeError","status":"PASS"},{"name":"WritableStreamDefaultController interface: existence and properties of interface object","status":"FAIL"},{"name":"WritableStreamDefaultController interface object length","status":"PASS"},{"name":"WritableStreamDefaultController interface object name","status":"PASS"},{"name":"WritableStreamDefaultController interface: existence and properties of interface prototype object","status":"PASS"},{"name":"WritableStreamDefaultController interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"WritableStreamDefaultController interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"WritableStreamDefaultController interface: operation error(optional any)","status":"FAIL"},{"name":"WritableStreamDefaultController must be primary interface of self.writableStreamDefaultController","status":"PASS"},{"name":"Stringification of self.writableStreamDefaultController","status":"PASS"},{"name":"WritableStreamDefaultController interface: self.writableStreamDefaultController must inherit property \"error(optional any)\" with the proper type","status":"PASS"},{"name":"WritableStreamDefaultController interface: calling error(optional any) on self.writableStreamDefaultController with too few arguments must throw TypeError","status":"PASS"},{"name":"TransformStream interface: existence and properties of interface object","status":"PASS"},{"name":"TransformStream interface object length","status":"PASS"},{"name":"TransformStream interface object name","status":"PASS"},{"name":"TransformStream interface: existence and properties of interface prototype object","status":"PASS"},{"name":"TransformStream interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"TransformStream interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"TransformStream interface: attribute readable","status":"FAIL"},{"name":"TransformStream interface: attribute writable","status":"FAIL"},{"name":"TransformStream must be primary interface of new TransformStream()","status":"PASS"},{"name":"Stringification of new TransformStream()","status":"PASS"},{"name":"TransformStream interface: new TransformStream() must inherit property \"readable\" with the proper type","status":"PASS"},{"name":"TransformStream interface: new TransformStream() must inherit property \"writable\" with the proper type","status":"PASS"},{"name":"TransformStreamDefaultController interface: existence and properties of interface object","status":"FAIL"},{"name":"TransformStreamDefaultController interface object length","status":"PASS"},{"name":"TransformStreamDefaultController interface object name","status":"PASS"},{"name":"TransformStreamDefaultController interface: existence and properties of interface prototype object","status":"PASS"},{"name":"TransformStreamDefaultController interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"TransformStreamDefaultController interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"TransformStreamDefaultController interface: attribute desiredSize","status":"FAIL"},{"name":"TransformStreamDefaultController interface: operation enqueue(optional any)","status":"FAIL"},{"name":"TransformStreamDefaultController interface: operation error(optional any)","status":"FAIL"},{"name":"TransformStreamDefaultController interface: operation terminate()","status":"PASS"},{"name":"TransformStreamDefaultController must be primary interface of self.transformStreamDefaultController","status":"PASS"},{"name":"Stringification of self.transformStreamDefaultController","status":"PASS"},{"name":"TransformStreamDefaultController interface: self.transformStreamDefaultController must inherit property \"desiredSize\" with the proper type","status":"PASS"},{"name":"TransformStreamDefaultController interface: self.transformStreamDefaultController must inherit property \"enqueue(optional any)\" with the proper type","status":"PASS"},{"name":"TransformStreamDefaultController interface: calling enqueue(optional any) on self.transformStreamDefaultController with too few arguments must throw TypeError","status":"PASS"},{"name":"TransformStreamDefaultController interface: self.transformStreamDefaultController must inherit property \"error(optional any)\" with the proper type","status":"PASS"},{"name":"TransformStreamDefaultController interface: calling error(optional any) on self.transformStreamDefaultController with too few arguments must throw TypeError","status":"PASS"},{"name":"TransformStreamDefaultController interface: self.transformStreamDefaultController must inherit property \"terminate()\" with the proper type","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: existence and properties of interface object","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface object length","status":"FAIL"},{"name":"ByteLengthQueuingStrategy interface object name","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: existence and properties of interface prototype object","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: attribute highWaterMark","status":"FAIL"},{"name":"ByteLengthQueuingStrategy interface: attribute size","status":"FAIL"},{"name":"ByteLengthQueuingStrategy must be primary interface of new ByteLengthQueuingStrategy({ highWaterMark: 5 })","status":"PASS"},{"name":"Stringification of new ByteLengthQueuingStrategy({ highWaterMark: 5 })","status":"PASS"},{"name":"ByteLengthQueuingStrategy interface: new ByteLengthQueuingStrategy({ highWaterMark: 5 }) must inherit property \"highWaterMark\" with the proper type","status":"FAIL"},{"name":"ByteLengthQueuingStrategy interface: new ByteLengthQueuingStrategy({ highWaterMark: 5 }) must inherit property \"size\" with the proper type","status":"PASS"},{"name":"CountQueuingStrategy interface: existence and properties of interface object","status":"PASS"},{"name":"CountQueuingStrategy interface object length","status":"FAIL"},{"name":"CountQueuingStrategy interface object name","status":"PASS"},{"name":"CountQueuingStrategy interface: existence and properties of interface prototype object","status":"PASS"},{"name":"CountQueuingStrategy interface: existence and properties of interface prototype object's \"constructor\" property","status":"PASS"},{"name":"CountQueuingStrategy interface: existence and properties of interface prototype object's @@unscopables property","status":"PASS"},{"name":"CountQueuingStrategy interface: attribute highWaterMark","status":"FAIL"},{"name":"CountQueuingStrategy interface: attribute size","status":"FAIL"},{"name":"CountQueuingStrategy must be primary interface of new CountQueuingStrategy({ highWaterMark: 5 })","status":"PASS"},{"name":"Stringification of new CountQueuingStrategy({ highWaterMark: 5 })","status":"PASS"},{"name":"CountQueuingStrategy interface: new CountQueuingStrategy({ highWaterMark: 5 }) must inherit property \"highWaterMark\" with the proper type","status":"FAIL"},{"name":"CountQueuingStrategy interface: new CountQueuingStrategy({ highWaterMark: 5 }) must inherit property \"size\" with the proper type","status":"PASS"}]}