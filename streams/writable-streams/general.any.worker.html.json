{"status":"OK","subtests":[{"name":"desiredSize on a released writer","status":"FAIL"},{"name":"desiredSize initial value","status":"FAIL"},{"name":"desiredSize on a writer for a closed stream","status":"FAIL"},{"name":"desiredSize on a writer for an errored stream","status":"FAIL"},{"name":"ws.getWriter() on a closing WritableStream","status":"FAIL"},{"name":"ws.getWriter() on a closed WritableStream","status":"FAIL"},{"name":"ws.getWriter() on an aborted WritableStream","status":"FAIL"},{"name":"ws.getWriter() on an errored WritableStream","status":"FAIL"},{"name":"closed and ready on a released writer","status":"FAIL"},{"name":"WritableStream should call underlying sink methods as methods","status":"FAIL"},{"name":"methods should not not have .apply() or .call() called","status":"FAIL"},{"name":"WritableStream's strategy.size should not be called as a method","status":"FAIL"},{"name":"redundant releaseLock() is no-op","status":"FAIL"},{"name":"ready promise should fire before closed on releaseLock","status":"FAIL"},{"name":"Subclassing WritableStream should work","status":"FAIL"},{"name":"the locked getter should return true if the stream has a writer","status":"FAIL"}]}