{"status":"OK","subtests":[{"name":"CountQueuingStrategy: Can construct a with a valid high water mark","status":"PASS"},{"name":"CountQueuingStrategy: Constructor behaves as expected with strange arguments","status":"FAIL"},{"name":"CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules","status":"FAIL"},{"name":"CountQueuingStrategy: size is the same function across all instances","status":"PASS"},{"name":"CountQueuingStrategy: size should have the right name","status":"PASS"},{"name":"CountQueuingStrategy: subclassing should work correctly","status":"PASS"},{"name":"ByteLengthQueuingStrategy: Can construct a with a valid high water mark","status":"PASS"},{"name":"ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments","status":"FAIL"},{"name":"ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules","status":"FAIL"},{"name":"ByteLengthQueuingStrategy: size is the same function across all instances","status":"PASS"},{"name":"ByteLengthQueuingStrategy: size should have the right name","status":"PASS"},{"name":"ByteLengthQueuingStrategy: subclassing should work correctly","status":"PASS"},{"name":"CountQueuingStrategy: size should have the right length","status":"PASS"},{"name":"ByteLengthQueuingStrategy: size should have the right length","status":"PASS"},{"name":"CountQueuingStrategy: size behaves as expected with strange arguments","status":"PASS"},{"name":"ByteLengthQueuingStrategy: size behaves as expected with strange arguments","status":"PASS"}]}