{"status":"OK","subtests":[{"name":"Can get the ReadableStreamBYOBReader constructor indirectly","status":"FAIL"},{"name":"Can get the ReadableByteStreamController constructor indirectly","status":"FAIL"},{"name":"ReadableStreamBYOBReader enforces a brand check on its argument","status":"FAIL"},{"name":"ReadableStreamBYOBReader.prototype.closed enforces a brand check","status":"FAIL"},{"name":"ReadableStreamBYOBReader.prototype.cancel enforces a brand check","status":"FAIL"},{"name":"ReadableStreamBYOBReader.prototype.read enforces a brand check","status":"FAIL"},{"name":"ReadableStreamBYOBReader.prototype.releaseLock enforces a brand check","status":"FAIL"},{"name":"ReadableByteStreamController enforces a brand check on its arguments","status":"FAIL"},{"name":"ReadableByteStreamController can't be given a fully-constructed ReadableStream","status":"FAIL"},{"name":"ReadableByteStreamController.prototype.byobRequest enforces a brand check","status":"FAIL"},{"name":"ReadableByteStreamController.prototype.close enforces a brand check","status":"FAIL"},{"name":"ReadableByteStreamController.prototype.enqueue enforces a brand check","status":"FAIL"},{"name":"ReadableByteStreamController.prototype.error enforces a brand check","status":"FAIL"},{"name":"ReadableStreamBYOBRequest enforces brand checks","status":"FAIL"}]}