{"status":"OK","subtests":[{"name":"backpressure allows no transforms with a default identity transform and no reader","status":"FAIL"},{"name":"backpressure only allows one transform() with a identity transform with a readable HWM of 1 and no reader","status":"FAIL"},{"name":"transform() should keep being called as long as there is no backpressure","status":"FAIL"},{"name":"writes should resolve as soon as transform completes","status":"FAIL"},{"name":"calling pull() before the first write() with backpressure should work","status":"FAIL"},{"name":"transform() should be able to read the chunk it just enqueued","status":"FAIL"},{"name":"blocking transform() should cause backpressure","status":"FAIL"},{"name":"writer.closed should resolve after readable is canceled during start","status":"FAIL"},{"name":"writer.closed should resolve after readable is canceled with backpressure","status":"FAIL"},{"name":"writer.closed should resolve after readable is canceled with no backpressure","status":"FAIL"},{"name":"cancelling the readable should cause a pending write to resolve","status":"FAIL"},{"name":"cancelling the readable side of a TransformStream should abort an empty pipe","status":"FAIL"},{"name":"cancelling the readable side of a TransformStream should abort an empty pipe after startup","status":"FAIL"},{"name":"cancelling the readable side of a TransformStream should abort a full pipe","status":"FAIL"}]}