{"status":"OK","subtests":[{"name":"calling undefined callbacks throws","status":"PASS"},{"name":"Attributes without type constraints will work as before.","status":"PASS"},{"name":"trustedTypes.createPolicy(.., null) creates empty policy.","status":"PASS"},{"name":"TestPolicyTrustedHTML0 (TrustedHTML: s => s)","status":"PASS"},{"name":"TestPolicyTrustedHTML1 (TrustedHTML: s => null)","status":"PASS"},{"name":"TestPolicyTrustedHTML2 (TrustedHTML: s => \"well, \" + s)","status":"PASS"},{"name":"TestPolicyTrustedHTML3 (TrustedHTML: s => { throw new Error() })","status":"PASS"},{"name":"TestPolicyTrustedHTML4 (TrustedHTML: s => { aGlobalVarForSideEffectTesting = s; return s })","status":"PASS"},{"name":"TestPolicyTrustedHTML5 (TrustedHTML: s => aGlobalVarForSideEffectTesting + s)","status":"PASS"},{"name":"TestPolicyTrustedHTML6 (TrustedHTML: function () { [native code] })","status":"PASS"},{"name":"TestPolicyTrustedHTML7 (TrustedHTML: s => aGlobalFunction(s))","status":"PASS"},{"name":"TestPolicyTrustedScript0 (TrustedScript: s => s)","status":"PASS"},{"name":"TestPolicyTrustedScript1 (TrustedScript: s => null)","status":"PASS"},{"name":"TestPolicyTrustedScript2 (TrustedScript: s => \"well, \" + s)","status":"PASS"},{"name":"TestPolicyTrustedScript3 (TrustedScript: s => { throw new Error() })","status":"PASS"},{"name":"TestPolicyTrustedScript4 (TrustedScript: s => { aGlobalVarForSideEffectTesting = s; return s })","status":"PASS"},{"name":"TestPolicyTrustedScript5 (TrustedScript: s => aGlobalVarForSideEffectTesting + s)","status":"PASS"},{"name":"TestPolicyTrustedScript6 (TrustedScript: function () { [native code] })","status":"PASS"},{"name":"TestPolicyTrustedScript7 (TrustedScript: s => aGlobalFunction(s))","status":"PASS"},{"name":"TestPolicyTrustedScriptURL0 (TrustedScriptURL: s => s)","status":"PASS"},{"name":"TestPolicyTrustedScriptURL1 (TrustedScriptURL: s => null)","status":"PASS"},{"name":"TestPolicyTrustedScriptURL2 (TrustedScriptURL: s => s + \"#duck\")","status":"PASS"},{"name":"TestPolicyTrustedScriptURL3 (TrustedScriptURL: s => { throw new Error() })","status":"PASS"},{"name":"TestPolicyTrustedScriptURL4 (TrustedScriptURL: s => s + \"#\" + aGlobalVarForSideEffectTesting)","status":"PASS"},{"name":"TestPolicyTrustedScriptURL5 (TrustedScriptURL: function () { [native code] })","status":"PASS"},{"name":"TestPolicyTrustedScriptURL6 (TrustedScriptURL: s => anotherGlobalFunction(s))","status":"PASS"}]}