{"status":"OK","subtests":[{"name":"Invalid JSON","status":"FAIL"},{"name":"Mismatching the top-level schema / should throw for top-level non-objects","status":"FAIL"},{"name":"Mismatching the top-level schema / should throw if imports is a non-object","status":"FAIL"},{"name":"Mismatching the top-level schema / should throw if scopes is a non-object","status":"FAIL"},{"name":"Mismatching the top-level schema / should ignore unspecified top-level entries","status":"FAIL"},{"name":"Mismatching the specifier map schema / should ignore entries where the address is not a string, array, or null","status":"FAIL"},{"name":"Mismatching the specifier map schema / should ignore entries where the specifier key is an empty string","status":"FAIL"},{"name":"Mismatching the specifier map schema / should ignore members of an address array that are not strings","status":"FAIL"},{"name":"Mismatching the specifier map schema / should throw if a scope's value is not an object","status":"FAIL"},{"name":"Normalization / should normalize empty import maps to have imports and scopes keys","status":"FAIL"},{"name":"Normalization / should normalize an import map without imports to have imports","status":"FAIL"},{"name":"Normalization / should normalize an import map without scopes to have scopes","status":"FAIL"},{"name":"Normalization / should normalize addresses to arrays","status":"FAIL"}]}