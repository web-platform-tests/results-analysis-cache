{"status":"OK","subtests":[{"name":"Relative URL-like specifier keys / should absolutize strings prefixed with ./, ../, or / into the corresponding URLs","status":"FAIL"},{"name":"Relative URL-like specifier keys / should not absolutize strings prefixed with ./, ../, or / with a data: URL base","status":"FAIL"},{"name":"Relative URL-like specifier keys / should absolutize the literal strings ./, ../, or / with no suffix","status":"FAIL"},{"name":"Relative URL-like specifier keys / should treat percent-encoded variants of ./, ../, or / as bare specifiers","status":"FAIL"},{"name":"Absolute URL specifier keys / Accept all absolute URL specifier keys even with fetch schemes as URLs","status":"FAIL"},{"name":"Absolute URL specifier keys / should parse absolute URLs, treating unparseable ones as bare specifiers","status":"FAIL"},{"name":"Absolute URL specifier keys / should sort correctly (issue #181)","status":"FAIL"}]}